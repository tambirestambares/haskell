
==================== FINAL INTERFACE ====================
2018-06-10 20:36:02.234249 UTC

interface IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Settings 8022
  interface hash: eced816ed2e0a766cacf92100423b52f
  ABI hash: bc7e615098106e7dd104b5d41b99250e
  export-list hash: 2e20317c315cd43f11c789913a839a20
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cbc38002978950e0bba09c4b12db4018
  sig of: Nothing
  used TH splices: True
  where
exports:
  Settings.combineScripts
  Settings.combineSettings
  Settings.combineStylesheets
  Settings.compileTimeAppSettings
  Settings.configSettingsYmlBS
  Settings.configSettingsYmlValue
  Settings.widgetFile
  Settings.widgetFileSettings
  Settings.AppSettings{Settings.AppSettings appAnalytics appAuthDummyLogin appCopyright appDatabaseConf appDetailedRequestLogging appHost appIpFromHeader appMutableStatic appPort appReloadTemplates appRoot appShouldLogAll appSkipCombining appStaticDir}
module dependencies:
package dependencies: StateVar-1.1.1.0 adjunctions-4.4
                      aeson-1.2.4.0 aeson-compat-0.3.7.1 ansi-terminal-0.8.0.4
                      appar-0.1.4 array-0.5.2.0 asn1-encoding-0.9.5 asn1-parse-0.9.4
                      asn1-types-0.3.2 async-2.1.1.1 attoparsec-0.13.2.2
                      attoparsec-iso8601-1.0.0.0 auto-update-0.1.4 base-4.10.1.0
                      base-compat-0.9.3 base-orphans-0.7 base64-bytestring-1.0.0.1
                      basement-0.0.7 basic-prelude-0.7.0 bifunctors-5.5.2 binary-0.8.5.1
                      blaze-builder-0.4.1.0 blaze-html-0.9.0.1 blaze-markup-0.8.2.1
                      bsb-http-chunked-0.0.0.2 byteable-0.1.1 byteorder-1.0.4
                      bytestring-0.10.8.2 case-insensitive-1.2.0.11 cereal-0.5.5.0
                      chunked-data-0.3.1 cipher-aes-0.2.11 classy-prelude-1.4.0
                      classy-prelude-conduit-1.4.0 classy-prelude-yesod-1.4.0
                      clientsession-0.9.1.2 colour-2.3.4 comonad-5.0.3 conduit-1.3.0.2
                      conduit-extra-1.3.0 connection-0.2.8 containers-0.5.10.2
                      contravariant-1.4.1 cookie-0.4.4 cprng-aes-0.6.1 crypto-api-0.13.3
                      crypto-cipher-types-0.0.9 crypto-random-0.0.9 cryptonite-0.25
                      cryptonite-conduit-0.2.2 css-text-0.1.3.0 data-default-0.7.1.1
                      data-default-class-0.1.2.0 data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.3.0
                      deepseq-generics-0.2.0.0 directory-1.3.0.2 distributive-0.5.3
                      dlist-0.8.0.4 dlist-instances-0.1.1.1 easy-file-0.2.2
                      email-validate-2.3.2.5 entropy-0.3.8 exceptions-0.8.3
                      fast-logger-2.4.11 file-embed-0.0.10.1 filepath-1.4.1.2 free-5.0.2
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 hashable-1.2.7.0
                      haskell-src-exts-1.20.2 haskell-src-meta-0.8.0.2 hourglass-0.2.11
                      http-api-data-0.3.7.2 http-client-0.5.12.1 http-client-tls-0.3.5.3
                      http-conduit-2.3.1 http-date-0.0.7 http-types-0.12.1 http2-1.6.3
                      integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1 iproute-1.7.5
                      kan-extensions-5.1 keys-3.12 lifted-base-0.2.3.12 memory-0.14.16
                      mime-types-0.1.0.7 monad-control-1.0.2.3 monad-logger-0.3.28.5
                      monad-loops-0.4.3 mono-traversable-1.0.8.1
                      mono-traversable-instances-0.1.0.0 mtl-2.2.2
                      mutable-containers-0.3.4 network-2.6.3.5 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 pem-0.2.4 persistent-2.8.2
                      persistent-postgresql-2.8.2.0 persistent-template-2.5.4
                      pointed-5.0.1 postgresql-libpq-0.9.4.1 postgresql-simple-0.5.3.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 profunctors-5.2.2
                      psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2 resourcet-1.2.1
                      safe-0.3.17 say-0.1.0.0 scientific-0.3.6.2 securemem-0.1.10
                      semigroupoids-5.2.2 shakespeare-2.0.15 silently-1.2.5
                      simple-sendfile-0.2.27 skein-1.0.9.4 socks-0.5.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 streaming-commons-0.1.19
                      stringsearch-0.3.6.6 tagged-0.8.5 tagsoup-0.14.6
                      template-haskell-2.12.0.0 text-1.2.3.0 time-1.8.0.2
                      time-locale-compat-0.1.1.4 tls-1.4.1 transformers-0.5.2.0
                      transformers-base-0.4.4 transformers-compat-0.5.1.4 unix-2.7.2.2
                      unix-compat-0.5.0.1 unix-time-0.3.8 unliftio-0.2.7.0
                      unliftio-core-0.1.1.0 unordered-containers-0.2.9.0
                      utf8-string-1.0.1.1 uuid-types-1.0.3 vault-0.3.1.0 vector-0.12.0.1
                      vector-algorithms-0.7.0.1 vector-instances-3.4 wai-3.2.1.2
                      wai-app-static-3.1.6.2 wai-extra-3.0.22.0 wai-logger-2.3.2
                      warp-3.2.22 word8-0.1.3 x509-1.7.3 x509-store-1.6.6
                      x509-system-1.6.6 x509-validation-1.6.10 xml-conduit-1.8.0
                      xml-types-0.3.6 xss-sanitize-0.3.5.7 yaml-0.8.30 yesod-1.6.0
                      yesod-core-1.6.5 yesod-form-1.6.1 yesod-newsfeed-1.6.1.0
                      yesod-persistent-1.6.0 yesod-static-1.6.0 zlib-0.6.2
orphans: mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
         vector-instances-3.4:Data.Vector.Instances
         base-orphans-0.7:Data.Orphans
         persistent-template-2.5.4:Database.Persist.TH
         http-client-0.5.12.1:Network.HTTP.Client.Request
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         haskell-src-exts-1.20.2:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         colour-2.3.4:Data.Colour crypto-api-0.13.3:Crypto.Classes
         basement-0.0.7:Basement.UArray.Base basement-0.0.7:Basement.Block
         unix-time-0.3.8:Data.UnixTime.Diff network-2.6.3.5:Network.Socket
         stm-2.4.5.0:Control.Monad.STM
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.2.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         aeson-1.2.4.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats basement-0.0.7:Basement.Block.Base
                         basement-0.0.7:Basement.Monad
                         basement-0.0.7:Basement.MutableBuilder basement-0.0.7:Basement.Nat
                         basement-0.0.7:Basement.NonEmpty
                         basement-0.0.7:Basement.Numerical.Subtractive
                         basement-0.0.7:Basement.PrimType basement-0.0.7:Basement.String
                         basement-0.0.7:Basement.String.Encoding.ASCII7
                         basement-0.0.7:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.7:Basement.String.Encoding.UTF16
                         basement-0.0.7:Basement.String.Encoding.UTF32
                         basement-0.0.7:Basement.Types.OffsetSize
                         basement-0.0.7:Basement.UArray.Base
                         basement-0.0.7:Basement.UTF8.Base
                         bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped
                         conduit-1.3.0.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.2:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.4:Data.DList
                         email-validate-2.3.2.5:Text.Email.Parser
                         free-5.0.2:Control.Comonad.Cofree free-5.0.2:Control.Monad.Free
                         free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.Syntax
                         http-client-0.5.12.1:Network.HTTP.Client iproute-1.7.5:Data.IP.Addr
                         iproute-1.7.5:Data.IP.Range kan-extensions-5.1:Data.Functor.Day
                         keys-3.12:Data.Key
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         mono-traversable-1.0.8.1:Data.Containers
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
                         mutable-containers-0.3.4:Data.Mutable.BRef
                         mutable-containers-0.3.4:Data.Mutable.Class
                         mutable-containers-0.3.4:Data.Mutable.DLList
                         mutable-containers-0.3.4:Data.Mutable.Deque
                         mutable-containers-0.3.4:Data.Mutable.PRef
                         mutable-containers-0.3.4:Data.Mutable.SRef
                         mutable-containers-0.3.4:Data.Mutable.URef
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.15:Text.Internal.Css
                         shakespeare-2.0.15:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         vector-instances-3.4:Data.Vector.Instances
                         xml-types-0.3.6:Data.XML.Types
                         yesod-core-1.6.5:Yesod.Core.Class.Handler
                         yesod-core-1.6.5:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.5:Yesod.Core.Types yesod-static-1.6.0:Yesod.Static
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  aeson-1.2.4.0:Data.Aeson 59ed467bf2a56ed78d89081da86bffb7
import  -/  aeson-1.2.4.0:Data.Aeson.Types.FromJSON 9f5cc28a0d17c3f3058e4106e7cbcccc
import  -/  aeson-1.2.4.0:Data.Aeson.Types.Internal 784b71bc86ee16e29783284c611f3837
import  -/  base-4.10.1.0:Control.Category e391ae0ab2b20aef43c0035a99142ed1
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.String 2224f2a50682577469081924dd1e46df
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Exception 471142a05c31a6533c10399f8190de35
import  -/  base-4.10.1.0:GHC.IO.Unsafe 0aa7e5adc396c9f651baef415ce018da
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  bytestring-0.10.8.2:Data.ByteString.Unsafe 5d17f041f2eb6e4f6434714de163dee9
import  -/  classy-prelude-yesod-1.4.0:ClassyPrelude.Yesod 6e63d09b6783cf666f14cfeb5b1eede3
import  -/  data-default-class-0.1.2.0:Data.Default.Class 278151683eef69e272ea7389d6cf3aaf
import  -/  file-embed-0.0.10.1:Data.FileEmbed 42be5b4af1ba4f18894f4108d616f3fa
import  -/  persistent-postgresql-2.8.2.0:Database.Persist.Postgresql 96ae6311fad18b19e9619e3fd2e51c56
import  -/  streaming-commons-0.1.19:Data.Streaming.Network.Internal 073f09694b15b761231c7b87d82fd8b7
import  -/  template-haskell-2.12.0.0:Language.Haskell.TH.Syntax 89a468ec90271d2f2ee599dc8318cc79
import  -/  text-1.2.3.0:Data.Text.Internal 5d98ec4bb692174ed69de0b9299773d5
import  -/  warp-3.2.22:Network.Wai.Handler.Warp ecf4778d662cbbc739afe05602e1522b
import  -/  yaml-0.8.30:Data.Yaml 367b921532f33b270bcb9388b9894a53
import  -/  yaml-0.8.30:Data.Yaml.Config 662e4f8b786d0c79860efa221e8b3ecd
import  -/  yesod-1.6.0:Yesod.Default.Config2 425307ed9b2f1a4d7b7892cd92180dc0
import  -/  yesod-1.6.0:Yesod.Default.Util 5daf6278d2bdca3c20c1f606a16b0381
import  -/  yesod-core-1.6.5:Yesod.Routes.Class db5a9b6e59076a16718df494c0c67557
import  -/  yesod-static-1.6.0:Yesod.Static f19a70462b76dfc61a3ddf7e4b60feeb
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
addDependentFile "config/settings.yml"
070027da476f91b32221b3509e9f252e
  $fFromJSONAppSettings ::
    Data.Aeson.Types.FromJSON.FromJSON Settings.AppSettings
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Settings.AppSettings
                  Settings.$fFromJSONAppSettings_$cparseJSON
                  Settings.$fFromJSONAppSettings_$cparseJSONList -}
15fe33d959547d3df7cc9927d31ead48
  $fFromJSONAppSettings1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (", encountered "#) -}
c09ee6b9f4a71a1eb447d48d9ea7848e
  $fFromJSONAppSettings2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[a]"#) -}
af4d52ee0ca92ed1c83c58fbc77eaff6
  $fFromJSONAppSettings3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("expected "#) -}
070027da476f91b32221b3509e9f252e
  $fFromJSONAppSettings4 ::
    Data.Aeson.Types.Internal.Object
    -> Data.Aeson.Types.Internal.Parser Settings.AppSettings
  {- Arity: 1, Strictness: <L,U> -}
b97e692503c4d966732c55eddb8f5579
  $fFromJSONAppSettings5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Settings.$fFromJSONAppSettings6) -}
0319f7e17d7f2b826052681ab31e7494
  $fFromJSONAppSettings6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AppSettings"#) -}
070027da476f91b32221b3509e9f252e
  $fFromJSONAppSettings_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Settings.AppSettings
  {- Arity: 1,
     Unfolding: (Data.Aeson.Types.FromJSON.withObject
                   @ Settings.AppSettings
                   Settings.$fFromJSONAppSettings5
                   Settings.$fFromJSONAppSettings4) -}
070027da476f91b32221b3509e9f252e
  $fFromJSONAppSettings_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Settings.AppSettings]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> let {
                        msg1 :: GHC.Base.String
                        = GHC.CString.unpackAppendCString#
                            Settings.$fFromJSONAppSettings3
                            (GHC.CString.unpackAppendCString#
                               Settings.$fFromJSONAppSettings2
                               (GHC.CString.unpackAppendCString#
                                  Settings.$fFromJSONAppSettings1
                                  (case wild of wild1 {
                                     Data.Aeson.Types.Internal.Object ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList10
                                     Data.Aeson.Types.Internal.String ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList8
                                     Data.Aeson.Types.Internal.Number ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList6
                                     Data.Aeson.Types.Internal.Bool ds1
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList4
                                     Data.Aeson.Types.Internal.Null
                                     -> Data.Aeson.Types.FromJSON.$dmliftParseJSONList1 })))
                      } in
                      (\ @ f4 :: * -> *
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                         (_ks :: Data.Aeson.Types.Internal.Success
                                   [Settings.AppSettings] f4 r) ->
                       kf
                         (GHC.List.reverse @ Data.Aeson.Types.Internal.JSONPathElement path)
                         msg1)
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Settings.AppSettings]>_R))
                   Data.Aeson.Types.Internal.Array a2
                   -> case a2 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      letrec {
                        $wgo :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (ww :: GHC.Prim.Int#) ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.>=# ww dt1) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.indexArray#
                                      @ Data.Aeson.Types.Internal.Value
                                      dt2
                                      (GHC.Prim.+# dt ww) of ds3 { Unit# ipv ->
                               GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Value
                                 ipv
                                 ($wgo (GHC.Prim.+# ww 1#)) }
                            GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                      } in
                      Settings.$fFromJSONAppSettings_go 0# ($wgo 0#) } }) -}
070027da476f91b32221b3509e9f252e
  $fFromJSONAppSettings_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> Data.Aeson.Types.Internal.Parser [Settings.AppSettings]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
88444b18257521a5cfcc99e8e06b2a43
  $tc'AppSettings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3183529167134668049##
                   17000272140745060862##
                   Settings.$trModule
                   Settings.$tc'AppSettings2
                   0#
                   Settings.$tc'AppSettings1) -}
60af969c552d877a21c4575206c31f7c
  $tc'AppSettings1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7abddb1a5cec9723163dabd16ac36841
  $tc'AppSettings2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Settings.$tc'AppSettings3) -}
20ddd50c53ca209f10ed64e437156d7e
  $tc'AppSettings3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AppSettings"#) -}
bc0cc48cae5084f6152130c9989bdebf
  $tcAppSettings :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14715692524274498013##
                   16491957083591106311##
                   Settings.$trModule
                   Settings.$tcAppSettings1
                   0#
                   GHC.Types.krep$*) -}
8a36412628c2bca502528c980abee76c
  $tcAppSettings1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Settings.$fFromJSONAppSettings6) -}
494f87a2a0b1551520a9cf7421f1be39
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Settings.$trModule3
                   Settings.$trModule1) -}
7f71ec44b8f136b45b94fae2d5748cfd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Settings.$trModule2) -}
b7dfa562c0289da5684438aedee33da1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Settings"#) -}
fb7dd0d82daf3998968aa9fea1753fa0
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Settings.$trModule4) -}
a17f6ec38a4e2419d3755fa8a3db36a6
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH"#) -}
070027da476f91b32221b3509e9f252e
  data AppSettings
    = AppSettings {appStaticDir :: GHC.Base.String,
                   appDatabaseConf :: Database.Persist.Postgresql.PostgresConf,
                   appRoot :: GHC.Base.Maybe Data.Text.Internal.Text,
                   appHost :: Data.Streaming.Network.Internal.HostPreference,
                   appPort :: GHC.Types.Int,
                   appIpFromHeader :: GHC.Types.Bool,
                   appDetailedRequestLogging :: GHC.Types.Bool,
                   appShouldLogAll :: GHC.Types.Bool,
                   appReloadTemplates :: GHC.Types.Bool,
                   appMutableStatic :: GHC.Types.Bool,
                   appSkipCombining :: GHC.Types.Bool,
                   appCopyright :: Data.Text.Internal.Text,
                   appAnalytics :: GHC.Base.Maybe Data.Text.Internal.Text,
                   appAuthDummyLogin :: GHC.Types.Bool}
070027da476f91b32221b3509e9f252e
  appAnalytics ::
    Settings.AppSettings -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds13 }) -}
070027da476f91b32221b3509e9f252e
  appAuthDummyLogin :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds14 }) -}
070027da476f91b32221b3509e9f252e
  appCopyright :: Settings.AppSettings -> Data.Text.Internal.Text
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds12 }) -}
070027da476f91b32221b3509e9f252e
  appDatabaseConf ::
    Settings.AppSettings -> Database.Persist.Postgresql.PostgresConf
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLL),1*U(A,1*U(U,U),A,A,A,A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds2 }) -}
070027da476f91b32221b3509e9f252e
  appDetailedRequestLogging :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds7 }) -}
070027da476f91b32221b3509e9f252e
  appHost ::
    Settings.AppSettings
    -> Data.Streaming.Network.Internal.HostPreference
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds4 }) -}
070027da476f91b32221b3509e9f252e
  appIpFromHeader :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds6 }) -}
070027da476f91b32221b3509e9f252e
  appMutableStatic :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds10 }) -}
070027da476f91b32221b3509e9f252e
  appPort :: Settings.AppSettings -> GHC.Types.Int
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLL),1*U(A,A,A,A,1*U(U),A,A,A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds5 }) -}
070027da476f91b32221b3509e9f252e
  appReloadTemplates :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds9 }) -}
070027da476f91b32221b3509e9f252e
  appRoot ::
    Settings.AppSettings -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds3 }) -}
070027da476f91b32221b3509e9f252e
  appShouldLogAll :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds8 }) -}
070027da476f91b32221b3509e9f252e
  appSkipCombining :: Settings.AppSettings -> GHC.Types.Bool
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds11 }) -}
070027da476f91b32221b3509e9f252e
  appStaticDir :: Settings.AppSettings -> GHC.Base.String
  RecSel Left Settings.AppSettings
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Settings.AppSettings) ->
                 case ds of wild { Settings.AppSettings ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ->
                 ds1 }) -}
c668d6d2930831a96f79ec906b99b5ca
  combineScripts ::
    Language.Haskell.TH.Syntax.Name
    -> [Yesod.Routes.Class.Route Yesod.Static.Static]
    -> Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 2,
     Unfolding: (Yesod.Static.combineScripts'
                   Settings.combineScripts1
                   Yesod.Static.$fDefaultCombineSettings_$cdef) -}
1a00cbfb6ce8d1d4d7e80cb5693defbf
  combineScripts1 :: GHC.Types.Bool
  {- Unfolding: (case Settings.compileTimeAppSettings of wild { Settings.AppSettings ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
d61071ec1c1887439f477e3dd0caa893
  combineSettings :: Yesod.Static.CombineSettings
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Yesod.Static.$fDefaultCombineSettings_$cdef -}
378cb4f2c371d3831d3452e156cd136a
  combineStylesheets ::
    Language.Haskell.TH.Syntax.Name
    -> [Yesod.Routes.Class.Route Yesod.Static.Static]
    -> Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 2,
     Unfolding: (Yesod.Static.combineStylesheets'
                   Settings.combineScripts1
                   Yesod.Static.$fDefaultCombineSettings_$cdef) -}
f3b88b2ac660e39b44f4513928ef7966
  compileTimeAppSettings :: Settings.AppSettings
  {- Unfolding: (case Data.Yaml.Config.applyEnvValue
                        GHC.Types.False
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text)
                        Settings.configSettingsYmlValue of wild {
                   DEFAULT -> Settings.compileTimeAppSettings3 wild
                   Data.Aeson.Types.Internal.Object obj
                   -> case (Settings.$fFromJSONAppSettings4 obj)
                             `cast`
                           (Data.Aeson.Types.Internal.N:Parser[0] <Settings.AppSettings>_R)
                             @ Data.Aeson.Types.Internal.Result
                             @ Settings.AppSettings
                             (GHC.Types.[] @ Data.Aeson.Types.Internal.JSONPathElement)
                             Settings.compileTimeAppSettings2
                             (Data.Aeson.Types.Internal.Success
                                @ Settings.AppSettings) of wild1 {
                        Data.Aeson.Types.Internal.Error e
                        -> Settings.compileTimeAppSettings1 e
                        Data.Aeson.Types.Internal.Success settings -> settings } }) -}
7c8c6b57de488fbf95f47f212e1e004a
  compileTimeAppSettings1 :: GHC.Base.String -> Settings.AppSettings
  {- Arity: 1, Strictness: <B,U>x -}
c6377224f22cc1446dbaec8126c63a68
  compileTimeAppSettings2 ::
    Data.Aeson.Types.Internal.JSONPath
    -> GHC.Base.String
    -> Data.Aeson.Types.Internal.Result Settings.AppSettings
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,U>m1,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.JSONPath)
                   (eta :: GHC.Base.String) ->
                 Data.Aeson.Types.Internal.Error @ Settings.AppSettings eta) -}
7bc5a9aa6656f54154de22a135a25d4e
  compileTimeAppSettings3 ::
    Data.Aeson.Types.Internal.Value -> Settings.AppSettings
  {- Arity: 1, Strictness: <B,1*U>x -}
8a264b8f19188530f951b2847a793f37
  configSettingsYmlBS :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.ByteString.Internal.ByteString #)
                        Settings.configSettingsYmlBS1 of ds { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c6740ac02536109fca040faeac9762d4
  configSettingsYmlBS1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.noDuplicate#
                        @ GHC.Prim.RealWorld
                        s of s' { DEFAULT ->
                 case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        s' of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    Data.ByteString.Internal.PS
                      Settings.configSettingsYmlBS2
                      (GHC.ForeignPtr.PlainForeignPtr ipv1)
                      0#
                      1874# #) } }) -}
dd18dcd0a94fd09ea17239ebdb0aef61
  configSettingsYmlBS2 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("# Values formatted like \"_env:ENV_VAR_NAME:default_value\" can be overridden by the specified environment variable.\n\
                 \# See https://github.com/yesodweb/yesod/wiki/Configuration#overriding-configuration-values-with-environment-variables\n\
                 \\n\
                 \static-dir:     \"_env:STATIC_DIR:static\"\n\
                 \host:           \"_env:HOST:*4\" # any IPv4 host\n\
                 \port:           \"_env:PORT:3000\" # NB: The port `yesod devel` uses is distinct from this value. Set the `yesod devel` port from the command line.\n\
                 \ip-from-header: \"_env:IP_FROM_HEADER:false\"\n\
                 \\n\
                 \# Default behavior: determine the application root from the request headers.\n\
                 \# Uncomment to set an explicit approot\n\
                 \#approot:        \"_env:APPROOT:http://localhost:3000\"\n\
                 \\n\
                 \# By default, `yesod devel` runs in development, and built executables use\n\
                 \# production settings (see below). To override this, use the following:\n\
                 \#\n\
                 \# development: false\n\
                 \\n\
                 \# Optional values with the following production defaults.\n\
                 \# In development, they default to the inverse.\n\
                 \#\n\
                 \# detailed-logging: false\n\
                 \# should-log-all: false\n\
                 \# reload-templates: false\n\
                 \# mutable-static: false\n\
                 \# skip-combining: false\n\
                 \# auth-dummy-login : false\n\
                 \\n\
                 \# NB: If you need a numeric value (e.g. 123) to parse as a String, wrap it in single quotes (e.g. \"_env:PGPASS:'123'\")\n\
                 \# See https://github.com/yesodweb/yesod/wiki/Configuration#parsing-numeric-values-as-strings\n\
                 \\n\
                 \database:\n\
                 \  # See config/test-settings.yml for an override during tests\n\
                 \  user:     \"_env:PGUSER:uzprholqutamhv\"\n\
                 \  password: \"_env:PGPASS:e9662390635de129ed1e266b568997b2cfc09c1c741aa5e40feb0a112d59004d\"\n\
                 \  host:     \"_env:PGHOST:ec2-23-23-247-245.compute-1.amazonaws.com\"\n\
                 \  port:     \"_env:PGPORT:5432\"\n\
                 \  database: \"_env:SQLITE_DATABASE:dffh9rjlfucq71\"\n\
                 \  poolsize: \"_env:SQLITE_POOLSIZE:10\"\n\
                 \\n\
                 \copyright: Insert copyright statement here\n\
                 \#analytics: UA-YOURCODE\n\
                 \\n\
                 \# psql -h ec2-23-23-247-245.compute-1.amazonaws.com -U uzprholqutamhv -d dffh9rjlfucq71"#) -}
f34a71e65b2ab53d8ef41ebfd7c94f5e
  configSettingsYmlValue :: Data.Aeson.Types.Internal.Value
  {- Unfolding: (case Data.Yaml.decodeEither'
                        @ Data.Aeson.Types.Internal.Value
                        Data.Aeson.Types.FromJSON.$fFromJSONValue
                        Settings.configSettingsYmlBS of wild {
                   Data.Either.Left x -> Settings.configSettingsYmlValue1 x
                   Data.Either.Right y -> y }) -}
432ebcd2ee6240578374870c434713a0
  configSettingsYmlValue1 ::
    Data.Yaml.Internal.ParseException
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <B,U>x -}
cd39ef7f625abc1190185ccc35aafb5e
  widgetFile ::
    GHC.Base.String
    -> Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Unfolding: (case Settings.compileTimeAppSettings of wild { Settings.AppSettings ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 case ds8 of wild1 {
                   GHC.Types.False -> Settings.widgetFile7
                   GHC.Types.True -> Settings.widgetFile1 } }) -}
76e0e03025395bd73e403738621d6c4c
  widgetFile1 ::
    GHC.IO.FilePath
    -> Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.IO.FilePath) ->
                 Yesod.Default.Util.combine
                   Yesod.Default.Util.widgetFileReload1
                   x
                   GHC.Types.True
                   Settings.widgetFile2) -}
353911a08392581747cf39f0d7d96253
  widgetFile2 :: [Yesod.Default.Util.TemplateLanguage]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Yesod.Default.Util.TemplateLanguage
                   Settings.widgetFile6
                   Settings.widgetFile3) -}
a276c2f1438634685a4d0fcc9d0ae771
  widgetFile3 :: [Yesod.Default.Util.TemplateLanguage]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Yesod.Default.Util.TemplateLanguage
                   Yesod.Default.Util.defaultTemplateLanguages7
                   Settings.widgetFile4) -}
6b14035dafce5c0cfe7e7ac7ca8f51f3
  widgetFile4 :: [Yesod.Default.Util.TemplateLanguage]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Yesod.Default.Util.TemplateLanguage
                   Yesod.Default.Util.defaultTemplateLanguages4
                   Settings.widgetFile5) -}
2bea0c533a5c7a39fd97edfbdc08f78c
  widgetFile5 :: [Yesod.Default.Util.TemplateLanguage]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Yesod.Default.Util.TemplateLanguage
                   Yesod.Default.Util.defaultTemplateLanguages1
                   (GHC.Types.[] @ Yesod.Default.Util.TemplateLanguage)) -}
cbe916f1594616149f3df06547b89032
  widgetFile6 :: Yesod.Default.Util.TemplateLanguage
  {- Strictness: m,
     Unfolding: (Yesod.Default.Util.TemplateLanguage
                   GHC.Types.False
                   Yesod.Default.Util.defaultTemplateLanguages10
                   Settings.widgetFile_whamletFile'
                     `cast`
                   (<GHC.IO.FilePath>_R
                    ->_R Sym (Language.Haskell.TH.Syntax.N:Q[0]
                                  <Language.Haskell.TH.Syntax.Exp>_N))
                   Settings.widgetFile_whamletFile'
                     `cast`
                   (<GHC.IO.FilePath>_R
                    ->_R Sym (Language.Haskell.TH.Syntax.N:Q[0]
                                  <Language.Haskell.TH.Syntax.Exp>_N))) -}
3a7b79ec81a7b5c4fe898b1aec37ed2d
  widgetFile7 ::
    GHC.IO.FilePath
    -> Language.Haskell.TH.Syntax.Q Language.Haskell.TH.Syntax.Exp
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.IO.FilePath) ->
                 Yesod.Default.Util.combine
                   Yesod.Default.Util.widgetFileNoReload1
                   x
                   GHC.Types.False
                   Settings.widgetFile2) -}
9a3f908c20d6ae41bddfdf70c1c2c8db
  widgetFileSettings :: Yesod.Default.Util.WidgetFileSettings
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Yesod.Default.Util.$fDefaultWidgetFileSettings_$cdef -}
df52900506512e6f2e084d47a0247085
  widgetFile_whamletFile' ::
    GHC.IO.FilePath
    -> forall (m :: * -> *).
       Language.Haskell.TH.Syntax.Quasi m =>
       m Language.Haskell.TH.Syntax.Exp
  {- Arity: 2,
     Unfolding: (Text.Hamlet.hamletFile2
                   Yesod.Core.Widget.whamlet2
                     `cast`
                   (Sym (Language.Haskell.TH.Syntax.N:Q[0]
                             <Text.Hamlet.HamletRules>_N))
                   Text.Hamlet.Parse.defaultHamletSettings) -}
instance Data.Aeson.Types.FromJSON.FromJSON [Settings.AppSettings]
  = Settings.$fFromJSONAppSettings
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

