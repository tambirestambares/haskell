
==================== FINAL INTERFACE ====================
2018-06-13 00:53:49.359909 UTC

interface IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Foundation [family instance module] 8022
  interface hash: 77d55662a028b5307d53af0faf353a87
  ABI hash: d8dfd41e5ca0aa4fa64f74ef82850bd5
  export-list hash: 89c2ecffb016fb73f9c146a7b3705823
  orphan hash: 0e6b3d4709da302b6db48e2c05159724
  flag hash: ce37577645c863d1e202093446d26b7a
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.isAuthenticated
  Foundation.resourcesApp
  Foundation.unsafeHandler
  Foundation.App{Foundation.App appConnPool appHttpManager appLogger appSettings appStatic}
  Foundation.DB
  Foundation.Form
  Foundation.Handler
  Foundation.MenuItem{Foundation.MenuItem menuItemAccessCallback menuItemLabel menuItemRoute}
  Foundation.MenuTypes{Foundation.NavbarLeft Foundation.NavbarRight}
  Foundation.Widget
  Yesod.Routes.Class.Route{Foundation.AuthR Foundation.CommentR Foundation.CursoIdR Foundation.CursoR Foundation.EscolaCursoIdR Foundation.EscolaIdR Foundation.EscolaR Foundation.FaviconR Foundation.HomeR Foundation.HostIdR Foundation.HostOfertaR Foundation.HostR Foundation.LoginAppR Foundation.OfertaIdR Foundation.OfertaR Foundation.ProfileR Foundation.RobotsR Foundation.StaticR Foundation.VolOfertaR Foundation.VoluntarioIdR Foundation.VoluntarioOfertaIdR Foundation.VoluntarioOfertaR Foundation.VoluntarioR}
module dependencies: Import.NoFoundation Model Settings
                     Settings.StaticFiles
package dependencies: StateVar-1.1.1.0 adjunctions-4.4
                      aeson-1.2.4.0 aeson-compat-0.3.7.1 ansi-terminal-0.8.0.4
                      appar-0.1.4 array-0.5.2.0 asn1-encoding-0.9.5 asn1-parse-0.9.4
                      asn1-types-0.3.2 async-2.1.1.1 attoparsec-0.13.2.2
                      attoparsec-iso8601-1.0.0.0 authenticate-1.3.4 auto-update-0.1.4
                      base-4.10.1.0 base-compat-0.9.3 base-orphans-0.7
                      base64-bytestring-1.0.0.1 basement-0.0.7 basic-prelude-0.7.0
                      bifunctors-5.5.2 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.0.1 blaze-markup-0.8.2.1 bsb-http-chunked-0.0.0.2
                      byteable-0.1.1 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.5.0 chunked-data-0.3.1
                      cipher-aes-0.2.11 classy-prelude-1.4.0 classy-prelude-conduit-1.4.0
                      classy-prelude-yesod-1.4.0 clientsession-0.9.1.2 colour-2.3.4
                      comonad-5.0.3 conduit-1.3.0.2 conduit-extra-1.3.0 connection-0.2.8
                      containers-0.5.10.2 contravariant-1.4.1 cookie-0.4.4
                      cprng-aes-0.6.1 crypto-api-0.13.3 crypto-cipher-types-0.0.9
                      crypto-random-0.0.9 cryptonite-0.25 cryptonite-conduit-0.2.2
                      css-text-0.1.3.0 data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.3.0
                      deepseq-generics-0.2.0.0 directory-1.3.0.2 distributive-0.5.3
                      dlist-0.8.0.4 dlist-instances-0.1.1.1 easy-file-0.2.2
                      email-validate-2.3.2.5 entropy-0.3.8 exceptions-0.8.3
                      fast-logger-2.4.11 file-embed-0.0.10.1 filepath-1.4.1.2 free-5.0.2
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 hashable-1.2.7.0
                      haskell-src-exts-1.20.2 haskell-src-meta-0.8.0.2 hjsmin-0.2.0.2
                      hourglass-0.2.11 http-api-data-0.3.7.2 http-client-0.5.12.1
                      http-client-tls-0.3.5.3 http-conduit-2.3.1 http-date-0.0.7
                      http-types-0.12.1 http2-1.6.3 integer-gmp-1.0.1.0
                      integer-logarithms-1.0.2.1 iproute-1.7.5 kan-extensions-5.1
                      keys-3.12 language-javascript-0.6.0.11 lifted-base-0.2.3.12
                      memory-0.14.16 mime-types-0.1.0.7 monad-control-1.0.2.3
                      monad-logger-0.3.28.5 monad-loops-0.4.3 mono-traversable-1.0.8.1
                      mono-traversable-instances-0.1.0.0 mtl-2.2.2
                      mutable-containers-0.3.4 network-2.6.3.5 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 pem-0.2.4 persistent-2.8.2
                      persistent-postgresql-2.8.2.0 persistent-template-2.5.4
                      pointed-5.0.1 postgresql-libpq-0.9.4.1 postgresql-simple-0.5.3.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 profunctors-5.2.2
                      psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2 resourcet-1.2.1
                      safe-0.3.17 say-0.1.0.0 scientific-0.3.6.2 securemem-0.1.10
                      semigroupoids-5.2.2 shakespeare-2.0.15 silently-1.2.5
                      simple-sendfile-0.2.27 skein-1.0.9.4 socks-0.5.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 streaming-commons-0.1.19
                      stringsearch-0.3.6.6 tagged-0.8.5 tagsoup-0.14.6
                      tagstream-conduit-0.5.5.3 template-haskell-2.12.0.0 text-1.2.3.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 tls-1.4.1
                      transformers-0.5.2.0 transformers-base-0.4.4
                      transformers-compat-0.5.1.4 unix-2.7.2.2 unix-compat-0.5.0.1
                      unix-time-0.3.8 unliftio-0.2.7.0 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vault-0.3.1.0 vector-0.12.0.1 vector-algorithms-0.7.0.1
                      vector-instances-3.4 wai-3.2.1.2 wai-app-static-3.1.6.2
                      wai-extra-3.0.22.0 wai-logger-2.3.2 warp-3.2.22 word8-0.1.3
                      x509-1.7.3 x509-store-1.6.6 x509-system-1.6.6
                      x509-validation-1.6.10 xml-conduit-1.8.0 xml-types-0.3.6
                      xss-sanitize-0.3.5.7 yaml-0.8.30 yesod-1.6.0 yesod-auth-1.6.3
                      yesod-core-1.6.5 yesod-form-1.6.1 yesod-newsfeed-1.6.1.0
                      yesod-persistent-1.6.0 yesod-static-1.6.0 zlib-0.6.2
orphans: mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
         vector-instances-3.4:Data.Vector.Instances
         base-orphans-0.7:Data.Orphans yesod-auth-1.6.3:Yesod.Auth
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         http-client-0.5.12.1:Network.HTTP.Client.Request
         persistent-template-2.5.4:Database.Persist.TH
         haskell-src-exts-1.20.2:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         colour-2.3.4:Data.Colour crypto-api-0.13.3:Crypto.Classes
         basement-0.0.7:Basement.UArray.Base basement-0.0.7:Basement.Block
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         unix-time-0.3.8:Data.UnixTime.Diff stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         network-2.6.3.5:Network.Socket
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Model
                         adjunctions-4.4:Data.Functor.Rep
                         aeson-1.2.4.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats basement-0.0.7:Basement.Block.Base
                         basement-0.0.7:Basement.Monad
                         basement-0.0.7:Basement.MutableBuilder basement-0.0.7:Basement.Nat
                         basement-0.0.7:Basement.NonEmpty
                         basement-0.0.7:Basement.Numerical.Subtractive
                         basement-0.0.7:Basement.PrimType basement-0.0.7:Basement.String
                         basement-0.0.7:Basement.String.Encoding.ASCII7
                         basement-0.0.7:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.7:Basement.String.Encoding.UTF16
                         basement-0.0.7:Basement.String.Encoding.UTF32
                         basement-0.0.7:Basement.Types.OffsetSize
                         basement-0.0.7:Basement.UArray.Base
                         basement-0.0.7:Basement.UTF8.Base
                         bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped
                         conduit-1.3.0.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.2:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.4:Data.DList
                         email-validate-2.3.2.5:Text.Email.Parser
                         free-5.0.2:Control.Comonad.Cofree free-5.0.2:Control.Monad.Free
                         free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.Syntax
                         http-client-0.5.12.1:Network.HTTP.Client iproute-1.7.5:Data.IP.Addr
                         iproute-1.7.5:Data.IP.Range kan-extensions-5.1:Data.Functor.Day
                         keys-3.12:Data.Key
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         mono-traversable-1.0.8.1:Data.Containers
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
                         mutable-containers-0.3.4:Data.Mutable.BRef
                         mutable-containers-0.3.4:Data.Mutable.Class
                         mutable-containers-0.3.4:Data.Mutable.DLList
                         mutable-containers-0.3.4:Data.Mutable.Deque
                         mutable-containers-0.3.4:Data.Mutable.PRef
                         mutable-containers-0.3.4:Data.Mutable.SRef
                         mutable-containers-0.3.4:Data.Mutable.URef
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.15:Text.Internal.Css
                         shakespeare-2.0.15:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         vector-instances-3.4:Data.Vector.Instances
                         xml-types-0.3.6:Data.XML.Types yesod-auth-1.6.3:Yesod.Auth
                         yesod-auth-1.6.3:Yesod.Auth.Routes
                         yesod-core-1.6.5:Yesod.Core.Class.Handler
                         yesod-core-1.6.5:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.5:Yesod.Core.Types yesod-static-1.6.0:Yesod.Static
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  Import.NoFoundation 59f0ef6118ff56e81205ef2710189a9f
  exports: fa7d1ef7da7eebf9eb2c311331618bf6
import  -/  Model 690c55138ea9a00345704b644bb474fa
  CursoId c695852b5e03fd55c8fc207d1c48272d
  EscolaId 1519b8df2bc0e28159f673a3985e1237
  HostId fd93dc245fcb1c68fa6e01d0cc9f8479
  OfertaId dd3edd46fcb3c6386bfb6e16788a7dac
  UniqueUser 8aa8ecc3313d8e29ed09153c0d5776a9
  User 37c78ea60fa82ebce45768455437658e
  UserId 9d45d9626bd651bb03d3b9df318fb2cd
  VoluntarioId a4f83e6665e4ac264753d7652d5a98bc
  VoluntarioOfertaId 1f8132671e25df5e097ae49e89a385b2
  userIdent 94135242490ba36ca9d8e1c1d670a223
  userPassword 94135242490ba36ca9d8e1c1d670a223
import  -/  Settings bc7e615098106e7dd104b5d41b99250e
  AppSettings 070027da476f91b32221b3509e9f252e
  appAnalytics 070027da476f91b32221b3509e9f252e
  appAuthDummyLogin 070027da476f91b32221b3509e9f252e
  appCopyright 070027da476f91b32221b3509e9f252e
  appRoot 070027da476f91b32221b3509e9f252e
  appShouldLogAll 070027da476f91b32221b3509e9f252e
  appStaticDir 070027da476f91b32221b3509e9f252e
  widgetFile cd39ef7f625abc1190185ccc35aafb5e
import  -/  Settings.StaticFiles 50602f0cfce09ecc3f156855e0d2d9b9
  css_bootstrap_css 94ac299f9569e426141add15fd2ed284
import  -/  base-4.10.1.0:Control.Category e391ae0ab2b20aef43c0035a99142ed1
import  -/  base-4.10.1.0:Control.Monad.IO.Class 9d78cd0f73a837f3c00753bd212b9f2c
import  -/  base-4.10.1.0:Data.Either d7dae5d9bf298dee616e465c14b5d60e
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Functor 2ffda4f936b8f474394d93205750aff3
import  -/  base-4.10.1.0:Data.Maybe 07738c5485acb328136bb15596f8b845
import  -/  base-4.10.1.0:Data.Tuple 8fa1305aa5032ea35e2a54fa5f1e78f9
import  -/  base-4.10.1.0:Data.Type.Equality ca4e91e1727dfab58cd5d13c463acc81
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  basic-prelude-0.7.0:CorePrelude 204dd12fa827d6d6fc1668cfcb3794da
import  -/  blaze-html-0.9.0.1:Text.Blaze.Html 468aab522c7592fdb73824e7b322b38c
import  -/  blaze-markup-0.8.2.1:Text.Blaze.Internal 859bd4d6b8178868c6ae28cbb7cd7ff0
import  -/  case-insensitive-1.2.0.11:Data.CaseInsensitive b6f9ade0a148b0644abefa85faac5138
import  -/  case-insensitive-1.2.0.11:Data.CaseInsensitive.Internal 76b8af1b4466fb80f582505b592f0720
import  -/  classy-prelude-1.4.0:ClassyPrelude 94ca66bb95645fe3793bdc39d5b11165
import  -/  containers-0.5.10.2:Data.Set.Internal b207250e4d0053f17172bfafbcd5c82f
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  hjsmin-0.2.0.2:Text.Jasmine ca6021fd48545d3a489d81570020043c
import  -/  http-client-0.5.12.1:Network.HTTP.Client.Types f11e3d9808ae313374f1c30aa8de9a75
import  -/  monad-logger-0.3.28.5:Control.Monad.Logger 530ebba9800da0d12ffa9d68e2e032d7
import  -/  path-pieces-0.2.1:Web.PathPieces 7df989414bcb9206954cfcefd18ebe7c
import  -/  persistent-2.8.2:Database.Persist.Class.PersistEntity ebafaf6069c7e096aacccb493c5e975c
import  -/  persistent-2.8.2:Database.Persist.Class.PersistStore 5f5e05043066ee7e65ed1eb9cecf0e7b
import  -/  persistent-2.8.2:Database.Persist.Class.PersistUnique 372fd4e9e3b751a8d69dfc83a3f952b9
import  -/  persistent-2.8.2:Database.Persist.Sql 73dc41be1bd32cfe0a70f0c182faefbf
import  -/  persistent-2.8.2:Database.Persist.Sql.Run 6c73a87b6f1df7313b996a60c8a4119d
import  -/  persistent-2.8.2:Database.Persist.Sql.Types 35daedf30324c2d6d980f5eb1ce460e7
import  -/  persistent-2.8.2:Database.Persist.Sql.Types.Internal 2e2c9ab1303f547260c68538560ca6d7
import  -/  shakespeare-2.0.15:Text.Hamlet 1e1da8d64770ccc6e1474927d0dfe647
import  -/  shakespeare-2.0.15:Text.Internal.Css 0eeedb387cc160a453a1a5056c81b40a
import  -/  shakespeare-2.0.15:Text.Shakespeare.I18N 3e60b164c8e667830e6fd3942f43cd14
import  -/  text-1.2.3.0:Data.Text 0519455f2b04d2a7315c2959461dd14e
import  -/  text-1.2.3.0:Data.Text.Encoding 1883f408b7c463836758a0e7407807ac
import  -/  text-1.2.3.0:Data.Text.Internal 5d98ec4bb692174ed69de0b9299773d5
import  -/  transformers-0.5.2.0:Control.Monad.Trans.Reader cc12564dc0d2121844a0316ee821dfff
import  -/  yesod-1.6.0:Yesod.Default.Util 5daf6278d2bdca3c20c1f606a16b0381
import  -/  yesod-auth-1.6.3:Yesod.Auth fc444fb3df32f255ceac80aa5737ff55
import  -/  yesod-auth-1.6.3:Yesod.Auth.Dummy a4b3becb40cec892aa408e08b0e2e025
import  -/  yesod-auth-1.6.3:Yesod.Auth.OpenId 653f48e346176a19c499cce51262b0ee
import  -/  yesod-auth-1.6.3:Yesod.Auth.Routes b77a093e842f94b7dd679f18c378a92c
import  -/  yesod-core-1.6.5:Yesod.Core.Class.Breadcrumbs 25c2c4759f8afe665cbd08f214f8d9a6
import  -/  yesod-core-1.6.5:Yesod.Core.Class.Handler 499cbd7b71704e2af35e72637ed2a109
import  -/  yesod-core-1.6.5:Yesod.Core.Class.Yesod 143243d8375d7f138d2129c36c856ce7
import  -/  yesod-core-1.6.5:Yesod.Core.Content bd188f408f3163718a2a0d9f1513d8ee
import  -/  yesod-core-1.6.5:Yesod.Core.Handler 50f39555795fab4e524233a5550cf412
import  -/  yesod-core-1.6.5:Yesod.Core.Internal.TH 3fcd1289ec3b107c33a9387dca1c9d0d
import  -/  yesod-core-1.6.5:Yesod.Core.Types 4698219290971bfaa4f63d519186fd0a
import  -/  yesod-core-1.6.5:Yesod.Core.Unsafe c1773aa06914627a2d48cf154655f955
import  -/  yesod-core-1.6.5:Yesod.Core.Widget 7e3e8b598eba9851a06b75dc4dd179f9
import  -/  yesod-core-1.6.5:Yesod.Routes.Class db5a9b6e59076a16718df494c0c67557
import  -/  yesod-core-1.6.5:Yesod.Routes.Parse 4164815754b22bf8d748b18552d0368b
import  -/  yesod-core-1.6.5:Yesod.Routes.TH.Types 28a56c5a34a987f64b29669487649323
import  -/  yesod-form-1.6.1:Yesod.Form.Fields 49405d7547f8c51e074bf2a804086f9d
import  -/  yesod-form-1.6.1:Yesod.Form.Types 65da5340fa9d5a5a94583acb5c43bcac
import  -/  yesod-persistent-1.6.0:Yesod.Persist.Core 9ece31adbd925b93c5f8679a2f1ad61e
import  -/  yesod-static-1.6.0:Yesod.Static f19a70462b76dfc61a3ddf7e4b60feeb
addDependentFile "templates/default-layout-wrapper.hamlet"
addDependentFile "templates/default-layout.lucius"
addDependentFile "templates/default-layout.hamlet"
addDependentFile "config/routes"
c47de90e540ccea1173f100b8ea1bf32
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
c47de90e540ccea1173f100b8ea1bf32
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Yesod.Routes.Class.Route Foundation.App)
                   (b :: Yesod.Routes.Class.Route Foundation.App) ->
                 case Foundation.$fEqRoute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
c47de90e540ccea1173f100b8ea1bf32
  $fHasHttpManagerApp ::
    Network.HTTP.Client.Types.HasHttpManager Foundation.App
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U),A)>m,
     Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.appHttpManager
                  `cast`
                (Sym (Network.HTTP.Client.Types.N:HasHttpManager[0]
                          <Foundation.App>_N)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
c47de90e540ccea1173f100b8ea1bf32
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 ->
                 Foundation.$w$cparseRoute ww1 ww2 }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R)))
                  Foundation.$fReadRoute_$creadListPrec -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U(U)> -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute3 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: ((Foundation.$fReadRoute_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Yesod.Routes.Class.Route Foundation.App]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Yesod.Routes.Class.Route Foundation.App]>_R)
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute3) -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.list
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Yesod.Routes.Class.Route Foundation.App>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   (GHC.Read.$fRead()6
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      Foundation.$fReadRoute2
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                <Yesod.Routes.Class.Route Foundation.App>_R))
                      n
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App) (ds1 :: [Text.Shakespeare.I18N.Lang]) ->
                 Yesod.Form.I18n.English.englishFormMessage) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
0ba2039c5963c294f878cee53253b9bb
  $fRenderRouteApp1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp2) -}
c0b0cea846a8cbc341c2cc823a1fa9be
  $fRenderRouteApp10 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp8
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
6115e4ce18a22502431e1cfdeeecd485
  $fRenderRouteApp11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp12) -}
5c644eca52ca510f849b1fa3fea9214f
  $fRenderRouteApp12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oferta"#) -}
97b1d0aaac21b66019c97e78a9b61974
  $fRenderRouteApp13 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp11
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
1e4df86c91101239288c2462b71052ae
  $fRenderRouteApp14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp15) -}
f453e8bca757105531d378a429ec70f0
  $fRenderRouteApp15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("id"#) -}
b6679a1e0098c597564b6c5754a511a2
  $fRenderRouteApp16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp17) -}
2bbe4a95a7d34894e6365a458fa8f8b9
  $fRenderRouteApp17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("voluntario"#) -}
674aaaa61a4e6826da05d3aaa5c5724a
  $fRenderRouteApp18 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
998de4af660a3541c0c24204e62096eb
  $fRenderRouteApp19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp20) -}
2939deef21f8306d5a378f9d318bf43c
  $fRenderRouteApp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("host"#) -}
47a01a27a1979a5ae3c4b3543b8f7a45
  $fRenderRouteApp20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("curso"#) -}
5c17611a4e31a2bcd65b40d97776a538
  $fRenderRouteApp21 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp19
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
7ab85a3e3c038ef980092c38e2977a57
  $fRenderRouteApp22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp23) -}
df5435fa1e21b0cc6ade878efbb930f4
  $fRenderRouteApp23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("escola"#) -}
f7ec33f33e579e43659c19fc9aba99f2
  $fRenderRouteApp24 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp22
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
5af5934f6a244e105b422851f7ca3d2b
  $fRenderRouteApp25 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp26
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
23e676753acbe1557b694ee81f815ba0
  $fRenderRouteApp26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp27) -}
a3a9f5dd7e370d9e69d8903746fa5d68
  $fRenderRouteApp27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("login"#) -}
bd557dfaeac19e13c88f2f77e0187792
  $fRenderRouteApp28 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp29
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
6ecf9697ed80629bdf74e5b54375996f
  $fRenderRouteApp29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp30) -}
3a90ea5c5c31aba31a2f924f00739689
  $fRenderRouteApp3 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp1
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
69c13b8b7f6afc697427933875c0200f
  $fRenderRouteApp30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("profile"#) -}
9058e84a7f0a0d633a39da8221e0010b
  $fRenderRouteApp31 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp32
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
918f939a5eb99795a57a0349beb9c470
  $fRenderRouteApp32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp33) -}
3fb5c86e0c356cb30d90b73b0d8a467f
  $fRenderRouteApp33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("comments"#) -}
a8d01274e996ef339d8f12a7be3fbefe
  $fRenderRouteApp34 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp35
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
e413869848441b419b1591fed3cd1390
  $fRenderRouteApp35 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp36) -}
405872551799aa498949ae92cbfa1d04
  $fRenderRouteApp36 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("robots.txt"#) -}
980b38e87bf46c435ec4952c89fb4e4f
  $fRenderRouteApp37 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp38
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
a7848e50d98efcb2a4c117aa63660da6
  $fRenderRouteApp38 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp39) -}
cae51953cffcdd4182c68d67e9791636
  $fRenderRouteApp39 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("favicon.ico"#) -}
7f3bf1c22819c160189f9023f0f733b2
  $fRenderRouteApp4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp5) -}
2bc93e971d09130d6adebafcedd4405d
  $fRenderRouteApp40 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp41) -}
4e03cd31365fc4c0411578ad6770421e
  $fRenderRouteApp41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("auth"#) -}
5e9a4ace67abf0460b1f986e89af02e9
  $fRenderRouteApp42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp43) -}
f3a359e6b6c4d9f98ab76a9782f951d2
  $fRenderRouteApp43 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("static"#) -}
035200cb6c3244ff407ee654f5ff9c81
  $fRenderRouteApp5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hostOferta"#) -}
2746f285b29e6def85cc367afc05525d
  $fRenderRouteApp6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp7) -}
755cb881d778457f17681ccde8da0ec6
  $fRenderRouteApp7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("volOferta"#) -}
556eb998908b88dbd4b3ea525336c078
  $fRenderRouteApp8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fRenderRouteApp9) -}
54bb12142abeea600b7dd4d70f7a26a5
  $fRenderRouteApp9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioOferta"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR sub
                   -> case sub
                             `cast`
                           (Yesod.Static.D:R:RouteStatic0[0]) of wild1 { Yesod.Static.StaticRoute x y ->
                      (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp42
                         x,
                       y) }
                   Foundation.AuthR sub
                   -> case sub `cast` (Yesod.Auth.Routes.D:R:RouteAuth0[0]) of wild1 {
                        Yesod.Auth.Routes.CheckR
                        -> (GHC.Types.:
                              @ Data.Text.Internal.Text
                              Foundation.$fRenderRouteApp40
                              Yesod.Auth.Routes.$fRenderRouteAuth6,
                            GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Auth.Routes.LoginR
                        -> (GHC.Types.:
                              @ Data.Text.Internal.Text
                              Foundation.$fRenderRouteApp40
                              Yesod.Auth.Routes.$fRenderRouteAuth4,
                            GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Auth.Routes.LogoutR
                        -> (GHC.Types.:
                              @ Data.Text.Internal.Text
                              Foundation.$fRenderRouteApp40
                              Yesod.Auth.Routes.$fRenderRouteAuth2,
                            GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                        Yesod.Auth.Routes.PluginR dyn dyn1
                        -> (GHC.Types.:
                              @ Data.Text.Internal.Text
                              Foundation.$fRenderRouteApp40
                              (GHC.Types.:
                                 @ Data.Text.Internal.Text
                                 Yesod.Auth.Routes.$fParseRouteAuth4
                                 (GHC.Types.: @ Data.Text.Internal.Text dyn dyn1)),
                            GHC.Types.[]
                              @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) }
                   Foundation.FaviconR
                   -> (Foundation.$fRenderRouteApp37,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.RobotsR
                   -> (Foundation.$fRenderRouteApp34,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HomeR
                   -> (GHC.Types.[] @ Data.Text.Internal.Text,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CommentR
                   -> (Foundation.$fRenderRouteApp31,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ProfileR
                   -> (Foundation.$fRenderRouteApp28,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LoginAppR
                   -> (Foundation.$fRenderRouteApp25,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.EscolaR
                   -> (Foundation.$fRenderRouteApp24,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.EscolaIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp22
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans (Model.D:R:KeyEscola0[0]) (Model.N:R:KeyEscola[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CursoR
                   -> (Foundation.$fRenderRouteApp21,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CursoIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp19
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans (Model.D:R:KeyCurso0[0]) (Model.N:R:KeyCurso[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.EscolaCursoIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp19
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            Foundation.$fRenderRouteApp22
                            (GHC.Types.:
                               @ Data.Text.Internal.Text
                               (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                                  dyn
                                    `cast`
                                  (Nth:2
                                       (Trans
                                            (Trans
                                                 (Model.D:R:KeyEscola0[0]) (Model.N:R:KeyEscola[0])
                                             ->_R <Data.Text.Internal.Text>_R)
                                            (Trans
                                                 (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                 (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                             ->_R <Data.Text.Internal.Text>_R))))
                               (GHC.Types.[] @ Data.Text.Internal.Text))),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.VoluntarioR
                   -> (Foundation.$fRenderRouteApp18,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.VoluntarioIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp16
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            Foundation.$fRenderRouteApp14
                            (GHC.Types.:
                               @ Data.Text.Internal.Text
                               (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                                  dyn
                                    `cast`
                                  (Nth:2
                                       (Trans
                                            (Trans
                                                 (Model.D:R:KeyVoluntario0[0])
                                                 (Model.N:R:KeyVoluntario[0])
                                             ->_R <Data.Text.Internal.Text>_R)
                                            (Trans
                                                 (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                 (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                             ->_R <Data.Text.Internal.Text>_R))))
                               (GHC.Types.[] @ Data.Text.Internal.Text))),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.OfertaR
                   -> (Foundation.$fRenderRouteApp13,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.OfertaIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp11
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans (Model.D:R:KeyOferta0[0]) (Model.N:R:KeyOferta[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.VoluntarioOfertaR
                   -> (Foundation.$fRenderRouteApp10,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.VoluntarioOfertaIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp8
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans
                                              (Model.D:R:KeyVoluntarioOferta0[0])
                                              (Model.N:R:KeyVoluntarioOferta[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.VolOfertaR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp6
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans
                                              (Model.D:R:KeyVoluntario0[0])
                                              (Model.N:R:KeyVoluntario[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HostOfertaR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp4
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans (Model.D:R:KeyHost0[0]) (Model.N:R:KeyHost[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HostR
                   -> (Foundation.$fRenderRouteApp3,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HostIdR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp1
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Nth:2
                                    (Trans
                                         (Trans (Model.D:R:KeyHost0[0]) (Model.N:R:KeyHost[0])
                                          ->_R <Data.Text.Internal.Text>_R)
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])
                                          ->_R <Data.Text.Internal.Text>_R))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[]
                         @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
ff7ef4fb499c61bd14453cdf29335692
  $fRouteAttrsApp1 :: Data.Set.Internal.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild { DEFAULT ->
                 Foundation.$fRouteAttrsApp1 }) -}
b631ac682d9d0bd96b251f9a5c202fe7
  $fRouteAttrsApp_$s$wgo3 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <S,U><S,U><S,U><S,1*U><S,1*U><L,U> -}
61b3301317d87c209feb300128354e9d
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Internal.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt155 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Internal.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt155
                             (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Internal.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww5 ww6 ww7 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww5 ww6 ww7 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo4
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo3
                                  ww5
                                  ww6
                                  ww7
                                  ipv1
                                  (Data.Set.Internal.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Internal.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
9c8a8a24563311265f1be98d9f65b5d4
  $fRouteAttrsApp_$sgo4 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,1*U> -}
c47de90e540ccea1173f100b8ea1bf32
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
c47de90e540ccea1173f100b8ea1bf32
  $fShowRoute1 ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Foundation.$fShowRoute_$cshowsPrec
                   Foundation.$fShowRoute2) -}
89668c495dae14dbc9f50fa6818fded4
  $fShowRoute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
c47de90e540ccea1173f100b8ea1bf32
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fShowRoute1) -}
c47de90e540ccea1173f100b8ea1bf32
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fYesodApp_$capproot
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp49
                    `cast`
                  (<Foundation.Widget>_R
                   ->_R Trans
                            (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                            (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                      <Foundation.App>_N <Text.Blaze.Html.Html>_R)))
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp46
                    `cast`
                  (<Yesod.Routes.Class.Route Foundation.App>_R
                   ->_R <GHC.Types.Bool>_R
                   ->_R Trans
                            (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                            (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                      <Foundation.App>_N <Yesod.Core.Types.AuthResult>_R)))
                  Foundation.$fYesodApp37
                    `cast`
                  (<Yesod.Routes.Class.Route Foundation.App>_R
                   ->_R Trans
                            (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                            (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                      <Foundation.App>_N <GHC.Types.Bool>_R)))
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp28
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Data.Text.Internal.Text>_R
                   ->_R <[Data.Text.Internal.Text]>_R
                   ->_R <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]>_R
                   ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                  Foundation.$fYesodApp25
                    `cast`
                  (<Data.Text.Internal.Text>_R
                   ->_R <Data.Text.Internal.Text>_R
                   ->_R <CorePrelude.LByteString>_R
                   ->_R Trans
                            (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <GHC.Base.Maybe
                                              (Data.Either.Either
                                                 Data.Text.Internal.Text
                                                 (Yesod.Routes.Class.Route Foundation.App,
                                                  [(Data.Text.Internal.Text,
                                                    Data.Text.Internal.Text)]))>_R))
                            (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                      <Foundation.App>_N
                                      <GHC.Base.Maybe
                                         (Data.Either.Either
                                            Data.Text.Internal.Text
                                            (Yesod.Routes.Class.Route Foundation.App,
                                             [(Data.Text.Internal.Text,
                                               Data.Text.Internal.Text)]))>_R)))
                  Foundation.$fYesodApp_$cmaximumContentLength
                  Foundation.$fYesodApp22
                    `cast`
                  (<Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R))
                  Foundation.$fYesodApp21
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Yesod.Core.Types.Logger>_R
                   ->_R <Language.Haskell.TH.Syntax.Loc>_R
                   ->_R <Control.Monad.Logger.LogSource>_R
                   ->_R <Control.Monad.Logger.LogLevel>_R
                   ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                   ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                  Foundation.$fYesodApp_$cjsLoader
                  Foundation.$fYesodApp_$cjsAttributes
                  Foundation.$fYesodApp17
                    `cast`
                  (<Foundation.App>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R))
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp13
                    `cast`
                  (<Foundation.App>_R
                   ->_R <Control.Monad.Logger.LogSource>_R
                   ->_R <Control.Monad.Logger.LogLevel>_R
                   ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                  Foundation.$fYesodApp12
                    `cast`
                  (forall (res :: <*>_N).
                   <Yesod.Core.Content.ToTypedContent res>_R
                   ->_R <Yesod.Core.Types.HandlerFor Foundation.App res>_R
                   ->_R Trans
                            (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0] <res>_R))
                            (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                      <Foundation.App>_N <res>_R)))
                  Foundation.$fYesodApp_$cyesodWithInternalState
                  Foundation.$fYesodApp1
                    `cast`
                  (<Text.Blaze.Html.Html>_R
                   ->_R <Text.Hamlet.HtmlUrl
                           (Yesod.Routes.Class.Route Foundation.App)>_R
                   ->_R Trans
                            (<Yesod.Core.Types.WidgetData Foundation.App>_R
                             ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                            (Sym (Yesod.Core.Types.N:WidgetFor[0]
                                      <Foundation.App>_N <()>_R))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp1 ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.WidgetData Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U><L,C(U)><S(SLLSS),1*U(U,A,A,1*U,1*U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Text.Blaze.Html.Html)
                   (w1 :: Text.Hamlet.HtmlUrl
                            (Yesod.Routes.Class.Route Foundation.App))
                   (w2 :: Yesod.Core.Types.WidgetData Foundation.App)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2 of ww { Yesod.Core.Types.WidgetData ww1 ww2 ww3 ww4 ww5 ->
                 Foundation.$w$cdefaultMessageWidget w w1 ww1 ww4 ww5 w3 }) -}
55365dfcf540c612296d05904b3ad84e
  $fYesodApp10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodApp11) -}
5e6e7c66bfaa9e191d65e5ecb86065a5
  $fYesodApp11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<h1>"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp12 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerFor Foundation.App res
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ res
                   (w :: Yesod.Core.Content.ToTypedContent res)
                   (w1 :: Yesod.Core.Types.HandlerFor Foundation.App res)
                   (w2 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Foundation.$w$cyesodMiddleware @ res w1 w2 w3) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp13 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,1*U(1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A),A,A,A,A)><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (app :: Foundation.App)
                   (_source :: Control.Monad.Logger.LogSource)
                   (level :: Control.Monad.Logger.LogLevel)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    case app of wild { Foundation.App ds ds1 ds2 ds3 ds4 ->
                    case ds of wild1 { Settings.AppSettings ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                    case ds12 of wild2 {
                      GHC.Types.False
                      -> case level of wild3 {
                           DEFAULT -> GHC.Types.False
                           Control.Monad.Logger.LevelWarn -> GHC.Types.True
                           Control.Monad.Logger.LevelError -> GHC.Types.True }
                      GHC.Types.True -> GHC.Types.True } } } #)) -}
508104d2a288afd151518a19879fbd64
  $fYesodApp14 :: Yesod.Core.Types.FileUpload
  {- Strictness: m1,
     Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp15) -}
8d227856f41e3624d0767fa60fa9bb52
  $fYesodApp15 ::
    Network.Wai.Parse.BackEnd Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
fd50c83dc1aae9168444d600dcb268b9
  $fYesodApp16 :: Yesod.Core.Types.FileUpload
  {- Strictness: m2,
     Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ Data.ByteString.Internal.ByteString
                      @ (Network.Wai.Parse.FileInfo ()))
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp17 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Foundation.$w$cmakeSessionBackend w1) -}
459768b42b384d934b79f59fd60e4a29
  $fYesodApp18 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7200000000000000) -}
a70f5da2fc5964e9a28f669a9a97c535
  $fYesodApp19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fYesodApp20) -}
90589bc47ea32a5a944e9c0f95b88540
  $fYesodApp2 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp3
                   GHC.Tuple.()) -}
9d8f69116d3ca542667f2096fa4b37db
  $fYesodApp20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("config/client_session_key.aes"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp21 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,1*U(1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A),A,A,A,A)><L,1*U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),C1(U(U,1*U(U,U,U,U))))><L,1*U(U,U,U,U(U(U),U(U)),A)><L,U(U,U,U)><L,U><L,1*U(U,C(U))><S,U>,
     Unfolding: InlineRule (7, True, False)
                (\ (site1 :: Foundation.App)
                   (eta80 :: Yesod.Core.Types.Logger)
                   (eta81 :: Language.Haskell.TH.Syntax.Loc)
                   (eta82 :: Control.Monad.Logger.LogSource)
                   (eta83 :: Control.Monad.Logger.LogLevel)
                   (eta84 :: System.Log.FastLogger.LogStr.LogStr)
                   (eta85 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Yesod.Core.Class.Yesod.$dmmessageLoggerSource1
                   (Foundation.$fYesodApp13 site1)
                     `cast`
                   (<Control.Monad.Logger.LogSource>_R
                    ->_R <Control.Monad.Logger.LogLevel>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   eta80
                   eta81
                   eta82
                   eta83
                   eta84
                   eta85) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp22 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    case x of wild { Foundation.App ds ds1 ds2 ds3 ds4 -> ds4 } #)) -}
ff14ef939afbe497217765e25e46fdad
  $fYesodApp23 :: GHC.Base.Maybe GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Word.Word64
                   Foundation.$fYesodApp24) -}
bccfe902740c021bf648788513dbd8f3
  $fYesodApp24 :: GHC.Word.Word64
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Word.W64# 2097152##) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp25 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> CorePrelude.LByteString
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5,
     Strictness: <L,U(U,U,U)><L,A><L,U><L,U(U,U(U,U,U,U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (ext :: Data.Text.Internal.Text)
                   (mime :: Data.Text.Internal.Text)
                   (content :: CorePrelude.LByteString)
                   (eta80 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                   (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 ((Yesod.Default.Util.$waddStaticContentExternal
                     @ GHC.Base.String
                     @ Foundation.App
                     Text.Jasmine.minifym
                     Foundation.$fYesodApp27
                     (case eta80
                             `cast`
                           (Trans
                                (Nth:2
                                     (Trans
                                          (<Yesod.Core.Types.HandlerData
                                              Foundation.App Foundation.App>_R
                                           ->_R (GHC.Types.IO
                                                   (Sub (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                  <Foundation.App>_N))))_R)
                                          (<Yesod.Core.Types.HandlerData
                                              Foundation.App Foundation.App>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.HandlerFor
                                                          Foundation.App)>_R)))
                                (Nth:2
                                     (Trans
                                          ((Yesod.Core.Types.HandlerData
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N))
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N)))_R
                                           ->_R <GHC.Types.IO
                                                   (Yesod.Core.Types.RunHandlerEnv
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App))
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)))>_R)
                                          (<Yesod.Core.Types.HandlerData
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Types.RunHandlerEnv
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))>_R)))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                      case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                      case ds6
                             `cast`
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (Nth:3
                                               (Trans
                                                    (<Yesod.Core.Types.HandlerData
                                                        Foundation.App Foundation.App>_R
                                                     ->_R Sym (GHC.Types.N:IO[0]
                                                                   <Yesod.Core.Class.Handler.HandlerSite
                                                                      (Yesod.Core.Types.HandlerFor
                                                                         Foundation.App)>_R))
                                                    (<Yesod.Core.Types.HandlerData
                                                        Foundation.App Foundation.App>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                       <Foundation.App>_N)))_R)))
                                          (GHC.Types.N:IO[0]
                                               <Foundation.App>_R)))) of wild2 { Foundation.App ds ds12 ds13 ds14 ds15 ->
                      case ds of wild3 { Settings.AppSettings ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                      ds16 } } } })
                     Foundation.$fYesodApp26
                       `cast`
                     (<[Data.Text.Internal.Text]>_R
                      ->_R Sym (Foundation.D:R:RouteApp0[0]))
                     ext
                     content)
                    `cast`
                  (Yesod.Core.Types.N:HandlerFor[0]
                       <Foundation.App>_N
                       <GHC.Base.Maybe
                          (Data.Either.Either
                             Data.Text.Internal.Text
                             (Yesod.Routes.Class.Route Foundation.App,
                              [(Data.Text.Internal.Text, Data.Text.Internal.Text)]))>_R)
                    eta80)
                   `cast`
                 (GHC.Types.N:IO[0]
                      <GHC.Base.Maybe
                         (Data.Either.Either
                            Data.Text.Internal.Text
                            (Yesod.Routes.Class.Route Foundation.App,
                             [(Data.Text.Internal.Text, Data.Text.Internal.Text)]))>_R)
                   eta81) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp26 :: [Data.Text.Internal.Text] -> Foundation.R:RouteApp
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m1,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Data.Text.Internal.Text])[OneShot] ->
                 Foundation.StaticR
                   (Yesod.Static.StaticRoute
                      x
                      (GHC.Types.[]
                         @ (Data.Text.Internal.Text, Data.Text.Internal.Text)))
                     `cast`
                   (Sym (Yesod.Static.D:R:RouteStatic0[0]))) -}
525e4807985aea0b8af1848d98db9582
  $fYesodApp27 ::
    Data.ByteString.Lazy.Internal.ByteString -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (lbs :: Data.ByteString.Lazy.Internal.ByteString)[OneShot] ->
                 GHC.CString.unpackAppendCString#
                   "autogen-"#
                   (Yesod.Static.base64md5 lbs)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp28 ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 4, Strictness: <L,A><L,U(U,U,U)><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
5181790d80e80ab24d1f8ec5ea78f86e
  $fYesodApp29 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1, Strictness: <L,U(U(U,U,U),U(U,U,U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Data.Text.Internal.Text, Data.Text.Internal.Text)) ->
                 case Foundation.$wlvl w of ww { (#,#) ww1 ww2 -> (ww1, ww2) }) -}
73059010c7577d228ae42eba0795adc1
  $fYesodApp3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp4) -}
bcd92ca3df46870220607b4623ddac31
  $fYesodApp30 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Foundation.$wlvl1 ww1 ww2 ww3 }) -}
c92221c71477dda3b1ff8980bc05e24e
  $fYesodApp31 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
e4ad0e4d5781438d5d7f67abc0f9a690
  $fYesodApp32 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Data.Text.Internal.Text) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Foundation.$wlvl2 ww1 ww2 ww3 }) -}
2d38ff8db297a2cb72c6d47b9b35f9b2
  $fYesodApp33 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
dac1725fce04ce15c07233ce69be9c60
  $fYesodApp34 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Data.Text.Internal.Text) ->
                 case x1 of wild { Data.Text.Internal.Text dt155 dt156 dt157 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt157 0#) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp35 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fYesodApp36
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp36 :: Foundation.R:RouteApp
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Foundation.AuthR
                   Yesod.Auth.Routes.LoginR
                     `cast`
                   (Sym (Yesod.Auth.Routes.D:R:RouteAuth0[0]))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp37 ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 3,
     Strictness: <L,A><L,1*U(U(A,A,U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A),A,A,A,A),A,A,A)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (r :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case r `cast`
                                 (Nth:2
                                      (Trans
                                           ((Yesod.Core.Types.HandlerData
                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                         <Foundation.App>_N))
                                               (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                         <Foundation.App>_N)))_R
                                            ->_R <GHC.Types.IO Yesod.Core.Types.YesodRequest>_R)
                                           (<Yesod.Core.Types.HandlerData
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.HandlerFor Foundation.App))
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.HandlerFor Foundation.App))>_R
                                            ->_R GHC.Types.N:IO[0]
                                                     <Yesod.Core.Types.YesodRequest>_R))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                            case ds1 of wild1 { Yesod.Core.Types.YesodRequest ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            case ds3 of wild2 { Network.Wai.Internal.Request ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ->
                            ds10 } } })
                           Foundation.$fYesodApp38 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #)) -}
f9333bcea81c20daf4ffa838831332ef
  $fYesodApp38 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp45
                   Foundation.$fYesodApp39) -}
e1ba7154c9cbc04bf5270e0a70ef2326
  $fYesodApp39 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp44
                   Foundation.$fYesodApp40) -}
73906fc4722e2a924b7bfe1ce7e3eac2
  $fYesodApp4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp5) -}
42ac678e94fd351cef670cf7f46f34f1
  $fYesodApp40 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp43
                   Foundation.$fYesodApp41) -}
68674f4036063750d8fbdea866b11938
  $fYesodApp41 :: [Network.HTTP.Types.Method.Method]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp42
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
16f4bddeb3ca79879c1688895d1d1611
  $fYesodApp42 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
b5f827ec83b8bf5d9d3e51e3db07205b
  $fYesodApp43 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#1
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#1
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
49a22aae58a34771b8e7785d8ca160fd
  $fYesodApp44 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#2
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#2
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
b42f2e98026927f2c4bbce2b0504688c
  $fYesodApp45 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Addr#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Word# #)}
                        Foundation.$fYesodApp_addr#3
                        ipv of wild { (#,#) ds ds2 ->
                 Data.ByteString.Internal.PS
                   Foundation.$fYesodApp_addr#3
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds2) } }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp46 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta80 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                   (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT -> (# eta81, Yesod.Core.Types.Authorized #)
                   Foundation.ProfileR -> Foundation.$fYesodApp48 eta80 eta81
                   Foundation.VolOfertaR ipv
                   -> case Foundation.$fYesodApp47
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Yesod.Core.Types.AuthResult #)
                      of {} }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp47 :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Strictness: x -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp48 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp49 ::
    Foundation.Widget
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U,U),U,U,U,U,U),U,U)><S,U> -}
e0d31bc1e59b22ab7e8df2c45a4b3f45
  $fYesodApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodApp6) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp50 ::
    Foundation.App
    -> Network.Wai.Internal.Request -> Data.Text.Internal.Text
  {- Arity: 2,
     Strictness: <S(S(LLSLLLLLLLLLLL)LLLL),1*U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),U,U,U,U)><L,U>,
     Unfolding: (\ (app :: Foundation.App)
                   (req :: Network.Wai.Internal.Request) ->
                 case app of wild { Foundation.App ds ds1 ds2 ds3 ds4 ->
                 case ds of wild1 { Settings.AppSettings ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 case ds7 of wild2 {
                   GHC.Base.Nothing
                   -> case Yesod.Core.Class.Yesod.guessApproot
                             @ Foundation.App of wild3 {
                        Yesod.Core.Types.ApprootRelative -> Data.Text.Internal.empty_
                        Yesod.Core.Types.ApprootStatic t -> t
                        Yesod.Core.Types.ApprootMaster f60 -> f60 wild
                        Yesod.Core.Types.ApprootRequest f60 -> f60 wild req }
                   GHC.Base.Just root -> root } } }) -}
97e1fdc1a898ff1bb01b21a48345d5e9
  $fYesodApp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</h1>\n"#) -}
2c5034b160cc833a19206ed2895a082c
  $fYesodApp7 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp8
                   GHC.Tuple.()) -}
937bf3944c132e07e8135536a880b124
  $fYesodApp8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp9) -}
742c1d074ec7419f966b9a23976951d8
  $fYesodApp9 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp10) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$capproot :: Yesod.Core.Types.Approot Foundation.App
  {- Strictness: m4,
     Unfolding: (Yesod.Core.Types.ApprootRequest
                   @ Foundation.App
                   Foundation.$fYesodApp50) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> Foundation.$fYesodApp35) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerFor
         Foundation.App Yesod.Core.Types.TypedContent
  {- Arity: 1 -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Foundation.App)
                   (ds1 :: Network.Wai.Internal.RequestBodyLength) ->
                 case ds1 of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp16
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord# x 50000##) of wild2 {
                        GHC.Types.False -> Foundation.$fYesodApp16
                        GHC.Types.True -> Foundation.$fYesodApp14 } } }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cjsAttributes ::
    Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Types.[]
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe
                             (Yesod.Routes.Class.Route Foundation.App)) ->
                 Foundation.$fYesodApp23) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App)
                   (ds2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C1(U))><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (thing :: Control.Monad.Trans.Resource.InternalState
                             -> GHC.Types.IO a)
                   (eta80 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# eta80 of ds2 { (#,#) ipv ipv1 ->
                 case ipv1 of ds3 {
                   DEFAULT
                   -> case GHC.Prim.newMutVar#
                             @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                             @ GHC.Prim.RealWorld
                             (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                9223372036854775807#
                                1##
                                (Data.IntMap.Internal.Nil
                                   @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ a
                                (thing
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                      ipv3)
                                     `cast`
                                   (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                          (GHC.Types.N:IO[0] <a>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       a #)>_R))))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                     Data.Acquire.Internal.ReleaseNormal
                                     ipv3
                                     s of ds5 { (#,#) ipv4 ipv5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                             Data.Acquire.Internal.ReleaseNormal
                             ipv3
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      (# ipv6, ipv5 #) } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ a
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newMutVar#
                                @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                @ GHC.Prim.RealWorld
                                (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                   9223372036854775807#
                                   1##
                                   (Data.IntMap.Internal.Nil
                                      @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                                s of ds4 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.catch#
                                @ a
                                @ GHC.Exception.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ a
                                   (thing
                                      (GHC.STRef.STRef
                                         @ GHC.Prim.RealWorld
                                         @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                         ipv3)
                                        `cast`
                                      (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                             (GHC.Types.N:IO[0] <a>_R
                                              ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                          a #)>_R))))
                                (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                        Data.Acquire.Internal.ReleaseNormal
                                        ipv3
                                        s1 of ds5 { (#,#) ipv4 ipv5 ->
                                 GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                                ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                         case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                Data.Acquire.Internal.ReleaseNormal
                                ipv3
                                ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                         (# ipv6, ipv5 #) } } })
                        ipv
                   1#
                   -> case GHC.Prim.newMutVar#
                             @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                             @ GHC.Prim.RealWorld
                             (Control.Monad.Trans.Resource.Internal.ReleaseMap
                                9223372036854775807#
                                1##
                                (Data.IntMap.Internal.Nil
                                   @ (Data.Acquire.Internal.ReleaseType -> GHC.Types.IO ())))
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ a
                                (thing
                                   (GHC.STRef.STRef
                                      @ GHC.Prim.RealWorld
                                      @ Control.Monad.Trans.Resource.Internal.ReleaseMap
                                      ipv3)
                                     `cast`
                                   (Sym (GHC.IORef.N:IORef[0]) <Control.Monad.Trans.Resource.Internal.ReleaseMap>_N))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                          (GHC.Types.N:IO[0] <a>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       a #)>_R))))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                                     Data.Acquire.Internal.ReleaseNormal
                                     ipv3
                                     s of ds5 { (#,#) ipv4 ipv5 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ipv4 })
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case Control.Monad.Trans.Resource.Internal.$wstateCleanup
                             Data.Acquire.Internal.ReleaseNormal
                             ipv3
                             ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                      (# ipv6, ipv5 #) } } } } })
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
b0f746f3d10016c7766e474503b66a3e
  $fYesodApp_addr# :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TRACE"#) -}
2696da2ecfa0553c86ba49099e28b7ec
  $fYesodApp_addr#1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OPTIONS"#) -}
8754424027b1daf2a097c0766d83ff76
  $fYesodApp_addr#2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HEAD"#) -}
835c1ce4602cf28c36be20dd3261ee71
  $fYesodApp_addr#3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GET"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp :: Yesod.Auth.YesodAuth Foundation.App
  DFunId
  {- Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodApp
                  Model.$fPathPieceKey8
                    `cast`
                  (Web.PathPieces.PathPiece (Sym (Foundation.D:R:AuthIdApp[0])))_R
                  Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                    `cast`
                  (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                            <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                  Foundation.$fYesodAuthApp_$cauthLayout
                  Foundation.$fYesodAuthApp10
                    `cast`
                  (<Foundation.App>_R ->_R Sym (Foundation.D:R:RouteApp0[0]))
                  Foundation.$fYesodAuthApp10
                    `cast`
                  (<Foundation.App>_R ->_R Sym (Foundation.D:R:RouteApp0[0]))
                  Foundation.$fYesodAuthApp_$cauthenticate
                  Foundation.$fYesodAuthApp_$cgetAuthId
                  Foundation.$fYesodAuthApp_$cauthPlugins
                  Foundation.$fYesodAuthApp_$cloginHandler
                  Foundation.$fYesodAuthApp_$crenderAuthMessage
                  Foundation.$fYesodAuthApp_$credirectToReferer
                  Foundation.$fYesodAuthApp_$credirectToReferer
                  Foundation.$fYesodAuthApp_$cauthHttpManager
                  Foundation.$fYesodAuthApp_$conLogin
                  Foundation.$fYesodAuthApp_$conLogout
                  Foundation.$fYesodAuthApp_$cmaybeAuthId
                  Foundation.$fYesodAuthApp_$conErrorHtml
                  Foundation.$fYesodAuthApp_$crunHttpRequest -}
366558c952aecd3db4114e818208e3b3
  $fYesodAuthApp1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodAuthApp2) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp10 :: Foundation.App -> Foundation.R:RouteApp
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> Foundation.HomeR) -}
1deae7d93ab9913d7166b96580341266
  $fYesodAuthApp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("error"#) -}
a902f69478495992b812d9cae51d0da9
  $fYesodAuthApp3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodAuthApp4) -}
103dea32ea90f0872f96aaf1e0606ae3
  $fYesodAuthApp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("success"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp5 :: Yesod.Auth.AuthPlugin Foundation.App
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp6 :: Yesod.Auth.AuthPlugin Foundation.App
82f8a9691b70b5bd9f82fab30a69e24f
  $fYesodAuthApp7 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
     Data.Type.Equality.~
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fYesodAuthApp_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
21575dca3bdece4e7417fa852f6e0602
  $fYesodAuthApp8 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Model.User,
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
     Data.Type.Equality.~
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *))
  {- Strictness: m,
     Unfolding: ((Model.$fPersistEntityUser,
                  Foundation.$fYesodAuthApp_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp9 ::
    Database.Persist.Class.PersistEntity.Unique Model.User
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerFor Foundation.App)
         (GHC.Base.Maybe
            (Database.Persist.Class.PersistEntity.Entity Model.User))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueReadSqlBackend_$cgetBy
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ Model.User
                   (Yesod.Core.Types.$fMonadIOHandlerFor @ Foundation.App)
                   Foundation.$fYesodAuthApp8
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.User>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendUser[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cauthHttpManager ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    m Network.HTTP.Client.Types.Manager
  {- Arity: 2,
     Strictness: <S(S(S(LC(S))L)LLL),1*U(1*U(1*U(A,1*C1(U)),A),A,A,A)><S(S),1*U(1*U)>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *)) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 Control.Monad.IO.Class.liftIO
                   @ m
                   (Control.Monad.Trans.Resource.Internal.$p1MonadResource
                      @ m
                      (Yesod.Core.Class.Handler.$p1MonadHandler @ m $dMonadHandler))
                   @ Network.HTTP.Client.Types.Manager
                   Network.HTTP.Client.TLS.getGlobalManager }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cauthLayout ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    Yesod.Core.Types.WidgetFor Foundation.App ()
    -> m Text.Blaze.Html.Html
  {- Arity: 3,
     Strictness: <S(LLC(S)L),1*U(A,A,1*C1(U),A)><S(S),1*U(1*U)><L,U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   (eta80 :: Yesod.Core.Types.WidgetFor Foundation.App ()) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 Yesod.Core.Class.Handler.liftHandler
                   @ m
                   $dMonadHandler
                   @ Text.Blaze.Html.Html
                   (Foundation.$fYesodApp49 eta80)
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                        (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                  cobox <Text.Blaze.Html.Html>_R))) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cauthPlugins ::
    Foundation.App -> [Yesod.Auth.AuthPlugin Foundation.App]
  {- Arity: 1,
     Strictness: <L,1*U(1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U),A,A,A,A)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (app :: Foundation.App) ->
                 GHC.Types.:
                   @ (Yesod.Auth.AuthPlugin Foundation.App)
                   Foundation.$fYesodAuthApp6
                   (case app of wild { Foundation.App ds ds1 ds2 ds3 ds4 ->
                    case ds of wild1 { Settings.AppSettings ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                    case ds18 of wild2 {
                      GHC.Types.False
                      -> GHC.Types.[] @ (Yesod.Auth.AuthPlugin Foundation.App)
                      GHC.Types.True
                      -> GHC.Types.:
                           @ (Yesod.Auth.AuthPlugin Foundation.App)
                           Foundation.$fYesodAuthApp5
                           (GHC.Types.[] @ (Yesod.Auth.AuthPlugin Foundation.App)) } } })) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cauthenticate ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    Yesod.Auth.Creds Foundation.App
    -> m (Yesod.Auth.AuthenticationResult Foundation.App)
  {- Arity: 3,
     Strictness: <S(LLC(S)L),1*U(A,A,1*C1(U),A)><S(S),1*U(1*U)><L,U(A,U(U,U,U),A)>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   (eta80 :: Yesod.Auth.Creds Foundation.App) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 Yesod.Core.Class.Handler.liftHandler
                   @ m
                   $dMonadHandler
                   @ (Yesod.Auth.AuthenticationResult Foundation.App)
                   (let {
                      m1 :: Control.Monad.Trans.Reader.ReaderT
                              Database.Persist.Sql.Types.Internal.SqlBackend
                              (Yesod.Core.Types.HandlerFor Foundation.App)
                              (GHC.Base.Maybe
                                 (Database.Persist.Class.PersistEntity.Entity Model.User))
                      = Foundation.$fYesodAuthApp9
                          (Model.UniqueUser
                             (case eta80 of wild { Yesod.Auth.Creds ds1 ds2 ds3 -> ds2 }))
                            `cast`
                          (Sym (Model.D:R:UniqueUser0[0]))
                    } in
                    let {
                      lvl208 :: Model.User
                      = case eta80 of wild { Yesod.Auth.Creds ds1 ds2 ds3 ->
                        case ds2 of dt155 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                        Model.User dt155 (GHC.Base.Nothing @ Data.Text.Internal.Text) } }
                    } in
                    let {
                      action :: Database.Persist.Sql.Types.Internal.SqlBackend
                                -> Yesod.Core.Types.HandlerFor
                                     Foundation.App (Yesod.Auth.AuthenticationResult Foundation.App)
                        {- Arity: 1, Strictness: <L,U> -}
                      = \ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                        let {
                          ds :: Yesod.Core.Types.HandlerFor
                                  Foundation.App
                                  (GHC.Base.Maybe
                                     (Database.Persist.Class.PersistEntity.Entity Model.User))
                          = m1
                              `cast`
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                 <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                 <GHC.Base.Maybe
                                    (Database.Persist.Class.PersistEntity.Entity Model.User)>_N)
                              r1
                        } in
                        (\ (r :: Yesod.Core.Types.HandlerData
                                   Foundation.App Foundation.App)
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                         case (ds
                                 `cast`
                               (Yesod.Core.Types.N:HandlerFor[0]
                                    <Foundation.App>_N
                                    <GHC.Base.Maybe
                                       (Database.Persist.Class.PersistEntity.Entity Model.User)>_R)
                                 r)
                                `cast`
                              (GHC.Types.N:IO[0]
                                   <GHC.Base.Maybe
                                      (Database.Persist.Class.PersistEntity.Entity Model.User)>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case ipv1 of wild {
                           GHC.Base.Nothing
                           -> case (((Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                                        @ (Yesod.Core.Types.HandlerFor Foundation.App)
                                        @ Model.User
                                        (Yesod.Core.Types.$fMonadIOHandlerFor @ Foundation.App)
                                        Foundation.$fYesodAuthApp8
                                          `cast`
                                        (GHC.Classes.(%,%)
                                           <Database.Persist.Class.PersistEntity.PersistEntity
                                              Model.User>_N
                                           ((Data.Type.Equality.~)
                                              <*>_N
                                              (Sym (Model.D:R:PersistEntityBackendUser[0]))
                                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                                        lvl208)
                                       `cast`
                                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                          <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                          <Database.Persist.Class.PersistEntity.Key Model.User>_N)
                                       r1)
                                      `cast`
                                    (Yesod.Core.Types.N:HandlerFor[0]
                                         <Foundation.App>_N
                                         <Database.Persist.Class.PersistEntity.Key Model.User>_R)
                                      r)
                                     `cast`
                                   (GHC.Types.N:IO[0]
                                        <Database.Persist.Class.PersistEntity.Key Model.User>_R)
                                     ipv of ds2 { (#,#) ipv2 ipv3 ->
                              (# ipv2,
                                 Yesod.Auth.Authenticated
                                   @ Foundation.App
                                   ipv3 `cast` (Sub (Sym (Foundation.D:R:AuthIdApp[0]))) #) }
                           GHC.Base.Just ds2
                           -> case ds2 of wild1 { Database.Persist.Class.PersistEntity.Entity uid ds3 ->
                              (# ipv,
                                 Yesod.Auth.Authenticated
                                   @ Foundation.App
                                   uid `cast` (Sub (Sym (Foundation.D:R:AuthIdApp[0]))) #) } } })
                          `cast`
                        (Trans
                             (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Yesod.Auth.AuthenticationResult Foundation.App>_R))
                             (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                       <Foundation.App>_N
                                       <Yesod.Auth.AuthenticationResult Foundation.App>_R)))
                    } in
                    (\ (eta81 :: Yesod.Core.Types.HandlerData
                                   Foundation.App Foundation.App)
                       (eta82 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     ((Database.Persist.Sql.Run.runSqlPool
                         @ Foundation.Handler
                         @ Database.Persist.Sql.Types.Internal.SqlBackend
                         @ (Yesod.Auth.AuthenticationResult Foundation.App)
                         (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                         Foundation.$fYesodAuthApp7
                           `cast`
                         (GHC.Classes.(%,%)
                            <Database.Persist.Class.PersistStore.IsPersistBackend
                               Database.Persist.Sql.Types.Internal.SqlBackend>_N
                            ((Data.Type.Equality.~)
                               <*>_N
                               (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                               <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                         action
                           `cast`
                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                   <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                   <Yesod.Auth.AuthenticationResult Foundation.App>_N))
                         (case eta81
                                 `cast`
                               (Trans
                                    (Nth:2
                                         (Trans
                                              (<Yesod.Core.Types.HandlerData
                                                  Foundation.App Foundation.App>_R
                                               ->_R (GHC.Types.IO
                                                       (Sub (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                      <Foundation.App>_N))))_R)
                                              (<Yesod.Core.Types.HandlerData
                                                  Foundation.App Foundation.App>_R
                                               ->_R GHC.Types.N:IO[0]
                                                        <Yesod.Core.Class.Handler.HandlerSite
                                                           (Yesod.Core.Types.HandlerFor
                                                              Foundation.App)>_R)))
                                    (Nth:2
                                         (Trans
                                              ((Yesod.Core.Types.HandlerData
                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                            <Foundation.App>_N))
                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                            <Foundation.App>_N)))_R
                                               ->_R <GHC.Types.IO
                                                       (Yesod.Core.Types.RunHandlerEnv
                                                          (Yesod.Core.Class.Handler.HandlerSite
                                                             (Yesod.Core.Types.HandlerFor
                                                                Foundation.App))
                                                          (Yesod.Core.Class.Handler.HandlerSite
                                                             (Yesod.Core.Types.HandlerFor
                                                                Foundation.App)))>_R)
                                              (<Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     (Yesod.Core.Types.HandlerFor Foundation.App))
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     (Yesod.Core.Types.HandlerFor
                                                        Foundation.App))>_R
                                               ->_R GHC.Types.N:IO[0]
                                                        <Yesod.Core.Types.RunHandlerEnv
                                                           (Yesod.Core.Class.Handler.HandlerSite
                                                              (Yesod.Core.Types.HandlerFor
                                                                 Foundation.App))
                                                           (Yesod.Core.Class.Handler.HandlerSite
                                                              (Yesod.Core.Types.HandlerFor
                                                                 Foundation.App))>_R)))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                          case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                          case ds6
                                 `cast`
                               (Nth:3
                                    (Nth:3
                                         (Trans
                                              (Nth:3
                                                   (Trans
                                                        (<Yesod.Core.Types.HandlerData
                                                            Foundation.App Foundation.App>_R
                                                         ->_R Sym (GHC.Types.N:IO[0]
                                                                       <Yesod.Core.Class.Handler.HandlerSite
                                                                          (Yesod.Core.Types.HandlerFor
                                                                             Foundation.App)>_R))
                                                        (<Yesod.Core.Types.HandlerData
                                                            Foundation.App Foundation.App>_R
                                                         ->_R (GHC.Types.IO
                                                                 (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                           <Foundation.App>_N)))_R)))
                                              (GHC.Types.N:IO[0]
                                                   <Foundation.App>_R)))) of wild2 { Foundation.App ds ds12 ds13 ds14 ds15 ->
                          ds13 } } }))
                        `cast`
                      (Yesod.Core.Types.N:HandlerFor[0]
                           <Foundation.App>_N
                           <Yesod.Auth.AuthenticationResult Foundation.App>_R)
                        eta81)
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Yesod.Auth.AuthenticationResult Foundation.App>_R)
                       eta82)
                      `cast`
                    (Trans
                         (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <Yesod.Auth.AuthenticationResult Foundation.App>_R))
                         (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                   cobox
                                   <Yesod.Auth.AuthenticationResult Foundation.App>_R)))) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cgetAuthId ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    Yesod.Auth.Creds Foundation.App
    -> m (GHC.Base.Maybe (Yesod.Auth.AuthId Foundation.App))
  {- Arity: 3,
     Strictness: <S(S(S(S(LC(C(S))LLL)L)L)LLL),U(1*U(1*U(1*U(A,1*C1(C1(U)),A,C(U),A),A),A),A,1*C1(U),A)><S(S),U(U)><L,U(A,U(U,U,U),A)>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   (eta80 :: Yesod.Auth.Creds Foundation.App) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 let {
                   $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                        m
                   = Yesod.Core.Class.Handler.$p1MonadHandler @ m $dMonadHandler
                 } in
                 let {
                   $dMonadIO :: Control.Monad.IO.Class.MonadIO m
                   = Control.Monad.Trans.Resource.Internal.$p1MonadResource
                       @ m
                       $dMonadResource
                 } in
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 GHC.Base.>>=
                   @ m
                   $dMonad
                   @ (Yesod.Auth.AuthenticationResult Foundation.App)
                   @ (GHC.Base.Maybe (Yesod.Auth.AuthId Foundation.App))
                   (Foundation.$fYesodAuthApp_$cauthenticate
                      @ m
                      $dMonadHandler
                      $d~
                      eta80)
                   (\ (auth :: Yesod.Auth.AuthenticationResult Foundation.App) ->
                    GHC.Base.return
                      @ m
                      $dMonad
                      @ (GHC.Base.Maybe (Yesod.Auth.AuthId Foundation.App))
                      (case auth of wild {
                         DEFAULT -> GHC.Base.Nothing @ (Yesod.Auth.AuthId Foundation.App)
                         Yesod.Auth.Authenticated auid
                         -> GHC.Base.Just
                              @ (Yesod.Auth.AuthId Foundation.App)
                              auid })) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cloginHandler ::
    Yesod.Auth.AuthHandler Foundation.App Text.Blaze.Html.Html
  {- Arity: 1,
     Strictness: <S(S(S(S(S(LC(C(S))LLL)L)L)LLL)LS(S)S(S)L),U(U(U(U(U(U,U,U,U,U),U),U),U,U,U),U(A,A,A,C(C1(C1(U))),A,A,A,A,C(U),A,C(C1(U)),A,A,A,A,A,A,A,A),U(U),U(U),A)>,
     Unfolding: (\ @ m :: * -> *
                   ($d(%,,,,%) :: Yesod.Auth.MonadAuthHandler Foundation.App m) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ Yesod.Auth.Routes.Auth
                        @ (Yesod.Core.Class.Handler.SubHandlerSite m)
                        (GHC.Classes.$p4(%,,,,%)
                           @ (Yesod.Core.Class.Handler.MonadHandler m)
                           @ (Yesod.Auth.YesodAuth Foundation.App)
                           @ ((Foundation.App :: *)
                              Data.Type.Equality.~
                              (Yesod.Core.Class.Handler.HandlerSite m :: *))
                           @ ((Yesod.Auth.Routes.Auth :: *)
                              Data.Type.Equality.~
                              (Yesod.Core.Class.Handler.SubHandlerSite m :: *))
                           @ (Control.Monad.IO.Unlift.MonadUnliftIO m)
                           $d(%,,,,%))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Auth.Routes.Auth>_N <Yesod.Core.Class.Handler.SubHandlerSite
                                                                 m>_N) of cobox { DEFAULT ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ Foundation.App
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        (GHC.Classes.$p3(%,,,,%)
                           @ (Yesod.Core.Class.Handler.MonadHandler m)
                           @ (Yesod.Auth.YesodAuth Foundation.App)
                           @ ((Foundation.App :: *)
                              Data.Type.Equality.~
                              (Yesod.Core.Class.Handler.HandlerSite m :: *))
                           @ ((Yesod.Auth.Routes.Auth :: *)
                              Data.Type.Equality.~
                              (Yesod.Core.Class.Handler.SubHandlerSite m :: *))
                           @ (Control.Monad.IO.Unlift.MonadUnliftIO m)
                           $d(%,,,,%))
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Foundation.App>_N <Yesod.Core.Class.Handler.HandlerSite
                                                         m>_N) of cobox1 { DEFAULT ->
                 Yesod.Auth.defaultLoginHandler
                   @ Foundation.App
                   @ m
                   $d(%,,,,%) } }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$cmaybeAuthId ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Foundation.App :: *)
     Data.Type.Equality.~
     (Yesod.Core.Class.Handler.HandlerSite m :: *)) =>
    m (GHC.Base.Maybe (Yesod.Auth.AuthId Foundation.App))
  {- Arity: 2,
     Strictness: <S(S(S(S(LC(C(S))LLL)L)L)LLL),U(U(U(U(U(U(U,U),U,U,U,U,U),U,U,U,U),U),U),U,U,U)><S(S),1*U(1*U)> -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$conErrorHtml ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Text.Internal.Text -> m Text.Blaze.Html.Html
  {- Arity: 4,
     Strictness: <S(S(S(S(LLC(C(S))LL)L)L)LLL),U(U(U(U(U(U(U,U),U,U,U,U,U),U,U,U,U),U),U),U,U,U)><S(S),1*U(1*U)><L,U><L,U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   (eta80 :: Yesod.Routes.Class.Route Foundation.App)
                   (eta81 :: Data.Text.Internal.Text) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 let {
                   $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                        m
                   = Yesod.Core.Class.Handler.$p1MonadHandler @ m $dMonadHandler
                 } in
                 let {
                   $dMonadIO :: Control.Monad.IO.Class.MonadIO m
                   = Control.Monad.Trans.Resource.Internal.$p1MonadResource
                       @ m
                       $dMonadResource
                 } in
                 let {
                   $dMonad :: GHC.Base.Monad m
                   = Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO
                 } in
                 GHC.Base.>>
                   @ m
                   $dMonad
                   @ ()
                   @ Text.Blaze.Html.Html
                   (Yesod.Core.Handler.addMessage
                      @ m
                      $dMonadHandler
                      Foundation.$fYesodAuthApp1
                      (Text.Blaze.Internal.Content
                         @ ()
                         (Text.Blaze.Internal.Text eta81)
                         GHC.Tuple.()))
                   (GHC.Base.fmap
                      @ m
                      (GHC.Base.$p1Applicative @ m (GHC.Base.$p1Monad @ m $dMonad))
                      @ Text.Blaze.Html.Html
                      @ Text.Blaze.Html.Html
                      (GHC.Base.id @ Text.Blaze.Html.Html)
                      (Yesod.Core.Handler.redirect
                         @ m
                         @ (Yesod.Routes.Class.Route Foundation.App)
                         @ Text.Blaze.Html.Html
                         $dMonadHandler
                         (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                            @ Foundation.App)
                           `cast`
                         (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                                   cobox <Yesod.Routes.Class.Route Foundation.App>_N))
                         eta80)) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$conLogin ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Foundation.App :: *)
     Data.Type.Equality.~
     (Yesod.Core.Class.Handler.HandlerSite m :: *)) =>
    m ()
  {- Arity: 2,
     Strictness: <S(S(S(S(LC(C(S))LLL)L)L)LLL),U(U(U(U(U(U(C(C(U)),A),A,A,A,A,A),C(C1(U)),A,C(U),A),A),A),A,C(U),A)><S(S),1*U(1*U)>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Foundation.App :: *)
                           Data.Type.Equality.~
                           (Yesod.Core.Class.Handler.HandlerSite m :: *)) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ Foundation.App
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Foundation.App>_N <Yesod.Core.Class.Handler.HandlerSite
                                                         m>_N) of cobox { DEFAULT ->
                 Yesod.Core.Handler.addMessageI
                   @ m
                   @ Yesod.Auth.Message.AuthMessage
                   $dMonadHandler
                   Foundation.$fYesodAuthApp_$crenderAuthMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Sym cobox) <Yesod.Auth.Message.AuthMessage>_N))
                   Foundation.$fYesodAuthApp3
                   Yesod.Auth.Message.NowLoggedIn }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$conLogout ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Foundation.App :: *)
     Data.Type.Equality.~
     (Yesod.Core.Class.Handler.HandlerSite m :: *)) =>
    m ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S(LLLC(S)L)L)L)LLL),1*U(1*U(1*U(1*U(A,A,A,1*C1(U),A),A),A),A,A,A)><S(S),1*U(1*U)>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Foundation.App :: *)
                           Data.Type.Equality.~
                           (Yesod.Core.Class.Handler.HandlerSite m :: *)) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ Foundation.App
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Foundation.App>_N <Yesod.Core.Class.Handler.HandlerSite
                                                         m>_N) of cobox { DEFAULT ->
                 GHC.Base.return
                   @ m
                   (Control.Monad.IO.Class.$p1MonadIO
                      @ m
                      (Control.Monad.Trans.Resource.Internal.$p1MonadResource
                         @ m
                         (Yesod.Core.Class.Handler.$p1MonadHandler @ m $dMonadHandler)))
                   @ ()
                   GHC.Tuple.() }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$credirectToReferer ::
    Foundation.App -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> GHC.Types.True) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$crenderAuthMessage ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Yesod.Auth.Message.AuthMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App) (ds1 :: [Data.Text.Internal.Text]) ->
                 Yesod.Auth.Message.englishMessage) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthApp_$crunHttpRequest ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *),
     Control.Monad.IO.Unlift.MonadUnliftIO m) =>
    Network.HTTP.Client.Types.Request
    -> (Network.HTTP.Client.Types.Response
          Network.HTTP.Client.Types.BodyReader
        -> m a)
    -> m a
  {- Arity: 5,
     Strictness: <S(S(S(S(LC(C(S))LLL)L)L)LLL),U(U(U(1*U(A,1*C1(C1(U)),A,A,A),1*C1(U)),A),A,A,A)><S(S),1*U(1*U)><L,U(A,A,C(U))><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,C(U)>,
     Unfolding: (\ @ m :: * -> *
                   @ a
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO m)
                   (eta80 :: Network.HTTP.Client.Types.Request)
                   (eta81 :: Network.HTTP.Client.Types.Response
                               Network.HTTP.Client.Types.BodyReader
                             -> m a) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 GHC.Base.>>=
                   @ m
                   (Control.Monad.IO.Class.$p1MonadIO
                      @ m
                      (Control.Monad.Trans.Resource.Internal.$p1MonadResource
                         @ m
                         (Yesod.Core.Class.Handler.$p1MonadHandler @ m $dMonadHandler)))
                   @ Network.HTTP.Client.Types.Manager
                   @ a
                   (Foundation.$fYesodAuthApp_$cauthHttpManager
                      @ m
                      $dMonadHandler
                      (GHC.Types.Eq#
                         @ *
                         @ *
                         @ Foundation.App
                         @ Foundation.App
                         @~ <Foundation.App>_N)
                        `cast`
                      (Sym (Data.Type.Equality.N:~[0]
                                <*>_N) (Sym cobox) <Foundation.App>_N))
                   (\ (man :: Network.HTTP.Client.Types.Manager) ->
                    Control.Monad.IO.Unlift.withRunInIO
                      @ m
                      $dMonadUnliftIO
                      @ a
                      (\ (run :: forall a1. m a1 -> GHC.Types.IO a1)
                         (eta82 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       Network.HTTP.Client.Core.httpLbs3
                         @ a
                         eta80
                         man
                         (\ (x :: Network.HTTP.Client.Types.Response
                                    Network.HTTP.Client.Types.BodyReader)[OneShot] ->
                          run @ a (eta81 x))
                         eta82)
                        `cast`
                      (<forall a1. m a1 -> GHC.Types.IO a1>_R
                       ->_R Sym (GHC.Types.N:IO[0] <a>_R))) }) -}
f82f02c09f8396a478259980731f0e6b
  $fYesodAuthApp_$d~~ ::
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
    GHC.Types.~~
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
3296a02396528877e747c00b23e07306
  $fYesodAuthApp_$s$cmaybeAuthId ::
    Yesod.Core.Types.HandlerFor
      Foundation.App (GHC.Base.Maybe (Yesod.Auth.AuthId Foundation.App))
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthPersistApp :: Yesod.Auth.YesodAuthPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodAuthApp
                  Foundation.$fYesodPersistApp
                  Foundation.$fYesodAuthPersistApp_$cgetAuthEntity -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodAuthPersistApp_$cgetAuthEntity ::
    (Yesod.Core.Class.Handler.MonadHandler m,
     (Yesod.Core.Class.Handler.HandlerSite m :: *)
     Data.Type.Equality.~
     (Foundation.App :: *)) =>
    Yesod.Auth.AuthId Foundation.App
    -> m (GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App))
  {- Arity: 3,
     Strictness: <S(LLC(S)L),1*U(A,A,1*C1(U),A)><S(S),1*U(1*U)><L,U>,
     Unfolding: (\ @ m :: * -> *
                   ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler m)
                   ($d~ :: (Yesod.Core.Class.Handler.HandlerSite m :: *)
                           Data.Type.Equality.~
                           (Foundation.App :: *))
                   (eta80 :: Yesod.Auth.AuthId Foundation.App) ->
                 case GHC.Types.HEq_sc
                        @ *
                        @ *
                        @ (Yesod.Core.Class.Handler.HandlerSite m)
                        @ Foundation.App
                        $d~
                          `cast`
                        (Data.Type.Equality.N:~[0]
                             <*>_N <Yesod.Core.Class.Handler.HandlerSite
                                      m>_N <Foundation.App>_N) of cobox { DEFAULT ->
                 Yesod.Core.Class.Handler.liftHandler
                   @ m
                   $dMonadHandler
                   @ (GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App))
                   (let {
                      action :: Database.Persist.Sql.Types.SqlPersistT
                                  Foundation.Handler
                                  (GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App))
                      = Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreReadSqlBackend_$cget
                          @ (Yesod.Core.Types.HandlerFor Foundation.App)
                          @ (Yesod.Auth.AuthEntity Foundation.App)
                          (Yesod.Core.Types.$fMonadIOHandlerFor @ Foundation.App)
                          Foundation.$fYesodAuthApp8
                            `cast`
                          (GHC.Classes.(%,%)
                             (Database.Persist.Class.PersistEntity.PersistEntity
                                (Trans
                                     (Sym (Yesod.Auth.D:R:KeyEntityKey[0] <Model.User>_N))
                                     (Trans
                                          (Yesod.Auth.KeyEntity
                                             (Sym (Foundation.D:R:AuthIdApp[0])))_N
                                          (Sym (Foundation.R:AuthEntityApp[0])))))_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Trans
                                     (Sym (Model.D:R:PersistEntityBackendUser[0]))
                                     (Database.Persist.Class.PersistEntity.PersistEntityBackend
                                        (Trans
                                             (Sym (Yesod.Auth.D:R:KeyEntityKey[0] <Model.User>_N))
                                             (Trans
                                                  (Yesod.Auth.KeyEntity
                                                     (Sym (Foundation.D:R:AuthIdApp[0])))_N
                                                  (Sym (Foundation.R:AuthEntityApp[0])))))_N)
                                (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                          eta80
                            `cast`
                          (Trans
                               (Sub (Foundation.D:R:AuthIdApp[0]))
                               (Database.Persist.Class.PersistEntity.Key
                                  (Trans
                                       (Sym (Yesod.Auth.D:R:KeyEntityKey[0] <Model.User>_N))
                                       (Trans
                                            (Yesod.Auth.KeyEntity
                                               (Sym (Foundation.D:R:AuthIdApp[0])))_N
                                            (Sym (Foundation.R:AuthEntityApp[0])))))_R)
                    } in
                    (\ (eta81 :: Yesod.Core.Types.HandlerData
                                   Foundation.App Foundation.App)
                       (eta82 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     ((Database.Persist.Sql.Run.runSqlPool
                         @ Foundation.Handler
                         @ Database.Persist.Sql.Types.Internal.SqlBackend
                         @ (GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App))
                         (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                         Foundation.$fYesodAuthApp7
                           `cast`
                         (GHC.Classes.(%,%)
                            <Database.Persist.Class.PersistStore.IsPersistBackend
                               Database.Persist.Sql.Types.Internal.SqlBackend>_N
                            ((Data.Type.Equality.~)
                               <*>_N
                               (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                               <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                         action
                         (case eta81
                                 `cast`
                               (Trans
                                    (Nth:2
                                         (Trans
                                              (<Yesod.Core.Types.HandlerData
                                                  Foundation.App Foundation.App>_R
                                               ->_R (GHC.Types.IO
                                                       (Sub (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                      <Foundation.App>_N))))_R)
                                              (<Yesod.Core.Types.HandlerData
                                                  Foundation.App Foundation.App>_R
                                               ->_R GHC.Types.N:IO[0]
                                                        <Yesod.Core.Class.Handler.HandlerSite
                                                           (Yesod.Core.Types.HandlerFor
                                                              Foundation.App)>_R)))
                                    (Nth:2
                                         (Trans
                                              ((Yesod.Core.Types.HandlerData
                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                            <Foundation.App>_N))
                                                  (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                            <Foundation.App>_N)))_R
                                               ->_R <GHC.Types.IO
                                                       (Yesod.Core.Types.RunHandlerEnv
                                                          (Yesod.Core.Class.Handler.HandlerSite
                                                             (Yesod.Core.Types.HandlerFor
                                                                Foundation.App))
                                                          (Yesod.Core.Class.Handler.HandlerSite
                                                             (Yesod.Core.Types.HandlerFor
                                                                Foundation.App)))>_R)
                                              (<Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     (Yesod.Core.Types.HandlerFor Foundation.App))
                                                  (Yesod.Core.Class.Handler.HandlerSite
                                                     (Yesod.Core.Types.HandlerFor
                                                        Foundation.App))>_R
                                               ->_R GHC.Types.N:IO[0]
                                                        <Yesod.Core.Types.RunHandlerEnv
                                                           (Yesod.Core.Class.Handler.HandlerSite
                                                              (Yesod.Core.Types.HandlerFor
                                                                 Foundation.App))
                                                           (Yesod.Core.Class.Handler.HandlerSite
                                                              (Yesod.Core.Types.HandlerFor
                                                                 Foundation.App))>_R)))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                          case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                          case ds6
                                 `cast`
                               (Nth:3
                                    (Nth:3
                                         (Trans
                                              (Nth:3
                                                   (Trans
                                                        (<Yesod.Core.Types.HandlerData
                                                            Foundation.App Foundation.App>_R
                                                         ->_R Sym (GHC.Types.N:IO[0]
                                                                       <Yesod.Core.Class.Handler.HandlerSite
                                                                          (Yesod.Core.Types.HandlerFor
                                                                             Foundation.App)>_R))
                                                        (<Yesod.Core.Types.HandlerData
                                                            Foundation.App Foundation.App>_R
                                                         ->_R (GHC.Types.IO
                                                                 (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                           <Foundation.App>_N)))_R)))
                                              (GHC.Types.N:IO[0]
                                                   <Foundation.App>_R)))) of wild2 { Foundation.App ds ds12 ds13 ds14 ds15 ->
                          ds13 } } }))
                        `cast`
                      (Yesod.Core.Types.N:HandlerFor[0]
                           <Foundation.App>_N
                           <GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App)>_R)
                        eta81)
                       `cast`
                     (GHC.Types.N:IO[0]
                          <GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App)>_R)
                       eta82)
                      `cast`
                    (Trans
                         (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <GHC.Base.Maybe (Yesod.Auth.AuthEntity Foundation.App)>_R))
                         (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                   cobox
                                   <GHC.Base.Maybe
                                      (Yesod.Auth.AuthEntity Foundation.App)>_R)))) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp ::
    Yesod.Core.Class.Breadcrumbs.YesodBreadcrumbs Foundation.App
  DFunId
  {- Arity: 3, Strictness: <S,1*U><L,A><S,U>, Inline: (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fYesodBreadcrumbsApp1
                  `cast`
                (Trans
                     (<Yesod.Routes.Class.Route Foundation.App>_R
                      ->_R Trans
                               (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                                ->_R Sym (GHC.Types.N:IO[0]
                                              <(Data.Text.Internal.Text,
                                                GHC.Base.Maybe
                                                  (Yesod.Routes.Class.Route Foundation.App))>_R))
                               (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                         <Foundation.App>_N
                                         <(Data.Text.Internal.Text,
                                           GHC.Base.Maybe
                                             (Yesod.Routes.Class.Route Foundation.App))>_R)))
                     (Sym (Yesod.Core.Class.Breadcrumbs.N:YesodBreadcrumbs[0]
                               <Foundation.App>_N))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp1 ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Text.Internal.Text,
           GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)) #)
  {- Arity: 3, Strictness: <S,1*U><L,A><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (eta80 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                   (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT -> (# eta81, Foundation.$fYesodBreadcrumbsApp_x3 #)
                   Foundation.AuthR ds1
                   -> (# eta81, Foundation.$fYesodBreadcrumbsApp_x2 #)
                   Foundation.HomeR
                   -> (# eta81, Foundation.$fYesodBreadcrumbsApp_x1 #)
                   Foundation.ProfileR
                   -> (# eta81, Foundation.$fYesodBreadcrumbsApp_x #) }) -}
cc400ff96a056055797267042134ba50
  $fYesodBreadcrumbsApp10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("home"#) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp2 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
6e735053ea5142fe0279709a3b4e3eaa
  $fYesodBreadcrumbsApp3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodBreadcrumbsApp4) -}
60290d55693b9133f0745be3de1c74d2
  $fYesodBreadcrumbsApp4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Profile"#) -}
9171f8ddd00ddfbd23464609bc0c64b4
  $fYesodBreadcrumbsApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodBreadcrumbsApp6) -}
aaed2043270d6acd97a094e1f5c30fe5
  $fYesodBreadcrumbsApp6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Home"#) -}
3281a4e6c761bab078821fa8ef8c8d5d
  $fYesodBreadcrumbsApp7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodBreadcrumbsApp8) -}
446795ee3e4ccf945165a9c43c6cde12
  $fYesodBreadcrumbsApp8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Login"#) -}
029b762c986da69de84ce8c7e60f68cc
  $fYesodBreadcrumbsApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Foundation.$fYesodBreadcrumbsApp10) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp_x ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fYesodBreadcrumbsApp3,
                  Foundation.$fYesodBreadcrumbsApp2)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp_x1 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fYesodBreadcrumbsApp5,
                  GHC.Base.Nothing @ (Yesod.Routes.Class.Route Foundation.App))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp_x2 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fYesodBreadcrumbsApp7,
                  Foundation.$fYesodBreadcrumbsApp2)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodBreadcrumbsApp_x3 ::
    (Data.Text.Internal.Text,
     GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fYesodBreadcrumbsApp9,
                  GHC.Base.Nothing @ (Yesod.Routes.Class.Route Foundation.App))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                     @ Database.Persist.Sql.Types.Internal.SqlBackend)
                    `cast`
                  (GHC.Base.Monad
                     (Control.Monad.Trans.Reader.ReaderT
                        <*>_N
                        (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                        <Yesod.Core.Types.HandlerFor Foundation.App>_N)_N)_R
                  Foundation.$fYesodPersistApp1
                    `cast`
                  (forall (a :: <*>_N).
                   Trans
                       (<Database.Persist.Sql.Types.SqlPersistT Foundation.Handler a>_R
                        ->_R Trans
                                 (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                                  ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                 (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)))
                       ((Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Sym (Foundation.D:R:YesodPersistBackendApp[0])))
                           <Yesod.Core.Types.HandlerFor Foundation.App>_R
                           <a>_N)_R
                        ->_R <Yesod.Core.Types.HandlerFor Foundation.App a>_R)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp1 ::
    Database.Persist.Sql.Types.SqlPersistT Foundation.Handler a
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3,
     Strictness: <L,C(U)><L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (action :: Database.Persist.Sql.Types.SqlPersistT
                                Foundation.Handler a)
                   (eta80 :: Yesod.Core.Types.HandlerData
                               Foundation.App Foundation.App)
                   (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 ((Database.Persist.Sql.Run.runSqlPool
                     @ Foundation.Handler
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                     Foundation.$fYesodAuthApp7
                       `cast`
                     (GHC.Classes.(%,%)
                        <Database.Persist.Class.PersistStore.IsPersistBackend
                           Database.Persist.Sql.Types.Internal.SqlBackend>_N
                        ((Data.Type.Equality.~)
                           <*>_N
                           (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                           <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                     action
                     (case eta80
                             `cast`
                           (Trans
                                (Nth:2
                                     (Trans
                                          (<Yesod.Core.Types.HandlerData
                                              Foundation.App Foundation.App>_R
                                           ->_R (GHC.Types.IO
                                                   (Sub (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                  <Foundation.App>_N))))_R)
                                          (<Yesod.Core.Types.HandlerData
                                              Foundation.App Foundation.App>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.HandlerFor
                                                          Foundation.App)>_R)))
                                (Nth:2
                                     (Trans
                                          ((Yesod.Core.Types.HandlerData
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N))
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N)))_R
                                           ->_R <GHC.Types.IO
                                                   (Yesod.Core.Types.RunHandlerEnv
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App))
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)))>_R)
                                          (<Yesod.Core.Types.HandlerData
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Types.RunHandlerEnv
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))>_R)))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                      case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                      case ds6
                             `cast`
                           (Nth:3
                                (Nth:3
                                     (Trans
                                          (Nth:3
                                               (Trans
                                                    (<Yesod.Core.Types.HandlerData
                                                        Foundation.App Foundation.App>_R
                                                     ->_R Sym (GHC.Types.N:IO[0]
                                                                   <Yesod.Core.Class.Handler.HandlerSite
                                                                      (Yesod.Core.Types.HandlerFor
                                                                         Foundation.App)>_R))
                                                    (<Yesod.Core.Types.HandlerData
                                                        Foundation.App Foundation.App>_R
                                                     ->_R (GHC.Types.IO
                                                             (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                       <Foundation.App>_N)))_R)))
                                          (GHC.Types.N:IO[0]
                                               <Foundation.App>_R)))) of wild2 { Foundation.App ds ds12 ds13 ds14 ds15 ->
                      ds13 } } }))
                    `cast`
                  (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                    eta80)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta81) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r)
                  (\ @ a (x :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta80 :: Yesod.Core.Types.HandlerData
                                     Foundation.App Foundation.App)
                         (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta81, x #)
                   } in
                   (\ (ds :: r) -> m1)
                     `cast`
                   (Trans
                        (<r>_R
                         ->_R Trans
                                  (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)))
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                  <a>_N))))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$cliftA2
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ r
                     (Yesod.Core.Types.$fApplicativeHandlerFor @ Foundation.App))
                  (\ @ a
                     @ b
                     (eta80 :: Control.Monad.Trans.Reader.ReaderT
                                 r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                     (eta81 :: Control.Monad.Trans.Reader.ReaderT
                                 r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                     (r1 :: r) ->
                   let {
                     ds :: Yesod.Core.Types.HandlerFor Foundation.App a
                     = eta80
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                         r1
                   } in
                   let {
                     m2 :: Yesod.Core.Types.HandlerFor Foundation.App b
                     = eta81
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                         r1
                   } in
                   (\ (eta82 :: Yesod.Core.Types.HandlerData
                                  Foundation.App Foundation.App)
                      (eta83 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case (ds
                            `cast`
                          (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                            eta82)
                           `cast`
                         (GHC.Types.N:IO[0] <a>_R)
                           eta83 of ds1 { (#,#) ipv ipv1 ->
                    (m2
                       `cast`
                     (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                       eta82)
                      `cast`
                    (GHC.Types.N:IO[0] <b>_R)
                      ipv })
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                         ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                        (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R))))
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Reader.ReaderT
                      r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                   ->_R <Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                   ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N))
                  (\ @ a @ b ->
                   Control.Monad.Trans.Reader.$fApplicativeReaderT_$cliftA2
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ r
                     (Yesod.Core.Types.$fApplicativeHandlerFor @ Foundation.App)
                     @ a
                     @ b
                     @ a
                     (GHC.Base.const @ a @ b)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,1*C1(U)))))><L,1*C1(C(C1(U(U,U))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f60 :: Control.Monad.Trans.Reader.ReaderT
                             r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (r1 :: r) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerFor Foundation.App (a -> b)
                   = f60
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <r>_R
                          <Yesod.Core.Types.HandlerFor Foundation.App>_R
                          <a -> b>_N)
                       r1
                 } in
                 let {
                   m2 :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = v `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 (\ (eta80 :: Yesod.Core.Types.HandlerData
                                Foundation.App Foundation.App)
                    (eta81 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (m1
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a -> b>_R)
                          eta80)
                         `cast`
                       (GHC.Types.N:IO[0] <a -> b>_R)
                         eta81 of ds1 { (#,#) ipv ipv1 ->
                  case (m2
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          eta80)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  (# ipv2, ipv1 ipv3 #) } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                      (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R))))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) (a -> b)>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (\ @ a @ b (x :: a) ->
                   Control.Monad.Trans.Reader.mapReaderT
                     @ *
                     @ *
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ b
                     @ (Yesod.Core.Types.HandlerFor Foundation.App)
                     @ a
                     @ r
                     (\ (ds :: Yesod.Core.Types.HandlerFor Foundation.App b)
                        (b3 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                        (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                      case (ds
                              `cast`
                            (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                              b3)
                             `cast`
                           (GHC.Types.N:IO[0] <b>_R)
                             s of ds1 { (#,#) ipv ipv1 ->
                      (# ipv, x #) })
                       `cast`
                     (<Yesod.Core.Types.HandlerFor Foundation.App b>_R
                      ->_R Trans
                               (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                                ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                               (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                         <Foundation.App>_N <a>_R)))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(U)><L,1*C1(C(C1(U(U,U))))><L,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a @ b (f60 :: a -> b) ->
                 Control.Monad.Trans.Reader.mapReaderT
                   @ *
                   @ *
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ a
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ b
                   @ r
                   (Yesod.Core.Types.$fFunctorHandlerFor2
                      @ Foundation.App
                      @ a
                      @ b
                      f60)
                     `cast`
                   (<Yesod.Core.Types.HandlerFor Foundation.App a>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                              ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                             (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                       <Foundation.App>_N <b>_R)))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerFor Foundation.App))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r)
                  (\ @ a (eta80 :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 2 -}
                     = \ (eta81 :: Yesod.Core.Types.HandlerData
                                     Foundation.App Foundation.App)
                         (eta82 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       (# eta82, eta80 #)
                   } in
                   (\ (ds :: r) -> m1)
                     `cast`
                   (Trans
                        (<r>_R
                         ->_R Trans
                                  (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                                   ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                  (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)))
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                  <a>_N))))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,A))))><L,1*C1(C(C1(U)))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (k :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (r1 :: r) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 (\ (r2 :: Yesod.Core.Types.HandlerData
                             Foundation.App Foundation.App)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          r2)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((k `cast`
                    (Control.Monad.Trans.Reader.N:ReaderT[0]
                         <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                      r1)
                     `cast`
                   (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                     r2)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                      (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R))))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerFor Foundation.App) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerFor Foundation.App) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(C(C1(U(U,U))))><L,C(C1(C1(C1(U))))><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerFor Foundation.App) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerFor Foundation.App) b)
                   (r1 :: r) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <a>_N)
                       r1
                 } in
                 (\ (r2 :: Yesod.Core.Types.HandlerData
                             Foundation.App Foundation.App)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <a>_R)
                          r2)
                         `cast`
                       (GHC.Types.N:IO[0] <a>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (((k ipv1)
                      `cast`
                    (Control.Monad.Trans.Reader.N:ReaderT[0]
                         <*>_N <r>_R <Yesod.Core.Types.HandlerFor Foundation.App>_R <b>_N)
                      r1)
                     `cast`
                   (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R)
                     r2)
                    `cast`
                  (GHC.Types.N:IO[0] <b>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0] <b>_R))
                      (Sym (Yesod.Core.Types.N:HandlerFor[0] <Foundation.App>_N <b>_R))))
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Reader.ReaderT
                    r (Yesod.Core.Types.HandlerFor Foundation.App) a>_R
                 ->_R <a
                       -> Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerFor Foundation.App) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerFor Foundation.App>_R
                               <b>_N)) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerFor Foundation.App) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r @ a (msg :: GHC.Base.String) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerFor Foundation.App a
                   = GHC.Err.errorWithoutStackTrace
                       @ 'GHC.Types.LiftedRep
                       @ (Yesod.Core.Types.HandlerFor Foundation.App a)
                       msg
                 } in
                 (\ (ds :: r) -> m1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerFor Foundation.App>_R
                           <a>_N))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistRunnerApp ::
    Yesod.Persist.Core.YesodPersistRunner Foundation.App
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodPersistApp
                  Foundation.$fYesodPersistRunnerApp1
                    `cast`
                  (Trans
                       (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <(Yesod.Persist.Core.DBRunner Foundation.App,
                                        Yesod.Core.Types.HandlerFor Foundation.App ())>_R))
                       (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                 <Foundation.App>_N
                                 <(Yesod.Persist.Core.DBRunner Foundation.App,
                                   Yesod.Core.Types.HandlerFor Foundation.App ())>_R))) -}
c47de90e540ccea1173f100b8ea1bf32
  $fYesodPersistRunnerApp1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Yesod.Persist.Core.DBRunner Foundation.App,
           Yesod.Core.Types.HandlerFor Foundation.App ()) #)
  {- Arity: 2,
     Unfolding: (Yesod.Persist.Core.defaultGetDBRunner1
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Foundation.App
                   Foundation.$fYesodAuthApp7
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistStore.IsPersistBackend
                         Database.Persist.Sql.Types.Internal.SqlBackend>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                         <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                   Foundation.$fYesodAuthApp_$d~~
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Foundation.D:R:YesodPersistBackendApp[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N)
                   Foundation.appConnPool) -}
6f9f2c2bbf359d83ed0ac49968d43ed4
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12626167732314789292##
                   17550683596413533752##
                   Foundation.$trModule
                   Foundation.$tc'App2
                   0#
                   Foundation.$tc'App1) -}
57d51eed2cef36b1704cc90a1cf93d38
  $tc'App1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
194b5e27ed1f8a91f3693d36fadc5f4c
  $tc'App2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'App3) -}
d53ed0f6739d3bad9d96c6015b3e8965
  $tc'App3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'App"#) -}
413f458d1d4e6f1c023bc6342a73ba22
  $tc'AuthR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2521384069643285452##
                   2966800665553022946##
                   Foundation.$trModule
                   Foundation.$tc'AuthR2
                   0#
                   Foundation.$tc'AuthR1) -}
36925c8fd82aed08462c1ee9c799f90f
  $tc'AuthR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1bd644abcb067eeaf982525bf370360e
  $tc'AuthR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'AuthR3) -}
5135447d7e4d9fcf7d8f32c40e10d930
  $tc'AuthR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'AuthR"#) -}
26d61428cfd6b7450ef141508771e7fd
  $tc'CommentR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12638603580015534287##
                   11152273618593880356##
                   Foundation.$trModule
                   Foundation.$tc'CommentR2
                   0#
                   Foundation.$tc'CommentR1) -}
6edde6e6f53083b25db376489c2d3dbb
  $tc'CommentR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
8c433849d1a83c5368ef1d12556b3e81
  $tc'CommentR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'CommentR3) -}
0eab7309cdd11321cad8c9c9242119ff
  $tc'CommentR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CommentR"#) -}
2ceb57bb3687b0e7f4ca848b942220b1
  $tc'CursoIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6683248971946918995##
                   5457582305280856379##
                   Foundation.$trModule
                   Foundation.$tc'CursoIdR2
                   0#
                   Foundation.$tc'CursoIdR1) -}
593f0bd2153fd2c33bf25680b462fe29
  $tc'CursoIdR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f974dc47021f23d18e94d59a99be62c4
  $tc'CursoIdR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'CursoIdR3) -}
4ba5c17f59775bd4ce9742ebf115cff0
  $tc'CursoIdR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CursoIdR"#) -}
c11613181d673712b51a668f9b0c6db7
  $tc'CursoR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18363001598678605881##
                   3451536212718733233##
                   Foundation.$trModule
                   Foundation.$tc'CursoR1
                   0#
                   Foundation.$tc'CommentR1) -}
b618551467ba1ffd79d726a610d90fd0
  $tc'CursoR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'CursoR2) -}
851f74920e3e949953a7b55ed99bde1c
  $tc'CursoR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CursoR"#) -}
610aae00beff128a36327818f40f69a2
  $tc'EscolaCursoIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6558378799497503824##
                   2599402898722331389##
                   Foundation.$trModule
                   Foundation.$tc'EscolaCursoIdR2
                   0#
                   Foundation.$tc'EscolaCursoIdR1) -}
fa580c924105bcb40376778cbb8d262c
  $tc'EscolaCursoIdR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a832a29edae6bf6c7f408071ab634de3
  $tc'EscolaCursoIdR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'EscolaCursoIdR3) -}
709bb4d3b4b2330f085ccb94e34888c4
  $tc'EscolaCursoIdR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EscolaCursoIdR"#) -}
e8d8a088138cceb9f25c815ad4c7ddea
  $tc'EscolaIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9541986052942474172##
                   4631217443006799463##
                   Foundation.$trModule
                   Foundation.$tc'EscolaIdR1
                   0#
                   Foundation.$tc'EscolaCursoIdR1) -}
4bfd66a41a95879350f1e0f9cd0940a3
  $tc'EscolaIdR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'EscolaIdR2) -}
3f6856452bf6264a782347c710421c08
  $tc'EscolaIdR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EscolaIdR"#) -}
bf17630c592028ca18e78463c73cd97d
  $tc'EscolaR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7371016239715498995##
                   1487990462925653262##
                   Foundation.$trModule
                   Foundation.$tc'EscolaR1
                   0#
                   Foundation.$tc'CommentR1) -}
4cb05255c362a74561fe0100d70b001b
  $tc'EscolaR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'EscolaR2) -}
1f112f0a0599d3a44bc1a0f669060934
  $tc'EscolaR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EscolaR"#) -}
b9131002ab37927e34d2f4151ef89750
  $tc'FaviconR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12068919804057171941##
                   9832128935992196565##
                   Foundation.$trModule
                   Foundation.$tc'FaviconR1
                   0#
                   Foundation.$tc'CommentR1) -}
47829493673642da02551a626503ab2c
  $tc'FaviconR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'FaviconR2) -}
d7e39a85aa5013c77996a544817247ae
  $tc'FaviconR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'FaviconR"#) -}
6864d7fc3faac11b857e9418bfa82064
  $tc'HomeR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7937982149197667532##
                   6068230071721512869##
                   Foundation.$trModule
                   Foundation.$tc'HomeR1
                   0#
                   Foundation.$tc'CommentR1) -}
1b80b2d0445d50fe13dd46881c813929
  $tc'HomeR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'HomeR2) -}
c47893ef2179f2d780d7bb159e23ac43
  $tc'HomeR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HomeR"#) -}
acb0a418e0abe9efc00780c194b49dfc
  $tc'HostIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1216757650385217180##
                   9225022699426344875##
                   Foundation.$trModule
                   Foundation.$tc'HostIdR2
                   0#
                   Foundation.$tc'HostIdR1) -}
3bf017c152fb932d0d5a4d7b5be73638
  $tc'HostIdR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f1e2256a677f2ea2c62e950aec417954
  $tc'HostIdR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'HostIdR3) -}
9221f85f27e0a62c5d897ce95252db54
  $tc'HostIdR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HostIdR"#) -}
69c8ff18764d4d6d5d5b357bc2a91085
  $tc'HostOfertaR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1793895775769497030##
                   8704645904910741862##
                   Foundation.$trModule
                   Foundation.$tc'HostOfertaR1
                   0#
                   Foundation.$tc'HostIdR1) -}
fee10959dff483430c45a524bb0489b2
  $tc'HostOfertaR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'HostOfertaR2) -}
8b2a4bcda0b435980d5f184f35993889
  $tc'HostOfertaR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HostOfertaR"#) -}
6e592c6db3e23213bd6abd2c7a84689b
  $tc'HostR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12606389778258327063##
                   5819201949303436021##
                   Foundation.$trModule
                   Foundation.$tc'HostR1
                   0#
                   Foundation.$tc'CommentR1) -}
01890cab5601657cebef5683612221af
  $tc'HostR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'HostR2) -}
35b0c6e7f3eedd0bfd66caecda8b0b13
  $tc'HostR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'HostR"#) -}
03fbec191d5b59245dc9b5bc08f51224
  $tc'LoginAppR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   662527944369816803##
                   6350734998795202171##
                   Foundation.$trModule
                   Foundation.$tc'LoginAppR1
                   0#
                   Foundation.$tc'CommentR1) -}
2aa48ed7ac9df0b6f1dabcd51f78c415
  $tc'LoginAppR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'LoginAppR2) -}
336bef18098ce21b0aea0ad76615a257
  $tc'LoginAppR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'LoginAppR"#) -}
a7ff54c8ef227651e7308d41d2ab2227
  $tc'MenuItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1987755883198969854##
                   4988561624189548673##
                   Foundation.$trModule
                   Foundation.$tc'MenuItem2
                   0#
                   Foundation.$tc'MenuItem1) -}
aa9b4733cd193cb266f9a4b13a69a6ef
  $tc'MenuItem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
395397b2488d9971dc7ee665a58a2fd8
  $tc'MenuItem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'MenuItem3) -}
df3ede3ef62b3eae6f47b64990ce15a7
  $tc'MenuItem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'MenuItem"#) -}
ffeef0034cb83522bcd60da00c084e67
  $tc'NavbarLeft :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   472475655546632250##
                   17345937521838556988##
                   Foundation.$trModule
                   Foundation.$tc'NavbarLeft2
                   0#
                   Foundation.$tc'NavbarLeft1) -}
06df9b50352cb109a22926506902cbb3
  $tc'NavbarLeft1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bf46734b41c01fb6636d2487a66cda4b
  $tc'NavbarLeft2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'NavbarLeft3) -}
0647a340555a4bb44c69c5044c304b44
  $tc'NavbarLeft3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NavbarLeft"#) -}
b1f091fe07ba4daee9214981d22f9c87
  $tc'NavbarRight :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   79339599067765777##
                   14965028754559726859##
                   Foundation.$trModule
                   Foundation.$tc'NavbarRight1
                   0#
                   Foundation.$tc'NavbarLeft1) -}
04595e800d5b36eb84ac2276eb44a2c9
  $tc'NavbarRight1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'NavbarRight2) -}
68fef8715fedbd0d9d4cda9d0cbdc210
  $tc'NavbarRight2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NavbarRight"#) -}
e3db2e45d140cad31ffc012e389fb246
  $tc'OfertaIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6050841931462850353##
                   6647329565777321267##
                   Foundation.$trModule
                   Foundation.$tc'OfertaIdR2
                   0#
                   Foundation.$tc'OfertaIdR1) -}
58ec50380f8e966ae844f47d56126b41
  $tc'OfertaIdR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
60bf8a8d3b55a0a4baa32d59d9045316
  $tc'OfertaIdR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'OfertaIdR3) -}
6f771e72148701fdbfc68e558d612fd7
  $tc'OfertaIdR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OfertaIdR"#) -}
45bc80be446cbfa4fd0bdf6e498c1757
  $tc'OfertaR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6362382211188977491##
                   15675869628599719934##
                   Foundation.$trModule
                   Foundation.$tc'OfertaR1
                   0#
                   Foundation.$tc'CommentR1) -}
4d5e2200c32bfebc71426965132fd885
  $tc'OfertaR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'OfertaR2) -}
21cd5daeb883e8e0e17cbe3ba2e9e560
  $tc'OfertaR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'OfertaR"#) -}
0f706d21f0f642577b354098283a695b
  $tc'ProfileR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2352219963556618098##
                   16630917900088595678##
                   Foundation.$trModule
                   Foundation.$tc'ProfileR1
                   0#
                   Foundation.$tc'CommentR1) -}
52918738346901e954c5e577ad05a93c
  $tc'ProfileR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'ProfileR2) -}
7f92c74b3be0cb79d0081c1191985ec6
  $tc'ProfileR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ProfileR"#) -}
506754ab5ea922b12818c789cc4d5371
  $tc'RobotsR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13539557047956592061##
                   17263919763859955453##
                   Foundation.$trModule
                   Foundation.$tc'RobotsR1
                   0#
                   Foundation.$tc'CommentR1) -}
da262000f85d78cc1f1ce0f2264a2cc5
  $tc'RobotsR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'RobotsR2) -}
f1c69fa49bfc4460861135f2d9811757
  $tc'RobotsR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RobotsR"#) -}
dc9c0e0a2d5f25f05654a6f153e0a790
  $tc'StaticR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12134048119432628045##
                   7206308500645348389##
                   Foundation.$trModule
                   Foundation.$tc'StaticR2
                   0#
                   Foundation.$tc'StaticR1) -}
04b11555eba006a201f0f3136399604f
  $tc'StaticR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
73ce833a93a46dc71c324a040352fb10
  $tc'StaticR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'StaticR3) -}
36d9322c39d867b28fbb324ca32f82bb
  $tc'StaticR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StaticR"#) -}
bbbec63153033cf5ff3cad8b754566ee
  $tc'VolOfertaR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18366886304090780867##
                   13052549619360801552##
                   Foundation.$trModule
                   Foundation.$tc'VolOfertaR2
                   0#
                   Foundation.$tc'VolOfertaR1) -}
86e3ed7863244485d49339f8af3e4e07
  $tc'VolOfertaR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
6443c18c8c8d81165db523b831a7a0f6
  $tc'VolOfertaR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'VolOfertaR3) -}
38cdfd9dad3e293d6cdab9644534b401
  $tc'VolOfertaR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VolOfertaR"#) -}
205248880e20c17163116a2e2226fb26
  $tc'VoluntarioIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10377518734155502843##
                   16395592080305230816##
                   Foundation.$trModule
                   Foundation.$tc'VoluntarioIdR1
                   0#
                   Foundation.$tc'VolOfertaR1) -}
9bd7dfdcfe009879a980f9e44e793f3e
  $tc'VoluntarioIdR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'VoluntarioIdR2) -}
3cf7b91b1af00b76ad32673fb8a81c98
  $tc'VoluntarioIdR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VoluntarioIdR"#) -}
5836367c9bc6cea9b52df845cc1c380e
  $tc'VoluntarioOfertaIdR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1509849043003683558##
                   15314076186359923397##
                   Foundation.$trModule
                   Foundation.$tc'VoluntarioOfertaIdR2
                   0#
                   Foundation.$tc'VoluntarioOfertaIdR1) -}
5e71bbdd86f30b7e75aa769e11be6f4e
  $tc'VoluntarioOfertaIdR1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d45da6538bb52fa4d33898e429dd482d
  $tc'VoluntarioOfertaIdR2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Foundation.$tc'VoluntarioOfertaIdR3) -}
2ae3e4a492cfa9ade9b6cb9bad76871b
  $tc'VoluntarioOfertaIdR3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VoluntarioOfertaIdR"#) -}
ab0a481b6d4572fed1491a0e08b3c070
  $tc'VoluntarioOfertaR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6145944071198889139##
                   11476382479851937611##
                   Foundation.$trModule
                   Foundation.$tc'VoluntarioOfertaR1
                   0#
                   Foundation.$tc'CommentR1) -}
e58f1c17370674d9e6971ed5a5882f46
  $tc'VoluntarioOfertaR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'VoluntarioOfertaR2) -}
c294abd87a1607552143e49bf2a01a64
  $tc'VoluntarioOfertaR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VoluntarioOfertaR"#) -}
02bde7e9461564037adb51eb734b8e96
  $tc'VoluntarioR :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17799787606352905718##
                   7072417423169861350##
                   Foundation.$trModule
                   Foundation.$tc'VoluntarioR1
                   0#
                   Foundation.$tc'CommentR1) -}
ee5ecd039c1fb642bb968bf7145f7d78
  $tc'VoluntarioR1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tc'VoluntarioR2) -}
31b6cd3dd0f889ad0c45ccbaed191b6a
  $tc'VoluntarioR2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VoluntarioR"#) -}
4c35607635ba8374cb2d850652aaf0d0
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10228247939989520077##
                   3238041688811615575##
                   Foundation.$trModule
                   Foundation.$tcApp1
                   0#
                   GHC.Types.krep$*) -}
033c508d327ed6c63c15bdf0b52f7f31
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tcApp2) -}
ab10806696b51b8469a5009314d35ff2
  $tcApp2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("App"#) -}
078848bac932b3172df5635871a50bf4
  $tcMenuItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8384045752895550203##
                   14825058308136700561##
                   Foundation.$trModule
                   Foundation.$tcMenuItem1
                   0#
                   GHC.Types.krep$*) -}
7006ca7ca62c3a87fa8a9754a552eeab
  $tcMenuItem1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tcMenuItem2) -}
58a1cadbfeb54cc5eb637f0fdf83de5d
  $tcMenuItem2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MenuItem"#) -}
3c13b80136da5dfed56f6a7976ccb2b1
  $tcMenuTypes :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3278742754632101554##
                   12883798982634731865##
                   Foundation.$trModule
                   Foundation.$tcMenuTypes1
                   0#
                   GHC.Types.krep$*) -}
13e32da9e900ef249cb5cdaf7ae1111e
  $tcMenuTypes1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$tcMenuTypes2) -}
88eb39bd2b9ce85896853cb187f12f04
  $tcMenuTypes2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MenuTypes"#) -}
9edc67f0625bfc15a3004d6fdf10a0e4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule3
                   Foundation.$trModule1) -}
787418987b1f1b4d1554166538f8f259
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$trModule2) -}
14f0b0312b82b61f80feea54a87f5719
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Foundation"#) -}
8c32f922e26d13fa255b08a59641153b
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Foundation.$trModule4) -}
4588f2926eaa6c781328d499d7bcbe90
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH"#) -}
e39852b4924079efcec11b85b8fc8e04
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp34
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp32
                           w) }) -}
c47de90e540ccea1173f100b8ea1bf32
  $w$cdefaultMessageWidget ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld
         (Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U><L,C(U)><S,U><L,A><L,A><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Text.Blaze.Html.Html)
                   (w1 :: Text.Hamlet.HtmlUrl
                            (Yesod.Routes.Class.Route Foundation.App))
                   (ww :: GHC.Prim.MutVar#
                            GHC.Prim.RealWorld
                            (Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)))
                   (ww1 :: GHC.Prim.MutVar#
                             GHC.Prim.RealWorld Yesod.Core.Types.GHState)
                   (ww2 :: GHC.Prim.MutVar#
                             GHC.Prim.RealWorld
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Nth:0
                                      (Nth:2
                                           (Trans
                                                ((Yesod.Core.Types.WidgetData
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                              <Foundation.App>_N)))_R
                                                 ->_R <GHC.Types.IO ()>_R)
                                                (<Yesod.Core.Types.WidgetData
                                                    (Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.WidgetFor
                                                          Foundation.App))>_R
                                                 ->_R GHC.Types.N:IO[0] <()>_R)))))_R)_R)_R
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv1
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App)))
                           (Yesod.Core.Types.$fIsStringWidgetFor1
                              @ (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetFor Foundation.App))>_R))
                           (GHC.Base.Just
                              @ Yesod.Core.Types.Title
                              w `cast` (Sym (Yesod.Core.Types.N:Title[0])))
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.WidgetFor Foundation.App)))])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetFor Foundation.App)))>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route
                                      (Yesod.Core.Class.Handler.HandlerSite
                                         (Yesod.Core.Types.WidgetFor Foundation.App)))])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route
                                           (Yesod.Core.Class.Handler.HandlerSite
                                              (Yesod.Core.Types.WidgetFor Foundation.App)))>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetFor Foundation.App))
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.WidgetFor Foundation.App))
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor1
                              @ (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetFor Foundation.App))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.WidgetFor
                                              Foundation.App))>_R))) of x' { Yesod.Core.Types.GWData ipv2 ipv3 ipv4 ipv5 ipv6 ipv7 ipv8 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Nth:0
                                      (Nth:2
                                           (Trans
                                                ((Yesod.Core.Types.WidgetData
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                              <Foundation.App>_N)))_R
                                                 ->_R <GHC.Types.IO ()>_R)
                                                (<Yesod.Core.Types.WidgetData
                                                    (Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.WidgetFor
                                                          Foundation.App))>_R
                                                 ->_R GHC.Types.N:IO[0] <()>_R)))))_R)_R)_R
                        x'
                        ipv of s2# { DEFAULT ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Nth:0
                                      (Nth:2
                                           (Trans
                                                ((Yesod.Core.Types.WidgetData
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                              <Foundation.App>_N)))_R
                                                 ->_R <GHC.Types.IO ()>_R)
                                                (<Yesod.Core.Types.WidgetData
                                                    (Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.WidgetFor
                                                          Foundation.App))>_R
                                                 ->_R GHC.Types.N:IO[0] <()>_R)))))_R)_R)_R
                        s2# of ds2 { (#,#) ipv11 ipv12 ->
                 case Yesod.Core.Types.$fIsStringWidgetFor_$c<>
                        @ (Yesod.Routes.Class.Route
                             (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.WidgetFor Foundation.App)))
                        ipv12
                        (Yesod.Core.Types.GWData
                           @ (Yesod.Routes.Class.Route Foundation.App)
                           (\ (_render :: Text.Hamlet.Render
                                            (Yesod.Routes.Class.Route Foundation.App)) ->
                            Text.Blaze.Internal.Append
                              @ ()
                              @ ()
                              Foundation.$fYesodApp7
                              (Text.Blaze.Internal.Append
                                 @ ()
                                 @ ()
                                 w
                                 (Text.Blaze.Internal.Append
                                    @ ()
                                    @ ()
                                    Foundation.$fYesodApp2
                                    (w1 _render))))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Body[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R))
                           (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                             `cast`
                           (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Script
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Script
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (GHC.Base.id
                              @ [Yesod.Core.Types.Stylesheet
                                   (Yesod.Routes.Class.Route Foundation.App)])
                             `cast`
                           (Sym (Yesod.Core.Types.N:UniqueList[0]
                                     <Yesod.Core.Types.Stylesheet
                                        (Yesod.Routes.Class.Route Foundation.App)>_R))
                           (Data.Map.Internal.Tip
                              @ (GHC.Base.Maybe Data.Text.Internal.Text)
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Data.Text.Internal.Builder.Builder))
                           (GHC.Base.Nothing
                              @ ((Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text)
                                 -> Text.Julius.Javascript))
                           (Yesod.Core.Types.$fIsStringWidgetFor1
                              @ (Yesod.Routes.Class.Route Foundation.App))
                             `cast`
                           (Sym (Yesod.Core.Types.N:Head[0]
                                     <Yesod.Routes.Class.Route Foundation.App>_R)))
                          `cast`
                        (Yesod.Core.Types.GWData
                           (Yesod.Routes.Class.Route
                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                        <Foundation.App>_N)))_R)_R of x'1 { Yesod.Core.Types.GWData ipv13 ipv14 ipv15 ipv16 ipv17 ipv18 ipv19 ->
                 case GHC.Prim.writeMutVar#
                        @ GHC.Prim.RealWorld
                        @ (Yesod.Core.Types.GWData
                             (Yesod.Routes.Class.Route
                                (Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.WidgetFor Foundation.App))))
                        ww
                          `cast`
                        (GHC.Prim.MutVar#
                           <GHC.Prim.RealWorld>_N
                           (Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route
                                 (Nth:0
                                      (Nth:2
                                           (Trans
                                                ((Yesod.Core.Types.WidgetData
                                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetFor[0]
                                                              <Foundation.App>_N)))_R
                                                 ->_R <GHC.Types.IO ()>_R)
                                                (<Yesod.Core.Types.WidgetData
                                                    (Yesod.Core.Class.Handler.HandlerSite
                                                       (Yesod.Core.Types.WidgetFor
                                                          Foundation.App))>_R
                                                 ->_R GHC.Types.N:IO[0] <()>_R)))))_R)_R)_R
                        x'1
                        ipv11 of s2#1 { DEFAULT ->
                 (# s2#1, GHC.Tuple.() #) } } } } } }) -}
2acacd491d7b04219c339825e678e42c
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BuildStep r
  {- Arity: 3, Strictness: <L,U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
                   @ r ->
                 let {
                   g :: Data.ByteString.Builder.Internal.BuildStep r
                        -> Data.ByteString.Builder.Internal.BuildStep r
                   = (Network.HTTP.Types.URI.encodePath
                        (case w1 of wild {
                           [] -> Foundation.$fYesodApp31
                           : ds1 ds2
                           -> GHC.Base.map
                                @ Data.Text.Internal.Text
                                @ Data.Text.Internal.Text
                                Foundation.$fYesodApp30
                                wild })
                        (GHC.Base.map
                           @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                           @ (Data.ByteString.Internal.ByteString,
                              GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                           Foundation.$fYesodApp29
                           w2))
                       `cast`
                     (Data.ByteString.Builder.Internal.N:Builder[0])
                       @ r
                 } in
                 (\ (x :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = g x
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                  case w4 of ww4 { Data.ByteString.Builder.Internal.BufferRange ww5 ww6 ->
                  Data.Text.Encoding.$wencodeUtf8Builder
                    ww1
                    ww2
                    ww3
                    @ r
                    w3
                    ww5
                    ww6
                    w5 } })
                   `cast`
                 (<Data.ByteString.Builder.Internal.BuildStep r>_R
                  ->_R Nth:3
                           (Inst (Trans
                                      (Nth:3
                                           (Trans
                                                (<Data.Text.Internal.Text>_R
                                                 ->_R forall (r1 :: <*>_N).
                                                      <Data.ByteString.Builder.Internal.BufferRange
                                                       -> GHC.Types.IO
                                                            (Data.ByteString.Builder.Internal.BuildSignal
                                                               r1)>_R
                                                      ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                                      ->_R Sym (GHC.Types.N:IO[0]
                                                                    <Data.ByteString.Builder.Internal.BuildSignal
                                                                       r1>_R))
                                                (<Data.Text.Internal.Text>_R
                                                 ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]))))
                                      (Data.ByteString.Builder.Internal.N:Builder[0])) (Coh <r>_N
                                                                                            (Nth:0
                                                                                                 (Trans
                                                                                                      (Nth:3
                                                                                                           (Trans
                                                                                                                (<Data.Text.Internal.Text>_R
                                                                                                                 ->_R forall (r1 :: <*>_N).
                                                                                                                      <Data.ByteString.Builder.Internal.BufferRange
                                                                                                                       -> GHC.Types.IO
                                                                                                                            (Data.ByteString.Builder.Internal.BuildSignal
                                                                                                                               r1)>_R
                                                                                                                      ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                                                                                                                      ->_R Sym (GHC.Types.N:IO[0]
                                                                                                                                    <Data.ByteString.Builder.Internal.BuildSignal
                                                                                                                                       r1>_R))
                                                                                                                (<Data.Text.Internal.Text>_R
                                                                                                                 ->_R Sym (Data.ByteString.Builder.Internal.N:Builder[0]))))
                                                                                                      (Data.ByteString.Builder.Internal.N:Builder[0]))))))) -}
e6b43c9c46b12d8604bccd26b729f995
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Web.ClientSession.getDefaultKey2
                        Foundation.$fYesodApp19
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp18
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.$dmmakeSessionBackend1 ipv1 getCachedDate)
                        `cast`
                      (Trans
                           (<Network.Wai.Internal.Request>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <(Data.Map.Internal.Map
                                              Data.Text.Internal.Text
                                              Data.ByteString.Internal.ByteString,
                                            Yesod.Core.Types.SessionMap
                                            -> GHC.Types.IO [Yesod.Core.Types.Header])>_R))
                           (Sym (Yesod.Core.Types.N:SessionBackend[0]))) #) } } }) -}
c47de90e540ccea1173f100b8ea1bf32
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
c47de90e540ccea1173f100b8ea1bf32
  $w$cyesodMiddleware ::
    Yesod.Core.Types.HandlerFor Foundation.App res
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 3,
     Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U(U,U,U,U,U,U,U,U,U),U,U)><S,U>,
     Inline: [0] -}
b3c35b308cc8b7587c1e18e2228462f2
  $w$sgo3 ::
    Data.Text.Internal.Text
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Internal.Set Data.Text.Internal.Text
    -> Data.Set.Internal.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
aa27fc9af0a0e291cb06de88361e5909
  $wlvl ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (# Data.ByteString.Internal.ByteString,
          GHC.Base.Maybe Data.ByteString.Internal.ByteString #)
  {- Arity: 1, Strictness: <L,U(1*U(U,U,1*U),1*U(U,U,U))>,
     Inline: [0],
     Unfolding: (\ (w :: (Data.Text.Internal.Text,
                          Data.Text.Internal.Text)) ->
                 (# case w of wild { (,) x1 y -> Data.Text.Encoding.encodeUtf8 x1 },
                    case w of wild { (,) x1 y ->
                    case y of wild1 { Data.Text.Internal.Text dt155 dt156 dt157 ->
                    case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt158 dt159 dt160 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.==# dt157 dt160) of wild3 {
                      GHC.Types.False
                      -> GHC.Base.Just
                           @ Data.ByteString.Internal.ByteString
                           (Data.Text.Encoding.$wencodeUtf8 dt155 dt156 dt157)
                      GHC.Types.True
                      -> case {__pkg_ccall text-1.2.3.0 GHC.Prim.ByteArray#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.ByteArray#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.Word#
                                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              GHC.Prim.Int# #)}
                                dt155
                                (GHC.Prim.int2Word# dt156)
                                dt158
                                (GHC.Prim.int2Word# dt159)
                                (GHC.Prim.int2Word# dt157)
                                GHC.Prim.realWorld# of wild5 { (#,#) ds2 ds3 ->
                         case GHC.Prim.narrow32Int# ds3 of wild4 {
                           DEFAULT
                           -> GHC.Base.Just
                                @ Data.ByteString.Internal.ByteString
                                (Data.Text.Encoding.$wencodeUtf8 dt155 dt156 dt157)
                           0#
                           -> GHC.Base.Nothing
                                @ Data.ByteString.Internal.ByteString } } } } } } #)) -}
376ca2777c80b2689a1313fba351bd0e
  $wlvl1 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0] -}
d9ab46928e64758bb9af97266c3bc511
  $wlvl2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 let {
                   $j :: Data.Text.Internal.Text <join 0>
                   = case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# 1# ww2) of wild3 {
                       GHC.Types.False
                       -> case Data.Text.$witerN
                                 Foundation.$fYesodApp33
                                 ww
                                 ww1
                                 ww2 of ww4 { DEFAULT ->
                          case GHC.Prim.-# ww2 ww4 of wild5 {
                            DEFAULT -> Data.Text.Internal.Text ww (GHC.Prim.+# ww1 ww4) wild5
                            0# -> Data.Text.Internal.empty } }
                       GHC.Types.True -> Data.Text.Internal.empty }
                 } in
                 let {
                   wild :: Data.Text.Internal.Text <join 0> {- Strictness: m -}
                   = Data.Text.Internal.Text ww ww1 ww2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> Data.Text.Internal.Text
                     <join 1> {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                 DEFAULT -> wild '-'# -> $wloop_all (GHC.Prim.+# ww3 1#) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                      DEFAULT -> wild '-'# -> $wloop_all (GHC.Prim.+# ww3 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild4 {
                                      DEFAULT -> wild
                                      '-'# -> $wloop_all (GHC.Prim.+# ww3 2#) } } } } }
                       GHC.Types.True -> $j }
                 } in
                 $wloop_all ww1) -}
c47de90e540ccea1173f100b8ea1bf32
  data App
    = App {appSettings :: Settings.AppSettings,
           appStatic :: Yesod.Static.Static,
           appConnPool :: Database.Persist.Sql.Types.ConnectionPool,
           appHttpManager :: Network.HTTP.Client.Types.Manager,
           appLogger :: Yesod.Core.Types.Logger}
c47de90e540ccea1173f100b8ea1bf32
  axiom Foundation.D:R:AuthIdApp::
      Yesod.Auth.AuthId Foundation.App = Model.UserId
c47de90e540ccea1173f100b8ea1bf32
  axiom Foundation.D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
c47de90e540ccea1173f100b8ea1bf32
  axiom Foundation.D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
cc197e039e60f8edbcb05d170c70e5da
  type DB a =
    forall (m :: * -> *).
    Control.Monad.IO.Class.MonadIO m =>
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend m a
4d59b25564f0d084332079bbefa33602
  type Form x =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         (Yesod.Core.Types.HandlerFor Foundation.App)
         (Yesod.Form.Types.FormResult x, Foundation.Widget)
c47de90e540ccea1173f100b8ea1bf32
  type Handler = Yesod.Core.Types.HandlerFor Foundation.App :: * -> *
b3a289e261a03d0864a9461c6c6b3302
  data MenuItem
    = MenuItem {menuItemLabel :: Data.Text.Internal.Text,
                menuItemRoute :: Yesod.Routes.Class.Route Foundation.App,
                menuItemAccessCallback :: GHC.Types.Bool}
ab406a51a74d5424bccd2fa37b4eb1bc
  data MenuTypes
    = NavbarLeft Foundation.MenuItem | NavbarRight Foundation.MenuItem
c47de90e540ccea1173f100b8ea1bf32
  axiom Foundation.R:AuthEntityApp::
      Yesod.Auth.AuthEntity Foundation.App
        = Yesod.Auth.KeyEntity (Yesod.Auth.AuthId Foundation.App)
c47de90e540ccea1173f100b8ea1bf32
  data instance Yesod.Routes.Class.Route Foundation.App
    = StaticR (Yesod.Routes.Class.Route Yesod.Static.Static)
    | AuthR (Yesod.Routes.Class.Route Yesod.Auth.Routes.Auth)
    | FaviconR
    | RobotsR
    | HomeR
    | CommentR
    | ProfileR
    | LoginAppR
    | EscolaR
    | EscolaIdR Model.EscolaId
    | CursoR
    | CursoIdR Model.CursoId
    | EscolaCursoIdR Model.EscolaId
    | VoluntarioR
    | VoluntarioIdR Model.VoluntarioId
    | OfertaR
    | OfertaIdR Model.OfertaId
    | VoluntarioOfertaR
    | VoluntarioOfertaIdR Model.VoluntarioOfertaId
    | VolOfertaR Model.VoluntarioId
    | HostOfertaR Model.HostId
    | HostR
    | HostIdR Model.HostId
c47de90e540ccea1173f100b8ea1bf32
  type Widget = Yesod.Core.Types.WidgetFor Foundation.App ()
c47de90e540ccea1173f100b8ea1bf32
  appConnPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
c47de90e540ccea1173f100b8ea1bf32
  appHttpManager ::
    Foundation.App -> Network.HTTP.Client.Types.Manager
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
c47de90e540ccea1173f100b8ea1bf32
  appLogger :: Foundation.App -> Yesod.Core.Types.Logger
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
c47de90e540ccea1173f100b8ea1bf32
  appSettings :: Foundation.App -> Settings.AppSettings
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
c47de90e540ccea1173f100b8ea1bf32
  appStatic :: Foundation.App -> Yesod.Static.Static
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
82f1e9fc4b0d708578354d5a25b3b504
  isAuthenticated :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp48
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerFor[0]
                               <Foundation.App>_N <Yesod.Core.Types.AuthResult>_R))) -}
b3a289e261a03d0864a9461c6c6b3302
  menuItemAccessCallback :: Foundation.MenuItem -> GHC.Types.Bool
  RecSel Left Foundation.MenuItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.MenuItem) ->
                 case ds of wild { Foundation.MenuItem ds1 ds2 ds3 -> ds3 }) -}
b3a289e261a03d0864a9461c6c6b3302
  menuItemLabel :: Foundation.MenuItem -> Data.Text.Internal.Text
  RecSel Left Foundation.MenuItem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.MenuItem) ->
                 case ds of wild { Foundation.MenuItem ds1 ds2 ds3 -> ds1 }) -}
b3a289e261a03d0864a9461c6c6b3302
  menuItemRoute ::
    Foundation.MenuItem -> Yesod.Routes.Class.Route Foundation.App
  RecSel Left Foundation.MenuItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.MenuItem) ->
                 case ds of wild { Foundation.MenuItem ds1 ds2 ds3 -> ds2 }) -}
2cd3d03be4cc1b632e91c05d81c8503f
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp213
                   Foundation.resourcesApp1) -}
13fbba346d09cf0d281f746a9f75fe12
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp201
                   Foundation.resourcesApp2) -}
4e0b15a90f4d4089d81bd476ea98127f
  resourcesApp10 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp147
                   Foundation.resourcesApp11) -}
ecd3663f8b161292672446b825f6bb2e
  resourcesApp100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp101) -}
b995d11569bf2ad8bd588e9555937dfe
  resourcesApp101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OfertaIdR"#) -}
ba60ed38e5c79f03ea45e18f2d66092d
  resourcesApp102 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp103) -}
59132a765a25865fcb00297489ed1f02
  resourcesApp103 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp105
                   Foundation.resourcesApp104
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
c296b7394108399397db20c143051d94
  resourcesApp104 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp98
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
35e39a6eb78a7cca8d5b8e2034d5df39
  resourcesApp105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp106) -}
f660d6ef646a49a091966512f495299e
  resourcesApp106 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OfertaR"#) -}
379542025396b7c5c149ebc10e766701
  resourcesApp107 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp108) -}
4e316111beb8b4a1ef120f80fc732111
  resourcesApp108 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp115
                   Foundation.resourcesApp109
                   Foundation.resourcesApp25
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
fdc13aa5a86063ee1c20d83b072a1567
  resourcesApp109 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp113
                   Foundation.resourcesApp110) -}
ec9e04992c41d9ef1db9ab902f3ce26d
  resourcesApp11 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp136
                   Foundation.resourcesApp12) -}
30842723443a490555e25609c55355db
  resourcesApp110 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp111
                   Foundation.resourcesApp61) -}
f78f16b82b5bb5cb761f216a1f118157
  resourcesApp111 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp112) -}
769b74ce956035387f34982ee6e46944
  resourcesApp112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp15) -}
7604d11bccd6f5ea636d35b32ffd8e73
  resourcesApp113 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp114) -}
c14b46e315ae07b052e30001a4b7a120
  resourcesApp114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp17) -}
a21311560432a272217310ba30a258d5
  resourcesApp115 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp116) -}
811860d547639af68f79a2401dc623a7
  resourcesApp116 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioIdR"#) -}
71842d93b4b1c5deba5249715bacde62
  resourcesApp117 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp118) -}
6095bc975603f0f1e2a6a791be96b8b7
  resourcesApp118 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp120
                   Foundation.resourcesApp119
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
07320edac66de5382137b196f990ab1b
  resourcesApp119 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp113
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
51c1bc079a6dbe04099d01f82ed63ac5
  resourcesApp12 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp122
                   Foundation.resourcesApp13) -}
3dff49d9f650a956283ffaef247427ee
  resourcesApp120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp121) -}
753180ec89af78c981defa3114ca5c80
  resourcesApp121 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioR"#) -}
ca15f527ec7b68a57fa32b01092a09aa
  resourcesApp122 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp123) -}
f1cb04f2c51290c86da008a9fec8f234
  resourcesApp123 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp134
                   Foundation.resourcesApp124
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
831439ac497ae8aaf10f73c3886f3a56
  resourcesApp124 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp132
                   Foundation.resourcesApp125) -}
9286141f05a33ec30189d8c5bfdccc6c
  resourcesApp125 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp130
                   Foundation.resourcesApp126) -}
2fd96fd81ac48705171e7a4e06539028
  resourcesApp126 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp127
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
43dbc028eb33474c4b2a1f36f7fd7baf
  resourcesApp127 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp128) -}
60e2530e2c6f92ad9f2d61f17bd49eaf
  resourcesApp128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp129) -}
0fa8a750457a95f7f1da56b1b2f1a714
  resourcesApp129 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EscolaId"#) -}
0a3ebd92fab45af9a2955660520ba207
  resourcesApp13 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp117
                   Foundation.resourcesApp14) -}
a11c225bb55b0fa34c317d7abf3a3262
  resourcesApp130 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp131) -}
4fc6712e2a02ece8d4aff89cee68c8f9
  resourcesApp131 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp23) -}
c9b4f0b7be0c57afd94f27805ecbad49
  resourcesApp132 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp133) -}
e557b9a611fb4e03d560fb7804dba7c7
  resourcesApp133 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp20) -}
cc3dec63ded71900c40e7863c71419d9
  resourcesApp134 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp135) -}
5923222ab9579da39351b5a08d9f51a1
  resourcesApp135 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EscolaCursoIdR"#) -}
344b2683a22059cb85285173f70d5e82
  resourcesApp136 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp137) -}
7c2cd6e4ae8f88d71fcab31cb743c4ca
  resourcesApp137 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp145
                   Foundation.resourcesApp140
                   Foundation.resourcesApp138
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e8f94954ad0af72521a66a8b73bf84be
  resourcesApp138 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp139) -}
8eb0b9cabcdcdbc41ccfd3a449677475
  resourcesApp139 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp45
                   Foundation.resourcesApp26) -}
f624ac16e0caf2b5ed2d4e804ef84403
  resourcesApp14 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp107
                   Foundation.resourcesApp15) -}
85ea5cc340d5025414d8ad80c7b8a97d
  resourcesApp140 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp132
                   Foundation.resourcesApp141) -}
984021f504e492b63fbe504f7716e1ee
  resourcesApp141 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp142
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
63d46b98304bcb038e723076ae6df140
  resourcesApp142 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp143) -}
e7bb37577b880a8a1a934079b2cbc840
  resourcesApp143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp144) -}
6fab79a332bed8b52708e1a79caed2e6
  resourcesApp144 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CursoId"#) -}
261b315017674af9eaa5a7f8dd52e05b
  resourcesApp145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp146) -}
a718b9617acfb7257ccb03ecab45846d
  resourcesApp146 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CursoIdR"#) -}
012600f6cd4a733fcb4e4ff52841efa4
  resourcesApp147 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp148) -}
2c95e38c79df26fbc8ee6b99dc90c916
  resourcesApp148 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp150
                   Foundation.resourcesApp149
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
b151f9294895adf57a50ec643b586b30
  resourcesApp149 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp132
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
da08333c6607f10f019f10112089d7f2
  resourcesApp15 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp102
                   Foundation.resourcesApp16) -}
3bddbc044aff8b1371cd576505deb42b
  resourcesApp150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp151) -}
aad677be565b09a636d1ac0dd87c110c
  resourcesApp151 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CursoR"#) -}
1f8ea0256a5cd6475750286c8d2a5a00
  resourcesApp152 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp153) -}
37d3961669cacd1d2add011aaf385720
  resourcesApp153 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp154
                   Foundation.resourcesApp125
                   Foundation.resourcesApp138
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
96864eff42f2f645c5d5c25a1b43b4f4
  resourcesApp154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp155) -}
c3762f76ea25cffabfdcf5cc3b026b91
  resourcesApp155 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EscolaIdR"#) -}
07792867bf29282409d727cd61e4d04c
  resourcesApp156 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp157) -}
48bbd6ac9f8a69ac531cd5512803f0b0
  resourcesApp157 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp159
                   Foundation.resourcesApp158
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
8b72d3bb219fa5e2226f8b4d27d646e5
  resourcesApp158 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp130
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
efd1830d81459dc911c3604c7510c3ad
  resourcesApp159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp160) -}
234b5fc7e27eeacc5bd0c15514a3a704
  resourcesApp16 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp85
                   Foundation.resourcesApp17) -}
fdc32ec70db5b85f9a6365263a9a4750
  resourcesApp160 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("EscolaR"#) -}
48063b74ae0b0c18668c9d8580bcee68
  resourcesApp161 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp162) -}
fac4aee899cc8a7809ee1c3c188417ba
  resourcesApp162 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp167
                   Foundation.resourcesApp164
                   Foundation.resourcesApp163
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
48d93761c24474ec1f73a70609e4e8d7
  resourcesApp163 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp42) -}
7bc175f08c23293e83426b18d6b2ca0d
  resourcesApp164 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp165
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
a3afc7d191f28d19968a258f0ddf78de
  resourcesApp165 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp166) -}
cbbcf71b43e935ed483417ae33e013c3
  resourcesApp166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp27) -}
5cb3059687ad5b33d4b7912c828c4604
  resourcesApp167 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp168) -}
183443044bb5c1cf55216c2075c4f680
  resourcesApp168 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LoginAppR"#) -}
39eedae0b7885022803506f6e70f099d
  resourcesApp169 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp170) -}
64ae01b03c0ceeb1966b6b950bafa2fa
  resourcesApp17 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp80
                   Foundation.resourcesApp18) -}
955139d466b73f25c8572b980aeb2628
  resourcesApp170 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp174
                   Foundation.resourcesApp171
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
0b8adc093a1c23b457640640ecabb2ce
  resourcesApp171 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp172
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
70fca27a6a5ffcafa2c329c9ecaf08fe
  resourcesApp172 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp173) -}
cf0365b18de029e77fbd20bba583abc4
  resourcesApp173 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp30) -}
347ffed2256a2f8192e235a3281fbbdc
  resourcesApp174 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp175) -}
1a22e3e370306fe4eee5a3057aa690d8
  resourcesApp175 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ProfileR"#) -}
04c8c99b2e327d3bcbc813c88a923112
  resourcesApp176 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp177) -}
74aeb910a2e6b23176757ba0a38fdf1e
  resourcesApp177 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp181
                   Foundation.resourcesApp178
                   Foundation.resourcesApp163
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
f58d9be0a1f53115b8e5b032f95f10c2
  resourcesApp178 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp179
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
e1dee7d2615f4e92bbd80c4b520012c0
  resourcesApp179 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp180) -}
405ebddb183d294d74dc03e6e42f3d1e
  resourcesApp18 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp69
                   Foundation.resourcesApp19) -}
bb7925d0b961fb179a349e65d8a9af7d
  resourcesApp180 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp33) -}
eb21f1c582018e981421ecdd30ea5a95
  resourcesApp181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp182) -}
ef936bc91429a998834e85f47ccbebcf
  resourcesApp182 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CommentR"#) -}
5a16fc0b5e0fb3002c95dc2be488e882
  resourcesApp183 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp184) -}
53e605c36ed61fe3d6ecf4b5cc62f48f
  resourcesApp184 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp185
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
0a0cf2b86fef3e048f459a2e36e15a41
  resourcesApp185 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp186) -}
1e9a77a8ec3e39369a2ccc8a7539848a
  resourcesApp186 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HomeR"#) -}
2598d4e209e52050c270438271ac796b
  resourcesApp187 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp188) -}
7c8d3add1a2b41878d0073c19f91f10d
  resourcesApp188 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp192
                   Foundation.resourcesApp189
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
3e2ce776c2a6339bbe1f2a5f32e37c93
  resourcesApp189 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp190
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
4ff3027f7b9c68f6a09531dc86ecc599
  resourcesApp19 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp58
                   Foundation.resourcesApp20) -}
85419a60c50c1e0d861aad00166f193f
  resourcesApp190 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp191) -}
1f437d9e1f2a6c807146adca9cf8d214
  resourcesApp191 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp36) -}
306ecb42f51c041cbc605cb52b59f96c
  resourcesApp192 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp193) -}
86933a890a621aac7a1c82e77a97d14a
  resourcesApp193 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("RobotsR"#) -}
7074c04b400e51c48f79208437ebfb84
  resourcesApp194 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp195) -}
4dacbab46c68879f637e508b96107312
  resourcesApp195 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp199
                   Foundation.resourcesApp196
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
5f0a69b977caf2ad74568c262bc614a4
  resourcesApp196 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp197
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
d426e3f9e04750da2152bf00a5c4cd3f
  resourcesApp197 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp198) -}
bb072fb3fc657fd5c5e8f263f85f8a85
  resourcesApp198 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp39) -}
3a56a5967a90a8d1670e05709b8d9fa6
  resourcesApp199 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp200) -}
f85ad13c5be10519b3633bd85db454eb
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp194
                   Foundation.resourcesApp3) -}
2b49b62396b1e9da34bcd397b85f5a46
  resourcesApp20 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp49
                   Foundation.resourcesApp21) -}
424879170f8b243d61f0cef397c34606
  resourcesApp200 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FaviconR"#) -}
f134d45f7d97b230c44dedcfc5efe450
  resourcesApp201 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp202) -}
bcaacbcfe3ffcc6e08f17418f0acd209
  resourcesApp202 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp211
                   Foundation.resourcesApp208
                   Foundation.resourcesApp203
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
69947e0e84ac83c2ea87bca1c94828d9
  resourcesApp203 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp206
                   Foundation.resourcesApp204) -}
00ccbbdc2f127a0266a1f566255d3a45
  resourcesApp204 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp205) -}
904531ed99d0cb4c6adbc471c082666c
  resourcesApp205 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("getAuth"#) -}
b74870b3bd9c834670a72af48adb377b
  resourcesApp206 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp207) -}
8627038e5aec7a568eb2935164218263
  resourcesApp207 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Auth"#) -}
4af4e2e3bbc48dd0f5c14cca665fe7c5
  resourcesApp208 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp209
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
a30d31d3a146dd7f120a79017af8a0c3
  resourcesApp209 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp210) -}
1b255e98706acb2d00efb995f73888b3
  resourcesApp21 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp38
                   Foundation.resourcesApp22) -}
b396dd2905e667488f06647a38cf9466
  resourcesApp210 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp41) -}
15dce77eb05c0a5a347b9582ff04cde3
  resourcesApp211 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp212) -}
86cb374d228da55108017125be44984d
  resourcesApp212 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AuthR"#) -}
c957cbb105e28a78a32c27eb2eaac22e
  resourcesApp213 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp214) -}
71047d0df337b0db43b6b6088bb1850a
  resourcesApp214 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp223
                   Foundation.resourcesApp220
                   Foundation.resourcesApp215
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
17867530f6b2497ece8ab9d34e8ed2c4
  resourcesApp215 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp218
                   Foundation.resourcesApp216) -}
01a92e4773facde5c74482da0ebd455b
  resourcesApp216 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp217) -}
e2cf5a0edf7af3c49b6fc10472935125
  resourcesApp217 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("appStatic"#) -}
68cf57bce8a2677d6fe786a8a1584d62
  resourcesApp218 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp219) -}
3946f1034256ce41e133406655ae4a82
  resourcesApp219 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Static"#) -}
0873ebb7b0b2f18e624538b4a1c79312
  resourcesApp22 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp23
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
3ea0e4fa37a86018231192829c8516d9
  resourcesApp220 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp221
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
722e427c52d8734b2bfd3be1a300e0a9
  resourcesApp221 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp222) -}
04819cf38e62e575e1579ea275f906cf
  resourcesApp222 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp43) -}
ad4d87f51d39cbf869627a7bc522e897
  resourcesApp223 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp224) -}
325e091dec516dec824f2f3fdcf8342e
  resourcesApp224 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("StaticR"#) -}
561a45b7b0097a27831e0660705c9bf1
  resourcesApp23 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp24) -}
21d0067ca1a54a03d9c738bb035bcb40
  resourcesApp24 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp36
                   Foundation.resourcesApp29
                   Foundation.resourcesApp25
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e0807a235e4c224b893d8707789a7652
  resourcesApp25 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp26) -}
175d6447da85ae5e0762956f9f3efacb
  resourcesApp26 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp27
                   (GHC.Types.[] @ GHC.Base.String)) -}
7065186b237e500176cd8646765106c2
  resourcesApp27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp28) -}
fdc593d1e1847a4c72c7b8341c500576
  resourcesApp28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PUT"#) -}
9b7a4e433c2b8abadd920583675b783e
  resourcesApp29 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp34
                   Foundation.resourcesApp30) -}
5a54dfd2b08e03a1ebc823403cd056c9
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp187
                   Foundation.resourcesApp4) -}
2e040da732fd2566f74fab215bb84b82
  resourcesApp30 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp31
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
0453cd67ca04b010a4a1a382be205858
  resourcesApp31 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp32) -}
0858afc66eb0db1350f4d019338a2a18
  resourcesApp32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp33) -}
d49c92abd0f741f8526afd95d6c62ace
  resourcesApp33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HostId"#) -}
fb88f59ff85e879392030924cc33faa0
  resourcesApp34 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp35) -}
83d40e214c529114afc2e8dafaccaa4a
  resourcesApp35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp2) -}
bbd037caf80a6099b35f0e3d414e5a32
  resourcesApp36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp37) -}
141e0b93e181ab3c0d84fc3789cd0f31
  resourcesApp37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HostIdR"#) -}
3214de3bc984d60bfc54776cb3bce7e1
  resourcesApp38 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp39) -}
c12ce1ab5c8f63844d0e06f3cb1b153d
  resourcesApp39 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp47
                   Foundation.resourcesApp46
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
ce45c4a975084541fec3e4eb355b5820
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp183
                   Foundation.resourcesApp5) -}
4029167a63bef8d13eb763d8f2e70476
  resourcesApp40 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp41) -}
686401a826e4cfd47c96c43f35be3be3
  resourcesApp41 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp45
                   Foundation.resourcesApp42) -}
47df95aca2ad1453c54bf64861ff0078
  resourcesApp42 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp43
                   (GHC.Types.[] @ GHC.Base.String)) -}
a27d2a96d99dcb17d20a5735cfd9426c
  resourcesApp43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp44) -}
ef0a81054e31e6bb78a48b97435510a2
  resourcesApp44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("POST"#) -}
7796c7659bd97fcc9cf7e6bc4dd58de0
  resourcesApp45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fYesodApp_addr#3) -}
8d3d254fadd1bd865e3384ba13d17903
  resourcesApp46 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
761eba6dfabddb8131c9574ca3a7fc1a
  resourcesApp47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp48) -}
a55eb3a2dc6d111619001d2ae013f09f
  resourcesApp48 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HostR"#) -}
f3d9d5e7c35aa5d6db1473df9bd1579e
  resourcesApp49 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp50) -}
56965e60b25e69e67386a7f6bfaa1bf3
  resourcesApp5 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp176
                   Foundation.resourcesApp6) -}
3e75c937fc3d45be91b11a53bc86055a
  resourcesApp50 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp56
                   Foundation.resourcesApp53
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
a39e24b72ed8901ff698210134e7bf08
  resourcesApp51 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp52) -}
87185b741adee836ba5ec30cdad4ae91
  resourcesApp52 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp45
                   (GHC.Types.[] @ GHC.Base.String)) -}
fe6452eba1584d574fe47886346605fe
  resourcesApp53 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp54
                   Foundation.resourcesApp30) -}
abbd3524569e0d31014fa78ba9127dc6
  resourcesApp54 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp55) -}
fa2d5e32f91c5205ee2ef766793ebbb1
  resourcesApp55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp5) -}
4c05290203ecb5db023740e82b932bf4
  resourcesApp56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp57) -}
1bdd0d35f2351d63608caa320ffec477
  resourcesApp57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HostOfertaR"#) -}
544bcaaeb06beb32fadda9baf1a3798b
  resourcesApp58 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp59) -}
f611d0d4e657768d29795f01291196c7
  resourcesApp59 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp67
                   Foundation.resourcesApp60
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
9e5fc865506824e89f52b870123a4ac9
  resourcesApp6 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp169
                   Foundation.resourcesApp7) -}
f4d84486042f77d1d88b4dc83b944845
  resourcesApp60 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp65
                   Foundation.resourcesApp61) -}
1f35642d58d29a7ee2ad32e4a99066a8
  resourcesApp61 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp62
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
91cb85bce4d703bea1ba2a933e50cbef
  resourcesApp62 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp63) -}
7acd8619a128502c40657bfb597d4b56
  resourcesApp63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp64) -}
bef7f5ad15a1a435f6c6b100303f7b5d
  resourcesApp64 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioId"#) -}
8968576976734e8e0d429f70c6b0485c
  resourcesApp65 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp66) -}
1802dd03808fafd28d202f75dda152d1
  resourcesApp66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp7) -}
50a7a105302dddba17865402d488ed3f
  resourcesApp67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp68) -}
cc1f9c031b85268f4d115661ff279533
  resourcesApp68 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VolOfertaR"#) -}
5b08722675204c9d8382b0bbf44c57bb
  resourcesApp69 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp70) -}
7fd84397131127e2f5ce8a6c624df778
  resourcesApp7 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp161
                   Foundation.resourcesApp8) -}
58c4ece64d8c9ce31914b7f1c9b51332
  resourcesApp70 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp78
                   Foundation.resourcesApp71
                   Foundation.resourcesApp51
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
f29f88066d62427c3382ab5af66fd0e4
  resourcesApp71 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp76
                   Foundation.resourcesApp72) -}
7d34afa5c04b13eb2f7755caec930293
  resourcesApp72 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp73
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
758e3af9b0a88e3a9e77033a91a4e351
  resourcesApp73 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp74) -}
52322e7eafadf72636cf680f3bc7791d
  resourcesApp74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp75) -}
c9edccf9cdf179a4457effe9da5ab625
  resourcesApp75 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioOfertaId"#) -}
7fe9457d54de4ff4892119c61a36df85
  resourcesApp76 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp77) -}
c453934d58ca3c462334bc6191180b02
  resourcesApp77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp9) -}
0a5508be1e5f88b916b73bec681e1943
  resourcesApp78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp79) -}
62ad558c78986f19f52a68a16c0cae38
  resourcesApp79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioOfertaIdR"#) -}
5d94a87918c726cb9632bca66061dcd2
  resourcesApp8 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp156
                   Foundation.resourcesApp9) -}
1beb7b229bf20d9e9a39c97c86f0af68
  resourcesApp80 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp81) -}
f83f2c86f33a95333503bbbef5ee4715
  resourcesApp81 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp83
                   Foundation.resourcesApp82
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
cc0c2cc6a7cc27d4ea728ae669fa7db3
  resourcesApp82 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp76
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
42d28bbdf9ca68d269b2afe8780c83f4
  resourcesApp83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp84) -}
7270be4f6fd8a51c3b3814062f9d3347
  resourcesApp84 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("VoluntarioOfertaR"#) -}
7e8538f418cbc4661cd46f3072ad7bf7
  resourcesApp85 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp86) -}
a7f7bd3d4fe0e321399121e7a882902a
  resourcesApp86 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.resourcesApp100
                   Foundation.resourcesApp93
                   Foundation.resourcesApp87
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
4e0196b9c66b55696cfdb26673bb7fb4
  resourcesApp87 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp88) -}
ffcfe72b4ea7d5f8cb291e1313164a6c
  resourcesApp88 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp45
                   Foundation.resourcesApp89) -}
88f15cda19921bc5cec721018fd0433f
  resourcesApp89 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp27
                   Foundation.resourcesApp90) -}
5b90ed5b49b16f33f05815e1f7fe04b4
  resourcesApp9 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp152
                   Foundation.resourcesApp10) -}
5cc5dda9e5346a93db74b1208eb5acc6
  resourcesApp90 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp91
                   (GHC.Types.[] @ GHC.Base.String)) -}
7b8954613467da6bc25c7f1a0f9a4744
  resourcesApp91 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp92) -}
c5267cc702f02e5a27a64eb77a0b3a33
  resourcesApp92 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DELETE"#) -}
f058feb1bb6c8bdcae94f026fe2744e7
  resourcesApp93 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp98
                   Foundation.resourcesApp94) -}
a9382b9c0581f7b22ec74ceb871468db
  resourcesApp94 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp95
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
1ef3eeb0396d68840ecf9a7445275ccd
  resourcesApp95 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp96) -}
820e6ccb5a39b622aeb0b60af8f79fc8
  resourcesApp96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.resourcesApp97) -}
cc6a4657ef2627877da51379381bea2e
  resourcesApp97 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("OfertaId"#) -}
5943d131286eed9d3a00d575ec188838
  resourcesApp98 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp99) -}
70580a935bdb67536513797202b87d6a
  resourcesApp99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Foundation.$fRenderRouteApp12) -}
6547e28c0f618ceb180c11431381a27c
  unsafeHandler ::
    Foundation.App -> Foundation.Handler a -> GHC.Types.IO a
  {- Arity: 2,
     Unfolding: (\ @ a ->
                 Yesod.Core.Unsafe.fakeHandlerGetLogger
                   @ Foundation.App
                   @ GHC.Types.IO
                   @ a
                   Foundation.$fYesodApp
                   Control.Monad.IO.Class.$fMonadIOIO
                   Foundation.appLogger) -}
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Network.HTTP.Client.Types.HasHttpManager [Foundation.App]
  = Foundation.$fHasHttpManagerApp
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Auth.YesodAuth [Foundation.App]
  = Foundation.$fYesodAuthApp
instance Yesod.Auth.YesodAuthPersist [Foundation.App]
  = Foundation.$fYesodAuthPersistApp
instance Yesod.Core.Class.Breadcrumbs.YesodBreadcrumbs [Foundation.App]
  = Foundation.$fYesodBreadcrumbsApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
instance Yesod.Persist.Core.YesodPersistRunner [Foundation.App]
  = Foundation.$fYesodPersistRunnerApp
family instance Yesod.Auth.AuthEntity [Foundation.App]
  = Foundation.R:AuthEntityApp
family instance Yesod.Auth.AuthId [Foundation.App]
  = Foundation.D:R:AuthIdApp
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SPEC $cmaybeAuthId @ (HandlerFor App)" forall ($d~ :: (Foundation.App :: *)
                                                       Data.Type.Equality.~
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App) :: *))
                                               ($dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler
                                                                    (Yesod.Core.Types.HandlerFor
                                                                       Foundation.App))
  Foundation.$fYesodAuthApp_$cmaybeAuthId @ (Yesod.Core.Types.HandlerFor
                                               Foundation.App)
                                          $dMonadHandler
                                          $d~
  = Foundation.$fYesodAuthApp_$s$cmaybeAuthId
"SPEC/Foundation $fApplicativeReaderT @ (HandlerFor App) _" forall @ r
                                                                   (v :: GHC.Base.Applicative
                                                                           (Yesod.Core.Types.HandlerFor
                                                                              Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerFor
                                                       Foundation.App)
                                                  @ r
                                                  v
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerFor App) _" forall @ r
                                                                         ($dApplicative :: GHC.Base.Applicative
                                                                                             (Yesod.Core.Types.HandlerFor
                                                                                                Foundation.App))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerFor
                                                             Foundation.App)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fFunctorReaderT @ (HandlerFor App) _" forall @ r
                                                               (v :: GHC.Base.Functor
                                                                       (Yesod.Core.Types.HandlerFor
                                                                          Foundation.App))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerFor
                                                   Foundation.App)
                                              @ r
                                              v
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerFor App) _" forall @ r
                                                                      ($dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.HandlerFor
                                                                                         Foundation.App))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerFor
                                                          Foundation.App)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadReaderT @ (HandlerFor App) _" forall @ r
                                                             (v :: GHC.Base.Monad
                                                                     (Yesod.Core.Types.HandlerFor
                                                                        Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerFor
                                                 Foundation.App)
                                            @ r
                                            v
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>> @ (HandlerFor App) _" forall @ r
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                (Yesod.Core.Types.HandlerFor
                                                                                   Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ (Yesod.Core.Types.HandlerFor
                                                      Foundation.App)
                                                 @ r
                                                 $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerFor App) _" forall @ r
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 (Yesod.Core.Types.HandlerFor
                                                                                    Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerFor
                                                       Foundation.App)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerFor App) _" forall @ r
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  (Yesod.Core.Types.HandlerFor
                                                                                     Foundation.App))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerFor
                                                        Foundation.App)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation fromList @ Text" [orphan] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Internal.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

