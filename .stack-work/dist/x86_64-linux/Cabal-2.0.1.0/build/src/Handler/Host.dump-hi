
==================== FINAL INTERFACE ====================
2018-06-11 02:50:29.940751 UTC

interface IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Handler.Host 8022
  interface hash: 7840d9297f1eb0c5425b631c4820bd76
  ABI hash: f80db075ca847ff6b89f8f76c11047b7
  export-list hash: e399958c04fcf7844a2c62d28b201b59
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d46ca90f7e7fcc14383f455542c21745
  sig of: Nothing
  used TH splices: False
  where
exports:
  Handler.Host.getHostR
  Handler.Host.postHostR
  Handler.Host.putHostIdR
module dependencies: Foundation Import Import.NoFoundation Model
                     Settings Settings.StaticFiles
package dependencies: StateVar-1.1.1.0 adjunctions-4.4
                      aeson-1.2.4.0 aeson-compat-0.3.7.1 ansi-terminal-0.8.0.4
                      appar-0.1.4 array-0.5.2.0 asn1-encoding-0.9.5 asn1-parse-0.9.4
                      asn1-types-0.3.2 async-2.1.1.1 attoparsec-0.13.2.2
                      attoparsec-iso8601-1.0.0.0 authenticate-1.3.4 auto-update-0.1.4
                      base-4.10.1.0 base-compat-0.9.3 base-orphans-0.7
                      base64-bytestring-1.0.0.1 basement-0.0.7 basic-prelude-0.7.0
                      bifunctors-5.5.2 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.0.1 blaze-markup-0.8.2.1 bsb-http-chunked-0.0.0.2
                      byteable-0.1.1 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 cereal-0.5.5.0 chunked-data-0.3.1
                      cipher-aes-0.2.11 classy-prelude-1.4.0 classy-prelude-conduit-1.4.0
                      classy-prelude-yesod-1.4.0 clientsession-0.9.1.2 colour-2.3.4
                      comonad-5.0.3 conduit-1.3.0.2 conduit-extra-1.3.0 connection-0.2.8
                      containers-0.5.10.2 contravariant-1.4.1 cookie-0.4.4
                      cprng-aes-0.6.1 crypto-api-0.13.3 crypto-cipher-types-0.0.9
                      crypto-random-0.0.9 cryptonite-0.25 cryptonite-conduit-0.2.2
                      css-text-0.1.3.0 data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.3.0
                      deepseq-generics-0.2.0.0 directory-1.3.0.2 distributive-0.5.3
                      dlist-0.8.0.4 dlist-instances-0.1.1.1 easy-file-0.2.2
                      email-validate-2.3.2.5 entropy-0.3.8 exceptions-0.8.3
                      fast-logger-2.4.11 file-embed-0.0.10.1 filepath-1.4.1.2 free-5.0.2
                      ghc-boot-th-8.2.2 ghc-prim-0.5.1.1 hashable-1.2.7.0
                      haskell-src-exts-1.20.2 haskell-src-meta-0.8.0.2 hjsmin-0.2.0.2
                      hourglass-0.2.11 http-api-data-0.3.7.2 http-client-0.5.12.1
                      http-client-tls-0.3.5.3 http-conduit-2.3.1 http-date-0.0.7
                      http-types-0.12.1 http2-1.6.3 integer-gmp-1.0.1.0
                      integer-logarithms-1.0.2.1 iproute-1.7.5 kan-extensions-5.1
                      keys-3.12 language-javascript-0.6.0.11 lifted-base-0.2.3.12
                      memory-0.14.16 mime-types-0.1.0.7 monad-control-1.0.2.3
                      monad-logger-0.3.28.5 monad-loops-0.4.3 mono-traversable-1.0.8.1
                      mono-traversable-instances-0.1.0.0 mtl-2.2.2
                      mutable-containers-0.3.4 network-2.6.3.5 network-uri-2.6.1.0
                      old-locale-1.0.0.7 old-time-1.1.0.3 parsec-3.1.13.0
                      path-pieces-0.2.1 pem-0.2.4 persistent-2.8.2
                      persistent-postgresql-2.8.2.0 persistent-template-2.5.4
                      pointed-5.0.1 postgresql-libpq-0.9.4.1 postgresql-simple-0.5.3.0
                      pretty-1.1.3.3 primitive-0.6.3.0 process-1.6.1.0 profunctors-5.2.2
                      psqueues-0.2.7.0 random-1.1 resource-pool-0.2.3.2 resourcet-1.2.1
                      safe-0.3.17 say-0.1.0.0 scientific-0.3.6.2 securemem-0.1.10
                      semigroupoids-5.2.2 shakespeare-2.0.15 silently-1.2.5
                      simple-sendfile-0.2.27 skein-1.0.9.4 socks-0.5.6 split-0.2.3.3
                      stm-2.4.5.0 stm-chans-3.0.0.4 streaming-commons-0.1.19
                      stringsearch-0.3.6.6 tagged-0.8.5 tagsoup-0.14.6
                      tagstream-conduit-0.5.5.3 template-haskell-2.12.0.0 text-1.2.3.0
                      time-1.8.0.2 time-locale-compat-0.1.1.4 tls-1.4.1
                      transformers-0.5.2.0 transformers-base-0.4.4
                      transformers-compat-0.5.1.4 unix-2.7.2.2 unix-compat-0.5.0.1
                      unix-time-0.3.8 unliftio-0.2.7.0 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 utf8-string-1.0.1.1 uuid-types-1.0.3
                      vault-0.3.1.0 vector-0.12.0.1 vector-algorithms-0.7.0.1
                      vector-instances-3.4 wai-3.2.1.2 wai-app-static-3.1.6.2
                      wai-extra-3.0.22.0 wai-logger-2.3.2 warp-3.2.22 word8-0.1.3
                      x509-1.7.3 x509-store-1.6.6 x509-system-1.6.6
                      x509-validation-1.6.10 xml-conduit-1.8.0 xml-types-0.3.6
                      xss-sanitize-0.3.5.7 yaml-0.8.30 yesod-1.6.0 yesod-auth-1.6.3
                      yesod-core-1.6.5 yesod-form-1.6.1 yesod-newsfeed-1.6.1.0
                      yesod-persistent-1.6.0 yesod-static-1.6.0 zlib-0.6.2
orphans: mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
         vector-instances-3.4:Data.Vector.Instances
         base-orphans-0.7:Data.Orphans
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         yesod-auth-1.6.3:Yesod.Auth
         http-client-0.5.12.1:Network.HTTP.Client.Request
         persistent-template-2.5.4:Database.Persist.TH
         colour-2.3.4:Data.Colour crypto-api-0.13.3:Crypto.Classes
         basement-0.0.7:Basement.UArray.Base basement-0.0.7:Basement.Block
         network-2.6.3.5:Network.Socket
         haskell-src-exts-1.20.2:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         unix-time-0.3.8:Data.UnixTime.Diff
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         stm-2.4.5.0:Control.Monad.STM time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Foundation
                         IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH:Model
                         adjunctions-4.4:Data.Functor.Rep
                         aeson-1.2.4.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats basement-0.0.7:Basement.Block.Base
                         basement-0.0.7:Basement.Monad
                         basement-0.0.7:Basement.MutableBuilder basement-0.0.7:Basement.Nat
                         basement-0.0.7:Basement.NonEmpty
                         basement-0.0.7:Basement.Numerical.Subtractive
                         basement-0.0.7:Basement.PrimType basement-0.0.7:Basement.String
                         basement-0.0.7:Basement.String.Encoding.ASCII7
                         basement-0.0.7:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.7:Basement.String.Encoding.UTF16
                         basement-0.0.7:Basement.String.Encoding.UTF32
                         basement-0.0.7:Basement.Types.OffsetSize
                         basement-0.0.7:Basement.UArray.Base
                         basement-0.0.7:Basement.UTF8.Base
                         bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped
                         conduit-1.3.0.2:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.2:Data.Conduit.Internal.Pipe
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         cryptonite-0.25:Crypto.ECC cryptonite-0.25:Crypto.Error.Types
                         cryptonite-0.25:Crypto.Hash.Blake2
                         cryptonite-0.25:Crypto.Hash.Blake2b
                         cryptonite-0.25:Crypto.Hash.Blake2bp
                         cryptonite-0.25:Crypto.Hash.Blake2s
                         cryptonite-0.25:Crypto.Hash.Blake2sp
                         cryptonite-0.25:Crypto.Hash.Keccak cryptonite-0.25:Crypto.Hash.MD2
                         cryptonite-0.25:Crypto.Hash.MD4 cryptonite-0.25:Crypto.Hash.MD5
                         cryptonite-0.25:Crypto.Hash.RIPEMD160
                         cryptonite-0.25:Crypto.Hash.SHA1 cryptonite-0.25:Crypto.Hash.SHA224
                         cryptonite-0.25:Crypto.Hash.SHA256 cryptonite-0.25:Crypto.Hash.SHA3
                         cryptonite-0.25:Crypto.Hash.SHA384
                         cryptonite-0.25:Crypto.Hash.SHA512
                         cryptonite-0.25:Crypto.Hash.SHA512t
                         cryptonite-0.25:Crypto.Hash.SHAKE
                         cryptonite-0.25:Crypto.Hash.Skein256
                         cryptonite-0.25:Crypto.Hash.Skein512
                         cryptonite-0.25:Crypto.Hash.Tiger
                         cryptonite-0.25:Crypto.Hash.Whirlpool dlist-0.8.0.4:Data.DList
                         email-validate-2.3.2.5:Text.Email.Parser
                         free-5.0.2:Control.Comonad.Cofree free-5.0.2:Control.Monad.Free
                         free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.Syntax
                         http-client-0.5.12.1:Network.HTTP.Client iproute-1.7.5:Data.IP.Addr
                         iproute-1.7.5:Data.IP.Range kan-extensions-5.1:Data.Functor.Day
                         keys-3.12:Data.Key
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.28.5:Control.Monad.Logger
                         mono-traversable-1.0.8.1:Data.Containers
                         mono-traversable-1.0.8.1:Data.MonoTraversable
                         mono-traversable-1.0.8.1:Data.NonNull
                         mono-traversable-1.0.8.1:Data.Sequences
                         mono-traversable-instances-0.1.0.0:Data.MonoTraversable.Instances
                         mutable-containers-0.3.4:Data.Mutable.BRef
                         mutable-containers-0.3.4:Data.Mutable.Class
                         mutable-containers-0.3.4:Data.Mutable.DLList
                         mutable-containers-0.3.4:Data.Mutable.Deque
                         mutable-containers-0.3.4:Data.Mutable.PRef
                         mutable-containers-0.3.4:Data.Mutable.SRef
                         mutable-containers-0.3.4:Data.Mutable.URef
                         network-uri-2.6.1.0:Network.URI
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.8.2.0:Database.Persist.Postgresql
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.15:Text.Internal.Css
                         shakespeare-2.0.15:Text.Shakespeare tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         vector-instances-3.4:Data.Vector.Instances
                         xml-types-0.3.6:Data.XML.Types yesod-auth-1.6.3:Yesod.Auth
                         yesod-auth-1.6.3:Yesod.Auth.Routes
                         yesod-core-1.6.5:Yesod.Core.Class.Handler
                         yesod-core-1.6.5:Yesod.Core.Internal.LiteApp
                         yesod-core-1.6.5:Yesod.Core.Types yesod-static-1.6.0:Yesod.Static
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  Foundation d8dfd41e5ca0aa4fa64f74ef82850bd5
  Handler c47de90e540ccea1173f100b8ea1bf32
import  -/  Import d2a2ad1a2e43889a57b80292c008e78d
  exports: 9ed660c05ab47b96cffd42010aa4b38a
import  -/  Model 690c55138ea9a00345704b644bb474fa
  Host c86c423815bdb93dafdaac42a6f38322
  HostId fd93dc245fcb1c68fa6e01d0cc9f8479
  HostNome 2c9c9a7dacf4c05a82e3cb1a573c4d4a
import  -/  aeson-1.2.4.0:Data.Aeson.Types.Internal 784b71bc86ee16e29783284c611f3837
import  -/  aeson-1.2.4.0:Data.Aeson.Types.ToJSON 72e379d37083588a3575a678e59632aa
import  -/  http-types-0.12.1:Network.HTTP.Types.Status 6172b4730ff68a0204e2f520adb9992b
import  -/  persistent-2.8.2:Database.Persist.Class.PersistEntity ebafaf6069c7e096aacccb493c5e975c
import  -/  persistent-2.8.2:Database.Persist.Class.PersistQuery 308afab9ea67f302da5d776ff27d419f
import  -/  persistent-2.8.2:Database.Persist.Class.PersistStore 5f5e05043066ee7e65ed1eb9cecf0e7b
import  -/  persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore abbc05d2338ccc2e18411359e0fe9674
import  -/  persistent-postgresql-2.8.2.0:Database.Persist.Postgresql 96ae6311fad18b19e9619e3fd2e51c56
import  -/  yesod-core-1.6.5:Yesod.Core.Handler 50f39555795fab4e524233a5550cf412
import  -/  yesod-core-1.6.5:Yesod.Core.Json 9cfb7919d14e0fd89f3e215a3c6c3ef1
import  -/  yesod-persistent-1.6.0:Yesod.Persist.Core 9ece31adbd925b93c5f8679a2f1ad61e
9f6a3fa104fc6b46234f39b03797c747
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Host.$trModule3
                   Handler.Host.$trModule1) -}
57ddd8458bfa88d04fa34bce1804fdc4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Handler.Host.$trModule2) -}
79aab6f3403f1cd0bafbe12178e29273
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Handler.Host"#) -}
b32afe283d9fa99f7a822514c62e957d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Handler.Host.$trModule4) -}
abc00593d9c3b14b12811455d576ebe9
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("IAround-0.0.0-AElcV79WSJ1Etv0ISvDaRH"#) -}
1b117cf56cce0f5f1a70aa2a2f3baff8
  $wlvl ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <B,U><B,U>x, Inline: [0] -}
bff5da041e9f3cdc9615bee90f3e857d
  getHostR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Host.getHostR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerFor[0]
                               <Foundation.App>_N <Data.Aeson.Types.Internal.Value>_R))) -}
2d5da459273dc8074a5172c54574fc7d
  getHostR1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ((Database.Persist.Sql.Run.runSqlPool
                          @ Foundation.Handler
                          @ Database.Persist.Sql.Types.Internal.SqlBackend
                          @ [Database.Persist.Class.PersistEntity.Entity Model.Host]
                          (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                          Foundation.$fYesodAuthApp7
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistStore.IsPersistBackend
                                Database.Persist.Sql.Types.Internal.SqlBackend>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                                <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                          Handler.Host.getHostR5
                            `cast`
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                    <Yesod.Core.Types.HandlerFor Foundation.App>_R
                                    <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_N))
                          (case r `cast`
                                (Nth:2
                                     (Trans
                                          ((Yesod.Core.Types.HandlerData
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N))
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N)))_R
                                           ->_R <GHC.Types.IO
                                                   (Yesod.Core.Types.RunHandlerEnv
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App))
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)))>_R)
                                          (<Yesod.Core.Types.HandlerData
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Types.RunHandlerEnv
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))>_R))) of wild { Yesod.Core.Types.HandlerData ds1 ds2 dt155 dt156 ->
                           case ds2 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds3 ds6 ds7 ds8 ds9 ds10 ds11 ->
                           case ds6
                                  `cast`
                                (Nth:3
                                     (Nth:3
                                          (Trans
                                               (Nth:3
                                                    (Trans
                                                         (<Yesod.Core.Types.HandlerData
                                                             Foundation.App Foundation.App>_R
                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                        <Yesod.Core.Class.Handler.HandlerSite
                                                                           (Yesod.Core.Types.HandlerFor
                                                                              Foundation.App)>_R))
                                                         (<Yesod.Core.Types.HandlerData
                                                             Foundation.App Foundation.App>_R
                                                          ->_R (GHC.Types.IO
                                                                  (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                            <Foundation.App>_N)))_R)))
                                               (GHC.Types.N:IO[0]
                                                    <Foundation.App>_R)))) of wild2 { Foundation.App ds ds12 ds13 ds14 ds15 ->
                           ds13 } } }))
                         `cast`
                       (Yesod.Core.Types.N:HandlerFor[0]
                            <Foundation.App>_N
                            <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_R)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld,
                             Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState
                                     (GHC.ST.ST GHC.Prim.RealWorld))
                                0#
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (Nth:2
                                     (Nth:2
                                          (Trans
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Data.Aeson.Types.Internal.Value)>_R
                                                ->_R Sym (GHC.ST.N:ST[0]
                                                              <GHC.Prim.RealWorld>_N
                                                              <Data.Primitive.Array.MutableArray
                                                                 (Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST GHC.Prim.RealWorld))
                                                                 Data.Aeson.Types.Internal.Value>_R))
                                               (((GHC.Prim.State#
                                                    (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                              <GHC.Prim.RealWorld>_N)))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Sym (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                      <GHC.Prim.RealWorld>_N)))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Data.Aeson.Types.Internal.Value>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Data.Aeson.Types.Internal.Value)>_R)))) of ds2 { (#,#) ipv2 ipv3 ->
                         Handler.Host.getHostR_$s$wfoldlM_loop
                           ipv2
                             `cast`
                           (Nth:2
                                (Nth:3
                                     (Nth:2
                                          (Trans
                                               (((GHC.Prim.State#
                                                    (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                         <GHC.Prim.RealWorld>_N))_R
                                                 ->_R ((#,#)
                                                         <'GHC.Types.TupleRep '[]>_R
                                                         <'GHC.Types.LiftedRep>_R
                                                         (GHC.Prim.State#
                                                            (Control.Monad.Primitive.D:R:PrimStateST[0]
                                                                 <GHC.Prim.RealWorld>_N))_R
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Data.Aeson.Types.Internal.Value>_R)_R)
                                                ->_R <GHC.ST.ST
                                                        GHC.Prim.RealWorld
                                                        (Data.Primitive.Array.MutableArray
                                                           (Control.Monad.Primitive.PrimState
                                                              (GHC.ST.ST GHC.Prim.RealWorld))
                                                           Data.Aeson.Types.Internal.Value)>_R)
                                               (<GHC.ST.STRep
                                                   GHC.Prim.RealWorld
                                                   (Data.Primitive.Array.MutableArray
                                                      (Control.Monad.Primitive.PrimState
                                                         (GHC.ST.ST GHC.Prim.RealWorld))
                                                      Data.Aeson.Types.Internal.Value)>_R
                                                ->_R GHC.ST.N:ST[0]
                                                         <GHC.Prim.RealWorld>_N
                                                         <Data.Primitive.Array.MutableArray
                                                            (Control.Monad.Primitive.PrimState
                                                               (GHC.ST.ST GHC.Prim.RealWorld))
                                                            Data.Aeson.Types.Internal.Value>_R)))))
                           (GHC.Base.map
                              @ (Database.Persist.Class.PersistEntity.Entity Model.Host)
                              @ Data.Aeson.Types.Internal.Value
                              Model.$fToJSONEntity4_$ctoJSON
                              ipv1)
                           0#
                           ipv3
                             `cast`
                           (GHC.Prim.MutableArray#
                              (Control.Monad.Primitive.D:R:PrimStateST[0] <GHC.Prim.RealWorld>_N)
                              <Data.Aeson.Types.Internal.Value>_R)_R
                           0#
                           0# }) of ds2 { (#,#) ipv2 ipv3 ->
                 case Handler.Host.getHostR3 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 case Data.Aeson.Types.Internal.$w$sunsafeInsert
                        @ Data.Aeson.Types.Internal.Value
                        ww1
                        ww2
                        ww3
                        (Data.Aeson.Types.Internal.Array ipv3)
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 Handler.Host.getHostR2 ipv dt } } } }) -}
6e36a0d9b6f17682832e8a23ece586a8
  getHostR10 ::
    (Database.Persist.Class.PersistEntity.PersistEntity Model.Host,
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
     Data.Type.Equality.~
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *))
  {- Strictness: m,
     Unfolding: ((Model.$fPersistEntityHost,
                  Handler.Host.getHostR_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
de4b69b825afd2e702d2e2415dcc8e37
  getHostR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> Data.Aeson.Types.Internal.Object
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
5d7c67d238cff2ae46e20c8d12abebbb
  getHostR3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   Handler.Host.getHostR4) -}
b8686975c4dea49d11dd5380cc36a106
  getHostR4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("resp"#) -}
e35ba7bbb73792870084facb294e3946
  getHostR5 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerFor
         Foundation.App
         [Database.Persist.Class.PersistEntity.Entity Model.Host]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerFor
                           Foundation.App
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.ConduitM
                                 ()
                                 (Database.Persist.Class.PersistEntity.Entity Model.Host)
                                 GHC.Types.IO
                                 ()))
                   = Handler.Host.getHostR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerFor Foundation.App>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.ConduitM
                                ()
                                (Database.Persist.Class.PersistEntity.Entity Model.Host)
                                GHC.Types.IO
                                ())>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App Foundation.App)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerFor[0]
                             <Foundation.App>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.ConduitM
                                   ()
                                   (Database.Persist.Class.PersistEntity.Entity Model.Host)
                                   GHC.Types.IO
                                   ())>_R)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.ConduitM
                                  ()
                                  (Database.Persist.Class.PersistEntity.Entity Model.Host)
                                  GHC.Types.IO
                                  ())>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.ConduitM
                          ()
                          (Database.Persist.Class.PersistEntity.Entity Model.Host)
                          GHC.Types.IO
                          ())
                     @ [Database.Persist.Class.PersistEntity.Entity Model.Host]
                     Control.Monad.IO.Unlift.$fMonadUnliftIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1 @ Model.Host))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                <Foundation.App>_N
                                <[Database.Persist.Class.PersistEntity.Entity Model.Host]>_R)))) -}
5887ee191bf60bee198a0a0d33f262c0
  getHostR6 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Model.Host]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Host)
                   Handler.Host.getHostR7
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt Model.Host))) -}
a3b34e6fc6399d1cc27d329202aed42f
  getHostR7 ::
    Database.Persist.Class.PersistEntity.SelectOpt Model.Host
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Model.Host
                   @ Data.Text.Internal.Text
                   Handler.Host.getHostR8
                     `cast`
                   (Sym (Model.D:R:EntityFieldHosttyp0[0]) <Data.Text.Internal.Text>_N)) -}
0e43b7355a233c483cc88b288cf21b60
  getHostR8 :: Model.R:EntityFieldHosttyp Data.Text.Internal.Text
  {- HasNoCafRefs, Strictness: m3,
     Unfolding: (Model.HostNome
                   @ Data.Text.Internal.Text
                   Handler.Host.getHostR9
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
4ecd5e312baab8c3150984fec89d898d
  getHostR9 ::
    (Data.Text.Internal.Text :: *)
    GHC.Types.~~
    (Data.Text.Internal.Text :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
331d7cb4835d3786c597185b68f6a550
  getHostR_$d~~ ::
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
    GHC.Types.~~
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
800fcbdf9a0baa8384ed9e64c6786465
  getHostR_$s$wfoldlM_loop ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.Int#
    -> GHC.Prim.MutableArray#
         GHC.Prim.RealWorld Data.Aeson.Types.Internal.Value
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Vector.Vector Data.Aeson.Types.Internal.Value #)
  {- Arity: 6, Strictness: <S,U><S,1*U><L,U><S,U><L,U><L,U> -}
9638ccd648117f3a91f04e2a123e581b
  getHostR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerFor Foundation.App)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.ConduitM
            ()
            (Database.Persist.Class.PersistEntity.Entity Model.Host)
            GHC.Types.IO
            ()))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Model.Host
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ GHC.Types.IO
                   Handler.Host.getHostR10
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity Model.Host>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Model.D:R:PersistEntityBackendHost[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Yesod.Core.Types.$fMonadIOHandlerFor @ Foundation.App)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Model.Host))
                   Handler.Host.getHostR6) -}
b6a35c395fae9f8a17754e2c84902d43
  postHostR :: Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Host.postHostR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                     (Sym (Yesod.Core.Types.N:HandlerFor[0]
                               <Foundation.App>_N <Data.Aeson.Types.Internal.Value>_R))) -}
732968bc37002c8a5f6d4923c3f79d54
  postHostR1 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2,
     Strictness: <L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Handler.Host.postHostR_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerFor[0]
                            <Foundation.App>_N <Model.Host>_R)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Model.Host>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ((Database.Persist.Sql.Run.runSqlPool
                          @ Foundation.Handler
                          @ Database.Persist.Sql.Types.Internal.SqlBackend
                          @ (Database.Persist.Class.PersistEntity.Key Model.Host)
                          (Yesod.Core.Types.$fMonadUnliftIOHandlerFor @ Foundation.App)
                          Foundation.$fYesodAuthApp7
                            `cast`
                          (GHC.Classes.(%,%)
                             <Database.Persist.Class.PersistStore.IsPersistBackend
                                Database.Persist.Sql.Types.Internal.SqlBackend>_N
                             ((Data.Type.Equality.~)
                                <*>_N
                                (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                                <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                          (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                             @ (Yesod.Core.Types.HandlerFor Foundation.App)
                             @ Model.Host
                             (Yesod.Core.Types.$fMonadIOHandlerFor @ Foundation.App)
                             Handler.Host.getHostR10
                               `cast`
                             (GHC.Classes.(%,%)
                                <Database.Persist.Class.PersistEntity.PersistEntity Model.Host>_N
                                ((Data.Type.Equality.~)
                                   <*>_N
                                   (Sym (Model.D:R:PersistEntityBackendHost[0]))
                                   (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                             ipv1)
                          (case r `cast`
                                (Nth:2
                                     (Trans
                                          ((Yesod.Core.Types.HandlerData
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N))
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                        <Foundation.App>_N)))_R
                                           ->_R <GHC.Types.IO
                                                   (Yesod.Core.Types.RunHandlerEnv
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App))
                                                      (Yesod.Core.Class.Handler.HandlerSite
                                                         (Yesod.Core.Types.HandlerFor
                                                            Foundation.App)))>_R)
                                          (<Yesod.Core.Types.HandlerData
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))
                                              (Yesod.Core.Class.Handler.HandlerSite
                                                 (Yesod.Core.Types.HandlerFor Foundation.App))>_R
                                           ->_R GHC.Types.N:IO[0]
                                                    <Yesod.Core.Types.RunHandlerEnv
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))
                                                       (Yesod.Core.Class.Handler.HandlerSite
                                                          (Yesod.Core.Types.HandlerFor
                                                             Foundation.App))>_R))) of wild { Yesod.Core.Types.HandlerData ds2 ds3 dt155 dt156 ->
                           case ds3 of wild1 { Yesod.Core.Types.RunHandlerEnv ds4 ds5 ds7 ds6 ds8 ds9 ds10 ds11 ds12 ->
                           case ds6
                                  `cast`
                                (Nth:3
                                     (Nth:3
                                          (Trans
                                               (Nth:3
                                                    (Trans
                                                         (<Yesod.Core.Types.HandlerData
                                                             Foundation.App Foundation.App>_R
                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                        <Yesod.Core.Class.Handler.HandlerSite
                                                                           (Yesod.Core.Types.HandlerFor
                                                                              Foundation.App)>_R))
                                                         (<Yesod.Core.Types.HandlerData
                                                             Foundation.App Foundation.App>_R
                                                          ->_R (GHC.Types.IO
                                                                  (Sub (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerFor[0]
                                                                            <Foundation.App>_N)))_R)))
                                               (GHC.Types.N:IO[0]
                                                    <Foundation.App>_R)))) of wild2 { Foundation.App ds ds13 ds14 ds15 ds16 ->
                           ds14 } } }))
                         `cast`
                       (Yesod.Core.Types.N:HandlerFor[0]
                            <Foundation.App>_N
                            <Database.Persist.Class.PersistEntity.Key Model.Host>_R)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <Database.Persist.Class.PersistEntity.Key Model.Host>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Handler.Host.postHostR2 ipv2 ipv3 } }) -}
4b3b8ac503395d7ca6213d77258028c0
  postHostR2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> Database.Persist.Class.PersistEntity.Key Model.Host
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 2, Strictness: <B,U><B,1*U(U)>x, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Model.Host) ->
                 case w1
                        `cast`
                      (Trans
                           (Model.D:R:KeyHost0[0])
                           (Trans
                                (Model.N:R:KeyHost[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww { GHC.Int.I64# ww1 ->
                 Handler.Host.$wlvl w ww1 }) -}
b6a05132fefa83138520b4eefe27323e
  postHostR_ds ::
    Yesod.Core.Types.HandlerFor Foundation.App Model.Host
  {- Unfolding: (Yesod.Core.Json.requireJsonBody
                   @ (Yesod.Core.Types.HandlerFor Foundation.App)
                   @ Model.Host
                   (Yesod.Core.Class.Handler.$fMonadHandlerHandlerFor
                      @ Foundation.App)
                   Model.$fFromJSONHost) -}
c4d5f1f642538a2343a536c3d6eaa1d6
  putHostIdR ::
    Model.HostId -> Foundation.Handler Data.Aeson.Types.Internal.Value
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Host.putHostIdR1
                  `cast`
                (<Model.HostId>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData Foundation.App Foundation.App>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Data.Aeson.Types.Internal.Value>_R))
                          (Sym (Yesod.Core.Types.N:HandlerFor[0]
                                    <Foundation.App>_N <Data.Aeson.Types.Internal.Value>_R))) -}
1d232301349a88e219b62eed4ce06bee
  putHostIdR1 ::
    Model.HostId
    -> Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3,
     Strictness: <L,U><L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (hid :: Model.HostId)
                   (eta :: Yesod.Core.Types.HandlerData Foundation.App Foundation.App)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Handler.Host.putHostIdR2 eta eta1 hid) -}
8d129ff20f471215128e0369afe9112b
  putHostIdR2 ::
    Yesod.Core.Types.HandlerData Foundation.App Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> Model.HostId
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Aeson.Types.Internal.Value #)
  {- Arity: 3,
     Strictness: <L,U(U,U(U,U,U,U(U,U,U(U,U,U(U),U,U(U),U(U,U,U),U),U,U),U,U,U,U,U),U,U)><S,U><L,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

